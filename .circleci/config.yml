version: 2.1

orbs:
  python: circleci/python@2.1.1
  snyk: snyk/snyk@1.1.2

jobs:
  setup:
    executor:
      name: python/default
      tag: "3.10.15"
    steps:
      - checkout
      - run:
          name: Install uv
          command: curl -LsSf https://astral.sh/uv/install.sh | sh
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - "*"

  snyk_app_scan:
    executor:
      name: python/default
      tag: "3.10.15"
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Export dependencies
          command: |
            uv sync
            uv export > requirements_lock.txt
            uv pip compile requirements_lock.txt > requirements.txt
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: true
          severity-threshold: high
          token-variable: SNYK_TOKEN

  test:
    executor:
      name: python/default
      tag: "3.10.15"
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Install dependencies
          command: uv sync
      - run:
          name: Set environment
          command: |
            echo 'export ALBERT_BASE_URL="https://app.albertinvent.com"' >> "$BASH_ENV"
      - run:
          name: Check formatting
          command: |
            uv run ruff format . --check
      - run:
          name: Check lints
          command: |
            uv run ruff check .
      - run:
          name: Run pytest
          command: |
            uv run pytest

  publish:
    executor:
      name: python/default
      tag: "3.10.15"
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Build package
          command: uv build
      - run:
          name: Publish package
          command: |
            uv publish --publish-url $ALBERT_PYPI_URL --username $UV_INDEX_ALBERT_USERNAME \
              --password $UV_INDEX_ALBERT_PASSWORD

  validate_version_bump:
    executor:
      name: python/default
      tag: "3.10.15"
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Check is PR
          command: |
            if [[ -z ${CIRCLE_PULL_REQUEST} ]]; then
              echo "Not a PR, exiting job"
              circleci-agent step halt
            fi
      - run:
          name: Validate version bump
          command: |
            GITHUB_PR_URL=$(echo https://api.github.com/repos/${CIRCLE_PULL_REQUEST:19} | sed "s/\/pull\//\/pulls\//")
            BASE_BRANCH=$(curl -s -H "Authorization: Bearer ${GITHUB_TOKEN}" ${GITHUB_PR_URL} | jq ".base.ref" | tr -d "\042")
            if [[ $BASE_BRANCH == "main" ]]; then
              echo "Validating version bump for PR into '${BASE_BRANCH}'"
              python scripts/validate_version_bump.py --base $BASE_BRANCH
            else
              echo "Skipping version bump check for non-production base branch '${BASE_BRANCH}'"
            fi

workflows:
  main:
    jobs:
      - setup:
          name: Setup
          context: ds-dev
      - test:
          name: Test
          context: ds-dev
          requires:
            - Setup
      - validate_version_bump:
          name: Validate Version Bump
          context: ds-dev
          requires:
            - Setup
      - snyk_app_scan:
          name: Snyk App Scan
          context: dev
          requires:
            - Setup
      - publish:
          name: Publish
          context: ds-dev
          requires:
            - Setup
          filters:
            branches:
              only: ["main"]
