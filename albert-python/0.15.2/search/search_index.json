{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Albert Python","text":""},{"location":"#installation","title":"Installation","text":"<p>You can install Albert Python using pip:</p> <pre><code>pip install albert\n</code></pre> <p>The latest stable release is available on PyPI.</p>"},{"location":"#overview","title":"Overview","text":"<p>Albert Python is built around two main concepts:</p> <ol> <li> <p>Resource Models: Represent individual entities like <code>InventoryItem</code>, <code>Project</code>, <code>Company</code>, and <code>Tag</code>. These are all controlled using Pydantic.</p> </li> <li> <p>Resource Collections: Provide methods to interact with the API endpoints related to a specific resource, such as listing, creating, updating, and deleting resources.</p> </li> </ol>"},{"location":"#resource-models","title":"Resource Models","text":"<p>Resource Models represent the data structure of individual resources. They encapsulate the attributes and behaviors of a single resource. For example, an <code>InventoryItem</code> has attributes like <code>name</code>, <code>description</code>, <code>category</code>, and <code>tags</code>.</p>"},{"location":"#resource-collections","title":"Resource Collections","text":"<p>Resource Collections act as managers for Resource Models. They provide methods for performing CRUD operations (Create, Read, Update, Delete) on the resources. For example, the <code>InventoryCollection</code> class has methods like create, <code>get_by_id()</code>, <code>list()</code>, <code>update()</code>, and <code>delete()</code>. <code>list()</code> methods generally accept parameters to narrow the query to use it like a search.</p>"},{"location":"#usage","title":"Usage","text":""},{"location":"#initialization","title":"Initialization","text":"<p>To use Albert Python, you need to initialize the Albert client with your base URL and either a bearer token (which will expire) or client credientals, which will enable automatic token refresh.</p> <pre><code>import os\n\nfrom albert import Albert, ClientCredentials\n\n# Initialize the client using a JWT token\nclient = Albert(\n    base_url=\"https://app.albertinvent.com/\", # example value\n    token = os.getenv(\"ALBERT_TOKEN\") # example value\n)\n\n\n# Initalize using an API key from environment\n\nclient = Albert(\n    client_credentials=ClientCredentials.from_env(\n        client_id_env=\"ALBERT_CLIENT_ID\",\n        client_secret_env=\"ALBERT_CLIENT_SECRET\",\n    )\n)\n\n#  By default, if environment variables `ALBERT_CLIENT_ID` and `ALBERT_CLIENT_SECRET` are set, you can simply do:\n\nclient = Albert()\n</code></pre>"},{"location":"#working-with-resource-collections-and-models","title":"Working with Resource Collections and Models","text":""},{"location":"#example-inventory-collection","title":"Example: Inventory Collection","text":"<p>You can interact with inventory items using the <code>InventoryCollection</code> class. Here is an example of how to create a new inventory item, list all inventory items, and fetch an inventory item by its ID.</p> <pre><code>from albert import Albert\nfrom albert.resources.inventory import InventoryItem, InventoryCategory, UnitCategory\n\nclient = Albert()\n\n# Create a new inventory item\nnew_inventory = InventoryItem(\n    name=\"Goggles\",\n    description=\"Safety Equipment\",\n    category=InventoryCategory.EQUIPMENT,\n    unit_category=UnitCategory.UNITS,\n    tags=[\"safety\", \"equipment\"],\n    company=\"Company ABC\"\n)\ncreated_inventory = client.inventory.create(inventory_item=new_inventory)\n\n# List all inventory items\nall_inventories = client.inventory.list()\n\n# Fetch an inventory item by ID\ninventory_id = \"INV1\"\ninventory_item = client.inventory.get_by_id(inventory_id=inventory_id)\n\n# Search an inventory item by name\ninventory_item = inventory_collection.list(name=\"Acetone\")\n</code></pre>"},{"location":"#entitylink-serializeasentitylink","title":"EntityLink / SerializeAsEntityLink","text":"<p>We introduced the concept of a <code>EntityLink</code> to represent the foreign key references you can find around the Albert API. Payloads to the API expect these refrences in the <code>EntityLink</code> format (e.g., <code>{\"id\":x}</code>). However, as a convenience, you will see some value types defined as <code>SerializeAsEntityLink</code>, and then another resource name (e.g., <code>SerializeAsEntityLink[Location]</code>). This allows a user to make that reference either to a base and link or to the actual other entity, and the SDK will handle the serialization for you! For example:</p> <pre><code>from albert import Albert\nfrom albert.resources.project import Project\nfrom albert.resources.base import EntityLink\n\nclient = Albert()\n\nmy_location = next(client.locations.list(name=\"My Location\")\n\np = Project(\n    description=\"Example project\",\n    locations=[my_location]\n)\n\n# Equivalent to\n\np = Project(\n    description=\"Example project\",\n    locations=[EntityLink(id=my_location.id)]\n)\n\n# Equivalent to\n\np = Project(\n    description=\"Example project\",\n    locations=[my_location.to_entity_link()]\n)\n</code></pre>"},{"location":"albert/","title":"Albert Client","text":""},{"location":"albert/#albert.albert.Albert","title":"albert.albert.Albert","text":"<pre><code>Albert(\n    *,\n    base_url: str | None = None,\n    token: str | None = None,\n    client_credentials: ClientCredentials | None = None,\n    retries: int | None = None,\n    session: AlbertSession | None = None,\n)\n</code></pre> <p>Albert is the main client class for interacting with the Albert API.</p> <p>Parameters:</p> Name Type Description Default <code>base_url</code> <code>str</code> <p>The base URL of the Albert API (default is \"https://app.albertinvent.com\").</p> <code>None</code> <code>token</code> <code>str</code> <p>The token for authentication (default is read from environment variable \"ALBERT_TOKEN\").</p> <code>None</code> <code>client_credentials</code> <code>ClientCredentials | None</code> <p>The client credentials for programmatic authentication. Client credentials can be read from the environment by <code>ClientCredentials.from_env()</code>.</p> <code>None</code> <code>retries</code> <code>int</code> <p>The maximum number of retries for failed requests (default is None).</p> <code>None</code> <code>session</code> <code>AlbertSession</code> <p>An optional preconfigured session to use for API requests. If not provided, a default session is created using the other parameters or environment variables. When supplied, <code>base_url</code>, <code>token</code> and <code>client_credentials</code> are ignored.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>session</code> <code>AlbertSession</code> <p>The session for API requests, with a base URL set.</p> <code>projects</code> <code>ProjectCollection</code> <p>The project collection instance.</p> <code>tags</code> <code>TagCollection</code> <p>The tag collection instance.</p> <code>inventory</code> <code>InventoryCollection</code> <p>The inventory collection instance.</p> <code>companies</code> <code>CompanyCollection</code> <p>The company collection instance.</p> Source code in <code>src/albert/albert.py</code> <pre><code>def __init__(\n    self,\n    *,\n    base_url: str | None = None,\n    token: str | None = None,\n    client_credentials: ClientCredentials | None = None,\n    retries: int | None = None,\n    session: AlbertSession | None = None,\n):\n    self.session = session or AlbertSession(\n        base_url=base_url or os.getenv(\"ALBERT_BASE_URL\") or \"https://app.albertinvent.com\",\n        token=token or os.getenv(\"ALBERT_TOKEN\"),\n        client_credentials=client_credentials or ClientCredentials.from_env(),\n        retries=retries,\n    )\n</code></pre>"},{"location":"albert/#albert.albert.Albert.session","title":"session","text":"<pre><code>session = session or AlbertSession(\n    base_url=base_url\n    or getenv(\"ALBERT_BASE_URL\")\n    or \"https://app.albertinvent.com\",\n    token=token or getenv(\"ALBERT_TOKEN\"),\n    client_credentials=client_credentials or from_env(),\n    retries=retries,\n)\n</code></pre>"},{"location":"albert/#albert.albert.Albert.projects","title":"projects","text":"<pre><code>projects: ProjectCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.attachments","title":"attachments","text":"<pre><code>attachments: AttachmentCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.tags","title":"tags","text":"<pre><code>tags: TagCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.inventory","title":"inventory","text":"<pre><code>inventory: InventoryCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.companies","title":"companies","text":"<pre><code>companies: CompanyCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.lots","title":"lots","text":"<pre><code>lots: LotCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.units","title":"units","text":"<pre><code>units: UnitCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.cas_numbers","title":"cas_numbers","text":"<pre><code>cas_numbers: CasCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.data_columns","title":"data_columns","text":"<pre><code>data_columns: DataColumnCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.data_templates","title":"data_templates","text":"<pre><code>data_templates: DataTemplateCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.un_numbers","title":"un_numbers","text":"<pre><code>un_numbers: UnNumberCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.users","title":"users","text":"<pre><code>users: UserCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.locations","title":"locations","text":"<pre><code>locations: LocationCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.lists","title":"lists","text":"<pre><code>lists: ListsCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.notebooks","title":"notebooks","text":"<pre><code>notebooks: NotebookCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.notes","title":"notes","text":"<pre><code>notes: NotesCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.custom_fields","title":"custom_fields","text":"<pre><code>custom_fields: CustomFieldCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.reports","title":"reports","text":"<pre><code>reports: ReportCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.roles","title":"roles","text":"<pre><code>roles: RoleCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.worksheets","title":"worksheets","text":"<pre><code>worksheets: WorksheetCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.tasks","title":"tasks","text":"<pre><code>tasks: TaskCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.templates","title":"templates","text":"<pre><code>templates: CustomTemplatesCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.parameter_groups","title":"parameter_groups","text":"<pre><code>parameter_groups: ParameterGroupCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.parameters","title":"parameters","text":"<pre><code>parameters: ParameterCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.property_data","title":"property_data","text":"<pre><code>property_data: PropertyDataCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.product_design","title":"product_design","text":"<pre><code>product_design: ProductDesignCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.storage_locations","title":"storage_locations","text":"<pre><code>storage_locations: StorageLocationsCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.pricings","title":"pricings","text":"<pre><code>pricings: PricingCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.files","title":"files","text":"<pre><code>files: FileCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.workflows","title":"workflows","text":"<pre><code>workflows: WorkflowCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.btdatasets","title":"btdatasets","text":"<pre><code>btdatasets: BTDatasetCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.btmodelsessions","title":"btmodelsessions","text":"<pre><code>btmodelsessions: BTModelSessionCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.btmodels","title":"btmodels","text":"<pre><code>btmodels: BTModelCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.btinsights","title":"btinsights","text":"<pre><code>btinsights: BTInsightCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.substances","title":"substances","text":"<pre><code>substances: SubstanceCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.links","title":"links","text":"<pre><code>links: LinksCollection\n</code></pre>"},{"location":"albert/#albert.albert.Albert.batch_data","title":"batch_data","text":"<pre><code>batch_data: BatchDataCollection\n</code></pre>"},{"location":"albert/#albert.utils.credentials.ClientCredentials","title":"albert.utils.credentials.ClientCredentials","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>Client authentication credentials for the Albert API.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Client authentication credentials for the Albert API.\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"secret\": {\n      \"format\": \"password\",\n      \"title\": \"Secret\",\n      \"type\": \"string\",\n      \"writeOnly\": true\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"secret\"\n  ],\n  \"title\": \"ClientCredentials\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>secret</code>                 (<code>SecretStr</code>)             </li> </ul>"},{"location":"albert/#albert.utils.credentials.ClientCredentials.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"albert/#albert.utils.credentials.ClientCredentials.secret","title":"secret","text":"<pre><code>secret: SecretStr\n</code></pre>"},{"location":"albert/#albert.utils.credentials.ClientCredentials.from_env","title":"from_env","text":"<pre><code>from_env(\n    *,\n    client_id_env: str = \"ALBERT_CLIENT_ID\",\n    client_secret_env: str = \"ALBERT_CLIENT_SECRET\",\n) -&gt; Union[ClientCredentials, None]\n</code></pre> <p>Read <code>ClientCredentials</code> from the environment.</p> <p>Returns None if the <code>client_id_env</code> and <code>client_secret_env</code> environment variables are not defined.</p> <p>Parameters:</p> Name Type Description Default <code>client_id_env</code> <code>str</code> <p>Name of the environment variable containing the client ID (defaults to \"ALBERT_CLIENT_ID\")</p> <code>'ALBERT_CLIENT_ID'</code> <code>client_secret_env</code> <code>str</code> <p>Name of the environment variable containing the client secret (defaults to \"ALBERT_CLIENT_SECRET\")</p> <code>'ALBERT_CLIENT_SECRET'</code> <p>Returns:</p> Type Description <code>ClientCredentials | None</code> <p>The client credentials obtained from the environment, if present.</p> Source code in <code>src/albert/utils/credentials.py</code> <pre><code>@classmethod\ndef from_env(\n    cls,\n    *,\n    client_id_env: str = \"ALBERT_CLIENT_ID\",\n    client_secret_env: str = \"ALBERT_CLIENT_SECRET\",\n) -&gt; Union[\"ClientCredentials\", None]:\n    \"\"\"Read `ClientCredentials` from the environment.\n\n    Returns None if the `client_id_env` and `client_secret_env` environment variables\n    are not defined.\n\n    Parameters\n    ----------\n    client_id_env : str\n        Name of the environment variable containing the client ID\n        (defaults to \"ALBERT_CLIENT_ID\")\n    client_secret_env : str\n        Name of the environment variable containing the client secret\n        (defaults to \"ALBERT_CLIENT_SECRET\")\n\n    Returns\n    -------\n    ClientCredentials | None\n        The client credentials obtained from the environment, if present.\n    \"\"\"\n    client_id = os.getenv(client_id_env)\n    client_secret = os.getenv(client_secret_env)\n    if client_id is not None and client_secret is not None:\n        return cls(id=client_id, secret=client_secret)\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#overview","title":"Overview","text":"<p>The SDK is built around two main concepts:</p> <ol> <li> <p>Resource Models: Represent individual entities like InventoryItem, Project, Company, and Tag. These are all controlled using Pydantic.</p> </li> <li> <p>Resource Collections: Provide methods to interact with the API endpoints related to a specific resource, such as listing, creating, updating, and deleting resources.</p> </li> </ol>"},{"location":"getting-started/#resource-models","title":"Resource Models","text":"<p>Resource Models represent the data structure of individual resources. They encapsulate the attributes and behaviors of a single resource. For example, an <code>InventoryItem</code> has attributes like <code>name</code>, <code>description</code>, <code>category</code>, and <code>tags</code>.</p>"},{"location":"getting-started/#resource-collections","title":"Resource Collections","text":"<p>Resource Collections act as managers for Resource Models. They provide methods for performing CRUD operations (Create, Read, Update, Delete) on the resources. For example, the <code>InventoryCollection</code> class has methods like create, <code>get_by_id()</code>, <code>list()</code>, <code>update()</code>, and <code>delete()</code>. <code>list()</code> methods generally accept parameters to narrow the query to use it like a search.</p>"},{"location":"getting-started/#usage","title":"Usage","text":""},{"location":"getting-started/#initialization","title":"Initialization","text":"<p>To use the SDK, you need to initialize the Albert client with your base URL and either a bearer token (which will expire) or client credientals, which will enable automatic token refresh.</p> <pre><code>from albert import Albert, ClientCredentials\n\n# Initialize the client using a JWT token\nclient = Albert(\n    base_url=\"https://app.albertinvent.com/\", # example value\n    token = os.getenv(\"ALBERT_TOKEN\") # example value\n)\n\n\n# Initalize using an API key from environment\n\nclient = Albert(\n    client_credentials=ClientCredentials.from_env(\n        client_id_env=\"ALBERT_CLIENT_ID\",\n        client_secret_env=\"ALBERT_CLIENT_SECRET\",\n    )\n)\n\n#  By default, if environment variables `ALBERT_CLIENT_ID` and `ALBERT_CLIENT_SECRET` are set you can simply do:\n\nclient = Albert()\n</code></pre>"},{"location":"getting-started/#working-with-resource-collections-and-models","title":"Working with Resource Collections and Models","text":""},{"location":"getting-started/#example-inventory-collection","title":"Example: Inventory Collection","text":"<p>You can interact with inventory items using the InventoryCollection class. Here is an example of how to create a new inventory item, list all inventory items, and fetch an inventory item by its ID.</p> <pre><code>from albert import Albert\nfrom albert.resources.inventory import InventoryItem, InventoryCategory, UnitCategory\n\nclient = Albert()\n\n# Create a new inventory item\nnew_inventory = InventoryItem(\n    name=\"Goggles\",\n    description=\"Safety Equipment\",\n    category=InventoryCategory.EQUIPMENT,\n    unit_category=UnitCategory.UNITS,\n    tags=[\"safety\", \"equipment\"],\n    company=\"Company ABC\"\n)\ncreated_inventory = client.inventory.create(inventory_item=new_inventory)\n\n# List all inventory items\nall_inventories = client.inventory.list()\n\n# Fetch an inventory item by ID\ninventory_id = \"INV1\"\ninventory_item = client.inventory.get_by_id(inventory_id=inventory_id)\n\n# Search an inventory item by name\ninventory_item = inventory_collection.list(name=\"Acetone\")\n</code></pre>"},{"location":"getting-started/#entitylink-serializeasentitylink","title":"EntityLink / SerializeAsEntityLink","text":"<p>We introduced the concept of a <code>EntityLink</code> to represent the foreign key references you can find around the Albert API. Payloads to the API expect these refrences in the EntityLink format (e.g., <code>{\"id\":x}</code>). However, as a convenience, you will see some value types defined as <code>SerializeAsEntityLink</code>, and then another resource name (e.g., <code>SerializeAsEntityLink[Location]</code>). This allows a user to make that reference either to a base and link or to the actual other entity, and the SDK will handle the serialization for you! For example:</p> <pre><code>from albert import Albert\nfrom albert.resources.project import Project\nfrom albert.resources.base import EntityLink\n\nclient = Albert()\n\nmy_location = next(client.locations.list(name=\"My Location\")\n\np = Project(\n    description=\"Example project\",\n    locations=[my_location]\n)\n\n# Equivalent to\n\np = Project(\n    description=\"Example project\",\n    locations=[EntityLink(id=my_location.id)]\n)\n</code></pre>"},{"location":"getting-started/#custom-fields-lists","title":"Custom Fields &amp; Lists","text":"<p><code>CustomFields</code> allow you to store custom metadata on a <code>Project</code>, <code>InventoryItem</code>, <code>User</code>, <code>BaseTask</code> (Tasks), and <code>Lot</code>. The <code>FieldType</code> used determines the shape of the medatdata field's value. If the <code>FieldType</code> is <code>LIST</code>, then the <code>FieldCategory</code> defines the ACL needed to add new allowed items to the given list. A <code>FieldCategory.USER_DEFINED</code> allows general users to add new items to the list whereas <code>FieldCategory.BUSINESS_DEFINED</code> allows only admin users to add new allowed values.</p>"},{"location":"getting-started/#creating-custom-fields","title":"Creating Custom Fields","text":"<pre><code># Create some custom fields on projects\n# Let's add a stage-gate field, which is a single allowed value from a list, and an open text field for \"Project Justification\"\n\nfrom albert import Albert\nfrom albert.resources.custom_fields import CustomField, FieldCategory, FieldType, ServiceType\nfrom albert.resources.lists import ListItem\nfrom albert.resources.project import Project\n\nstage_gate_field = CustomField(\n    name=\"stage_gate_status\",\n    display_name=\"Stage Gate\",\n    field_type=FieldType.LIST,\n    service=ServiceType.PROJECTS,\n    min=1,\n    max=1,\n    category=FieldCategory.BUSINESS_DEFINED # These are going to be defined by the business, not by any user\n)\n\njustification_field = CustomField(\n    name=\"justification\",\n    display_name=\"Project Justification\",\n    field_type=FieldType.STRING,\n    service=ServiceType.PROJECTS,\n)\n\nclient = Albert()\n\n\nclient.custom_fields.create(stage_gate_field)\nclient.custom_fields.create(justification_field)\n\n# Next, let's add some allowed values to the Stage Gate List (assumes user is an admin)\n\nstages = [\n    \"1. Discovery\",\n    \"2. Concept Validation\",\n    \"3. Proof of Concept\",\n    \"4. Prototype Development\",\n    \"5. Preliminary Evaluation\",\n    \"6. Feasibility Study\",\n    \"7. Optimization\",\n    \"8. Scale-Up\",\n    \"9. Regulatory Assessment\",\n]\n\nfor s in stages:\n    item = ListItem(\n        name=s\n        category=stage_gate_field.category,\n        list_type=stage_gate_field.name,\n    )\n    client.lists.create(list_item=item)\n\n# Now, let's say I want to add some Projects with this metadata.\n\np = Project(\n    description=\"Example project\",\n    locations=[next(client.locations.list(name=\"My Location\"))],\n    metadata = {\n        stage_gate_field.name: [client.lists.get_matching_item(list_type=stage_gate_field.name, name = stages[0]).to_entity_link()],\n        justification_field.name: \"To show an example of using custom fields.\"\n    }\n# Also note that the values of list metadata fields are list[EntityLink]\n)\n</code></pre>"},{"location":"collections/attachments/","title":"Attachments","text":""},{"location":"collections/attachments/#albert.collections.attachments.AttachmentCollection","title":"albert.collections.attachments.AttachmentCollection","text":"<pre><code>AttachmentCollection(*, session)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>AttachmentCollection is a collection class for managing Attachment entities in the Albert platform.</p> <p>Methods:</p> Name Description <code>attach_file_to_note</code> <p>Attaches an already uploaded file to a note.</p> <code>delete</code> <p>Deletes an attachment by ID.</p> <code>upload_and_attach_file_as_note</code> <p>Uploads a file and attaches it to a new note. A user can be tagged in the note_text string by using f-string and the User.to_note_mention() method.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/attachments.py</code> <pre><code>def __init__(self, *, session):\n    super().__init__(session=session)\n    self.base_path = f\"/api/{AttachmentCollection._api_version}/attachments\"\n</code></pre>"},{"location":"collections/attachments/#albert.collections.attachments.AttachmentCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/attachments'\n</code></pre>"},{"location":"collections/attachments/#albert.collections.attachments.AttachmentCollection.attach_file_to_note","title":"attach_file_to_note","text":"<pre><code>attach_file_to_note(\n    *,\n    note_id: str,\n    file_name: str,\n    file_key: str,\n    category: FileCategory = OTHER,\n) -&gt; Attachment\n</code></pre> <p>Attaches an already uploaded file to a note.</p> <p>Parameters:</p> Name Type Description Default <code>note_id</code> <code>str</code> <p>The ID of the note to attach the file to.</p> required <code>file_name</code> <code>str</code> <p>The name of the file to attach.</p> required <code>file_key</code> <code>str</code> <p>The unique key of the file to attach (the returned upload name).</p> required <code>category</code> <code>FileCategory</code> <p>The type of file, by default FileCategory.OTHER</p> <code>OTHER</code> <p>Returns:</p> Type Description <code>Attachment</code> <p>The related attachment object.</p> Source code in <code>src/albert/collections/attachments.py</code> <pre><code>def attach_file_to_note(\n    self,\n    *,\n    note_id: str,\n    file_name: str,\n    file_key: str,\n    category: FileCategory = FileCategory.OTHER,\n) -&gt; Attachment:\n    \"\"\"Attaches an already uploaded file to a note.\n\n    Parameters\n    ----------\n    note_id : str\n        The ID of the note to attach the file to.\n    file_name : str\n        The name of the file to attach.\n    file_key : str\n        The unique key of the file to attach (the returned upload name).\n    category : FileCategory, optional\n        The type of file, by default FileCategory.OTHER\n\n    Returns\n    -------\n    Attachment\n        The related attachment object.\n    \"\"\"\n    attachment = Attachment(\n        parent_id=note_id, name=file_name, key=file_key, namespace=\"result\", category=category\n    )\n    response = self.session.post(\n        url=self.base_path,\n        json=attachment.model_dump(by_alias=True, mode=\"json\", exclude_unset=True),\n    )\n    return Attachment(**response.json())\n</code></pre>"},{"location":"collections/attachments/#albert.collections.attachments.AttachmentCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes an attachment by ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the attachment to delete.</p> required Source code in <code>src/albert/collections/attachments.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"Deletes an attachment by ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the attachment to delete.\n    \"\"\"\n    self.session.delete(f\"{self.base_path}/{id}\")\n</code></pre>"},{"location":"collections/attachments/#albert.collections.attachments.AttachmentCollection.upload_and_attach_file_as_note","title":"upload_and_attach_file_as_note","text":"<pre><code>upload_and_attach_file_as_note(\n    parent_id: str,\n    file_data: IO,\n    note_text: str = \"\",\n    file_name: str = \"\",\n) -&gt; Note\n</code></pre> <p>Uploads a file and attaches it to a new note. A user can be tagged in the note_text string by using f-string and the User.to_note_mention() method. This allows for easy tagging and referencing of users within notes. example: f\"Hello {tagged_user.to_note_mention()}!\"</p> <p>Parameters:</p> Name Type Description Default <code>parent_id</code> <code>str</code> <p>The ID of the parent entity onto which the note will be attached.</p> required <code>file_data</code> <code>IO</code> <p>The file data to upload.</p> required <code>note_text</code> <code>str</code> <p>Any additional text to add to the note, by default \"\"</p> <code>''</code> <code>file_name</code> <code>str</code> <p>The name of the file, by default \"\"</p> <code>''</code> <p>Returns:</p> Type Description <code>Note</code> <p>The created note.</p> Source code in <code>src/albert/collections/attachments.py</code> <pre><code>def upload_and_attach_file_as_note(\n    self, parent_id: str, file_data: IO, note_text: str = \"\", file_name: str = \"\"\n) -&gt; Note:\n    \"\"\"Uploads a file and attaches it to a new note. A user can be tagged in the note_text string by using f-string and the User.to_note_mention() method.\n    This allows for easy tagging and referencing of users within notes. example: f\"Hello {tagged_user.to_note_mention()}!\"\n\n    Parameters\n    ----------\n    parent_id : str\n        The ID of the parent entity onto which the note will be attached.\n    file_data : IO\n        The file data to upload.\n    note_text : str, optional\n        Any additional text to add to the note, by default \"\"\n    file_name : str, optional\n        The name of the file, by default \"\"\n\n    Returns\n    -------\n    Note\n        The created note.\n    \"\"\"\n    file_type = mimetypes.guess_type(file_name)[0]\n    file_collection = self._get_file_collection()\n    note_collection = self._get_note_collection()\n\n    file_collection.sign_and_upload_file(\n        data=file_data,\n        name=file_name,\n        namespace=FileNamespace.RESULT.value,\n        content_type=file_type,\n    )\n    file_info = file_collection.get_by_name(\n        name=file_name, namespace=FileNamespace.RESULT.value\n    )\n    note = Note(\n        parent_id=parent_id,\n        note=note_text,\n    )\n    registered_note = note_collection.create(note=note)\n    self.attach_file_to_note(\n        note_id=registered_note.id,\n        file_name=file_name,\n        file_key=file_info.name,\n    )\n    return note_collection.get_by_id(id=registered_note.id)\n</code></pre>"},{"location":"collections/base/","title":"Base","text":""},{"location":"collections/base/#albert.collections.base.BaseCollection","title":"albert.collections.base.BaseCollection","text":"<pre><code>BaseCollection(*, session: AlbertSession)\n</code></pre> <p>BaseCollection is the base class for all collection classes.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert API Session instance.</p> required <p>Attributes:</p> Name Type Description <code>session</code> Source code in <code>src/albert/collections/base.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    self.session = session\n</code></pre>"},{"location":"collections/base/#albert.collections.base.BaseCollection.session","title":"session","text":"<pre><code>session = session\n</code></pre>"},{"location":"collections/batch_data/","title":"Batch Data","text":""},{"location":"collections/batch_data/#albert.collections.batch_data.BatchDataCollection","title":"albert.collections.batch_data.BatchDataCollection","text":"<pre><code>BatchDataCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>BatchDataCollection is a collection class for managing BatchData entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create_batch_data</code> <p>Create a new batch data entry.</p> <code>get</code> <p>Retrieve BatchData by ID.</p> <code>update_used_batch_amounts</code> <p>Update the used batch amounts for a given task ID.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/batch_data.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the BatchDataCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{BatchDataCollection._api_version}/batchdata\"\n</code></pre>"},{"location":"collections/batch_data/#albert.collections.batch_data.BatchDataCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/batchdata'\n</code></pre>"},{"location":"collections/batch_data/#albert.collections.batch_data.BatchDataCollection.create_batch_data","title":"create_batch_data","text":"<pre><code>create_batch_data(*, task_id: TaskId)\n</code></pre> <p>Create a new batch data entry.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>TaskId</code> <p>The ID of the task for which the batch data is being created.</p> required <p>Returns:</p> Type Description <code>BatchData</code> <p>The created BatchData object.</p> Source code in <code>src/albert/collections/batch_data.py</code> <pre><code>def create_batch_data(self, *, task_id: TaskId):\n    \"\"\"\n    Create a new batch data entry.\n\n    Parameters\n    ----------\n    task_id : TaskId\n        The ID of the task for which the batch data is being created.\n\n    Returns\n    -------\n    BatchData\n        The created BatchData object.\n    \"\"\"\n    url = f\"{self.base_path}\"\n    response = self.session.post(url, json={\"parentId\": task_id})\n    return BatchData(**response.json())\n</code></pre>"},{"location":"collections/batch_data/#albert.collections.batch_data.BatchDataCollection.get","title":"get","text":"<pre><code>get(\n    *,\n    id: TaskId,\n    type: BatchDataType = TASK_ID,\n    limit: int = 100,\n    start_key: str | None = None,\n    order_by: OrderBy = DESCENDING,\n) -&gt; BatchData\n</code></pre> <p>Retrieve BatchData by ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>TaskId</code> <p>Unique Id of the selected type.</p> required <code>type</code> <code>BatchDataType</code> <p>Type of Id for which BatchData will be fetched.</p> <code>TASK_ID</code> <code>limit</code> <code>int</code> <p>The maximum number of list entities to return.</p> <code>100</code> <code>start_key</code> <code>str</code> <p>The primary key of the first item that this operation will evaluate.</p> <code>None</code> <code>order_by</code> <code>OrderBy</code> <p>The order by which to sort the results, by default OrderBy.DESCENDING</p> <code>DESCENDING</code> <p>Returns:</p> Type Description <code>BatchData</code> <p>The BatchData object.</p> Source code in <code>src/albert/collections/batch_data.py</code> <pre><code>def get(\n    self,\n    *,\n    id: TaskId,\n    type: BatchDataType = BatchDataType.TASK_ID,\n    limit: int = 100,\n    start_key: str | None = None,\n    order_by: OrderBy = OrderBy.DESCENDING,\n) -&gt; BatchData:\n    \"\"\"\n    Retrieve BatchData by ID.\n\n    Parameters\n    ----------\n    id : TaskId\n        Unique Id of the selected type.\n    type : BatchDataType\n        Type of Id for which BatchData will be fetched.\n    limit : int, optional\n        The maximum number of list entities to return.\n    start_key : str, optional\n        The primary key of the first item that this operation will evaluate.\n    order_by : OrderBy, optional\n        The order by which to sort the results, by default OrderBy.DESCENDING\n    Returns\n    ------\n    BatchData\n        The BatchData object.\n    \"\"\"\n    params = {\n        \"id\": id,\n        \"limit\": limit,\n        \"type\": type,\n        \"startKey\": start_key,\n        \"orderBy\": order_by,\n    }\n    response = self.session.get(self.base_path, params=params)\n    return BatchData(**response.json())\n</code></pre>"},{"location":"collections/batch_data/#albert.collections.batch_data.BatchDataCollection.update_used_batch_amounts","title":"update_used_batch_amounts","text":"<pre><code>update_used_batch_amounts(\n    *, task_id: str, patches=list[BatchValuePatchPayload]\n) -&gt; None\n</code></pre> <p>Update the used batch amounts for a given task ID.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> <p>The ID of the task to update.</p> required <code>patches</code> <code>list[BatchValuePatchPayload]</code> <p>The patch payloads containing the data to update.</p> <code>list[BatchValuePatchPayload]</code> <p>Returns:</p> Type Description <code>None</code> <p>This method does not return anything.</p> Source code in <code>src/albert/collections/batch_data.py</code> <pre><code>def update_used_batch_amounts(\n    self, *, task_id: str, patches=list[BatchValuePatchPayload]\n) -&gt; None:\n    \"\"\"\n    Update the used batch amounts for a given task ID.\n\n    Parameters\n    ----------\n    task_id : str\n        The ID of the task to update.\n    patches : list[BatchValuePatchPayload]\n        The patch payloads containing the data to update.\n\n    Returns\n    -------\n    None\n        This method does not return anything.\n    \"\"\"\n    url = f\"{self.base_path}/{task_id}/values\"\n    self.session.patch(\n        url,\n        json=[\n            patch.model_dump(exclude_none=True, by_alias=True, mode=\"json\")\n            for patch in patches\n        ],\n    )\n</code></pre>"},{"location":"collections/btdataset/","title":"Breakthrough Datasets","text":""},{"location":"collections/btdataset/#albert.collections.btdataset.BTDatasetCollection","title":"albert.collections.btdataset.BTDatasetCollection","text":"<pre><code>BTDatasetCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>BTDatasetCollection is a collection class for managing Breakthrough dataset entities.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Attributes:</p> Name Type Description <code>base_path</code> <code>str</code> <p>The base path for btdataset API requests.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <p>Create a new BTDataset.</p> <code>get_by_id</code> <p>Get a BTDataset by ID.</p> <code>update</code> <p>Update a BTDataset.</p> <code>delete</code> <p>Delete a BTDataset by ID.</p> <code>get_all</code> <p>Get all items from the BTDataset collection.</p> Source code in <code>src/albert/collections/btdataset.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initialize the BTDatasetCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{BTDatasetCollection._api_version}/btdataset\"\n</code></pre>"},{"location":"collections/btdataset/#albert.collections.btdataset.BTDatasetCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/btdataset'\n</code></pre>"},{"location":"collections/btdataset/#albert.collections.btdataset.BTDatasetCollection.create","title":"create","text":"<pre><code>create(*, dataset: BTDataset) -&gt; BTDataset\n</code></pre> <p>Create a new BTDataset.</p> <p>Parameters:</p> Name Type Description Default <code>dataset</code> <code>BTDataset</code> <p>The BTDataset record to create.</p> required <p>Returns:</p> Type Description <code>BTDataset</code> <p>The created BTDataset.</p> Source code in <code>src/albert/collections/btdataset.py</code> <pre><code>@validate_call\ndef create(self, *, dataset: BTDataset) -&gt; BTDataset:\n    \"\"\"\n    Create a new BTDataset.\n\n    Parameters\n    ----------\n    dataset : BTDataset\n        The BTDataset record to create.\n\n    Returns\n    -------\n    BTDataset\n        The created BTDataset.\n    \"\"\"\n    response = self.session.post(\n        self.base_path,\n        json=dataset.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n    )\n    return BTDataset(**response.json())\n</code></pre>"},{"location":"collections/btdataset/#albert.collections.btdataset.BTDatasetCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: BTDatasetId) -&gt; BTDataset\n</code></pre> <p>Get a BTDataset by ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>BTDatasetId</code> <p>The Albert ID of the BTDataset.</p> required <p>Returns:</p> Type Description <code>BTDataset</code> <p>The retrived BTDataset.</p> Source code in <code>src/albert/collections/btdataset.py</code> <pre><code>@validate_call\ndef get_by_id(self, *, id: BTDatasetId) -&gt; BTDataset:\n    \"\"\"\n    Get a BTDataset by ID.\n\n    Parameters\n    ----------\n    id : BTDatasetId\n        The Albert ID of the BTDataset.\n\n    Returns\n    -------\n    BTDataset\n        The retrived BTDataset.\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    return BTDataset(**response.json())\n</code></pre>"},{"location":"collections/btdataset/#albert.collections.btdataset.BTDatasetCollection.update","title":"update","text":"<pre><code>update(*, dataset: BTDataset) -&gt; BTDataset\n</code></pre> <p>Update a BTDataset.</p> <p>The provided dataset must be registered with an Albert ID.</p> <p>Parameters:</p> Name Type Description Default <code>dataset</code> <code>BTDataset</code> <p>The BTDataset with updated fields.</p> required <p>Returns:</p> Type Description <code>BTDataset</code> <p>The updated BTDataset object.</p> Source code in <code>src/albert/collections/btdataset.py</code> <pre><code>@validate_call\ndef update(self, *, dataset: BTDataset) -&gt; BTDataset:\n    \"\"\"\n    Update a BTDataset.\n\n    The provided dataset must be registered with an Albert ID.\n\n    Parameters\n    ----------\n    dataset : BTDataset\n        The BTDataset with updated fields.\n\n    Returns\n    -------\n    BTDataset\n        The updated BTDataset object.\n    \"\"\"\n    path = f\"{self.base_path}/{dataset.id}\"\n    payload = self._generate_patch_payload(\n        existing=self.get_by_id(id=dataset.id),\n        updated=dataset,\n    )\n    self.session.patch(path, json=payload.model_dump(mode=\"json\", by_alias=True))\n    return self.get_by_id(id=dataset.id)\n</code></pre>"},{"location":"collections/btdataset/#albert.collections.btdataset.BTDatasetCollection.delete","title":"delete","text":"<pre><code>delete(*, id: BTDatasetId) -&gt; None\n</code></pre> <p>Delete a BTDataset by ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>BTDatasetId</code> <p>The ID of the BTDataset to delete.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/btdataset.py</code> <pre><code>@validate_call\ndef delete(self, *, id: BTDatasetId) -&gt; None:\n    \"\"\"Delete a BTDataset by ID.\n\n    Parameters\n    ----------\n    id : BTDatasetId\n        The ID of the BTDataset to delete.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    self.session.delete(f\"{self.base_path}/{id}\")\n</code></pre>"},{"location":"collections/btdataset/#albert.collections.btdataset.BTDatasetCollection.get_all","title":"get_all","text":"<pre><code>get_all(\n    *,\n    limit: int = 100,\n    name: str | None = None,\n    start_key: str | None = None,\n    created_by: str | None = None,\n) -&gt; Iterator[BTDataset]\n</code></pre> <p>Get all items from the BTDataset collection.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>Number of items to return per page, default 100</p> <code>100</code> <code>name</code> <code>str</code> <p>Name of the dataset to filter by, default None</p> <code>None</code> <code>start_key</code> <code>str</code> <p>The starting key for pagination, default None</p> <code>None</code> <code>created_by</code> <code>str</code> <p>The user who created the dataset, default None</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[BTDataset]</code> <p>An iterator of elements returned by the BTDataset listing.</p> Source code in <code>src/albert/collections/btdataset.py</code> <pre><code>@validate_call\ndef get_all(\n    self,\n    *,\n    limit: int = 100,\n    name: str | None = None,\n    start_key: str | None = None,\n    created_by: str | None = None,\n) -&gt; Iterator[BTDataset]:\n    \"\"\"Get all items from the BTDataset collection.\n\n    Parameters\n    ----------\n    limit : int, optional\n        Number of items to return per page, default 100\n    name : str, optional\n        Name of the dataset to filter by, default None\n    start_key : str, optional\n        The starting key for pagination, default None\n    created_by : str, optional\n        The user who created the dataset, default None\n\n    Returns\n    -------\n    Iterator[BTDataset]\n        An iterator of elements returned by the BTDataset listing.\n    \"\"\"\n    params = {\n        \"limit\": limit,\n        \"startKey\": start_key,\n        \"createdBy\": created_by,\n        \"name\": name,\n    }\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [BTDataset(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/btinsight/","title":"Breakthrough Insights","text":""},{"location":"collections/btinsight/#albert.collections.btinsight.BTInsightCollection","title":"albert.collections.btinsight.BTInsightCollection","text":"<pre><code>BTInsightCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>BTInsightCollection is a collection class for managing Breakthrough insight entities.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Attributes:</p> Name Type Description <code>base_path</code> <code>str</code> <p>The base path for BTInsight API requests.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <p>Create a new BTInsight.</p> <code>get_by_id</code> <p>Get a BTInsight by ID.</p> <code>search</code> <p>Search for items in the BTInsight collection.</p> <code>update</code> <p>Update a BTInsight.</p> <code>delete</code> <p>Delete a BTInsight by ID.</p> Source code in <code>src/albert/collections/btinsight.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initialize the BTInsightCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{BTInsightCollection._api_version}/btinsight\"\n</code></pre>"},{"location":"collections/btinsight/#albert.collections.btinsight.BTInsightCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/btinsight'\n</code></pre>"},{"location":"collections/btinsight/#albert.collections.btinsight.BTInsightCollection.create","title":"create","text":"<pre><code>create(*, insight: BTInsight) -&gt; BTInsight\n</code></pre> <p>Create a new BTInsight.</p> <p>Parameters:</p> Name Type Description Default <code>insight</code> <code>BTInsight</code> <p>The BTInsight record to create.</p> required <p>Returns:</p> Type Description <code>BTInsight</code> <p>The created BTInsight.</p> Source code in <code>src/albert/collections/btinsight.py</code> <pre><code>@validate_call\ndef create(self, *, insight: BTInsight) -&gt; BTInsight:\n    \"\"\"\n    Create a new BTInsight.\n\n    Parameters\n    ----------\n    insight : BTInsight\n        The BTInsight record to create.\n\n    Returns\n    -------\n    BTInsight\n        The created BTInsight.\n    \"\"\"\n    response = self.session.post(\n        self.base_path,\n        json=insight.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n    )\n    return BTInsight(**response.json())\n</code></pre>"},{"location":"collections/btinsight/#albert.collections.btinsight.BTInsightCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: BTInsightId) -&gt; BTInsight\n</code></pre> <p>Get a BTInsight by ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>BTInsightId</code> <p>The Albert ID of the insight.</p> required <p>Returns:</p> Type Description <code>BTInsight</code> <p>The retrived BTInsight.</p> Source code in <code>src/albert/collections/btinsight.py</code> <pre><code>@validate_call\ndef get_by_id(self, *, id: BTInsightId) -&gt; BTInsight:\n    \"\"\"\n    Get a BTInsight by ID.\n\n    Parameters\n    ----------\n    id : BTInsightId\n        The Albert ID of the insight.\n\n    Returns\n    -------\n    BTInsight\n        The retrived BTInsight.\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    return BTInsight(**response.json())\n</code></pre>"},{"location":"collections/btinsight/#albert.collections.btinsight.BTInsightCollection.search","title":"search","text":"<pre><code>search(\n    *,\n    limit: int = 100,\n    offset: int | None = None,\n    order_by: OrderBy | None = None,\n    sort_by: str | None = None,\n    text: str | None = None,\n    name: str | list[str] | None = None,\n    state: BTInsightState\n    | list[BTInsightState]\n    | None = None,\n    category: BTInsightCategory\n    | list[BTInsightCategory]\n    | None = None,\n) -&gt; Iterator[BTInsight]\n</code></pre> <p>Search for items in the BTInsight collection.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>Number of items to return per page, default 100</p> <code>100</code> <code>offset</code> <code>int | None</code> <p>Item offset to begin search at, default None</p> <code>None</code> <code>order_by</code> <code>OrderBy | None</code> <p>Asc/desc ordering, default None</p> <code>None</code> <code>sort_by</code> <code>str | None</code> <p>Sort field, default None</p> <code>None</code> <code>text</code> <code>str | None</code> <p>Text field in search query, default None</p> <code>None</code> <code>name</code> <code>str | list[str] | None</code> <p>BTInsight name search filter, default None</p> <code>None</code> <code>state</code> <code>BTInsightState | list[BTInsightState] | None</code> <p>BTInsight state search filter, default None</p> <code>None</code> <code>category</code> <code>BTInsightCategory | list[BTInsightCategory] | None</code> <p>BTInsight category search filter, default None</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[BTInsight]</code> <p>An iterator of elements returned by the BTInsight search query.</p> Source code in <code>src/albert/collections/btinsight.py</code> <pre><code>@validate_call\ndef search(\n    self,\n    *,\n    limit: int = 100,\n    offset: int | None = None,\n    order_by: OrderBy | None = None,\n    sort_by: str | None = None,\n    text: str | None = None,\n    name: str | list[str] | None = None,\n    state: BTInsightState | list[BTInsightState] | None = None,\n    category: BTInsightCategory | list[BTInsightCategory] | None = None,\n) -&gt; Iterator[BTInsight]:\n    \"\"\"Search for items in the BTInsight collection.\n\n    Parameters\n    ----------\n    limit : int, optional\n        Number of items to return per page, default 100\n    offset : int | None, optional\n        Item offset to begin search at, default None\n    order_by : OrderBy | None, optional\n        Asc/desc ordering, default None\n    sort_by : str | None\n        Sort field, default None\n    text : str | None\n        Text field in search query, default None\n    name : str | list[str] | None\n        BTInsight name search filter, default None\n    state : BTInsightState | list[BTInsightState] | None\n        BTInsight state search filter, default None\n    category : BTInsightCategory | list[BTInsightCategory] | None\n        BTInsight category search filter, default None\n\n    Returns\n    -------\n    Iterator[BTInsight]\n        An iterator of elements returned by the BTInsight search query.\n    \"\"\"\n    params = {\n        \"limit\": limit,\n        \"offset\": offset,\n        \"order\": OrderBy(order_by).value if order_by else None,\n        \"sortBy\": sort_by,\n        \"text\": text,\n        \"name\": name,\n    }\n    if state:\n        state = state if isinstance(state, list) else [state]\n        params[\"state\"] = [BTInsightState(x).value for x in state]\n    if category:\n        category = category if isinstance(category, list) else [category]\n        params[\"category\"] = [BTInsightCategory(x).value for x in category]\n\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/search\",\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [BTInsight(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/btinsight/#albert.collections.btinsight.BTInsightCollection.update","title":"update","text":"<pre><code>update(*, insight: BTInsight) -&gt; BTInsight\n</code></pre> <p>Update a BTInsight.</p> <p>Parameters:</p> Name Type Description Default <code>insight</code> <code>BTInsight</code> <p>The BTInsight to update.</p> required <p>Returns:</p> Type Description <code>BTInsight</code> <p>The updated BTInsight.</p> Source code in <code>src/albert/collections/btinsight.py</code> <pre><code>@validate_call\ndef update(self, *, insight: BTInsight) -&gt; BTInsight:\n    \"\"\"Update a BTInsight.\n\n    Parameters\n    ----------\n    insight : BTInsight\n        The BTInsight to update.\n\n    Returns\n    -------\n    BTInsight\n        The updated BTInsight.\n    \"\"\"\n    path = f\"{self.base_path}/{insight.id}\"\n    payload = self._generate_patch_payload(\n        existing=self.get_by_id(id=insight.id),\n        updated=insight,\n        generate_metadata_diff=False,\n    )\n    self.session.patch(path, json=payload.model_dump(mode=\"json\", by_alias=True))\n    return self.get_by_id(id=insight.id)\n</code></pre>"},{"location":"collections/btinsight/#albert.collections.btinsight.BTInsightCollection.delete","title":"delete","text":"<pre><code>delete(*, id: BTInsightId) -&gt; None\n</code></pre> <p>Delete a BTInsight by ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the BTInsight to delete.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/btinsight.py</code> <pre><code>@validate_call\ndef delete(self, *, id: BTInsightId) -&gt; None:\n    \"\"\"Delete a BTInsight by ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the BTInsight to delete.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    self.session.delete(f\"{self.base_path}/{id}\")\n</code></pre>"},{"location":"collections/btmodel/","title":"Breakthrough Model","text":""},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelSessionCollection","title":"albert.collections.btmodel.BTModelSessionCollection","text":"<pre><code>BTModelSessionCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>BTModelSessionCollection is a collection class for managing Breakthrough model session entities.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Attributes:</p> Name Type Description <code>base_path</code> <code>str</code> <p>The base path for BTModelSession API requests.</p> <p>Methods:</p> Name Description <code>create</code> <code>get_by_id</code> <code>update</code> <code>delete</code> <p>Delete a BTModelSession by ID.</p> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    super().__init__(session=session)\n    self.base_path = f\"/api/{BTModelSessionCollection._api_version}/btmodel\"\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelSessionCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/btmodel'\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelSessionCollection.create","title":"create","text":"<pre><code>create(*, model_session: BTModelSession) -&gt; BTModelSession\n</code></pre> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>@validate_call\ndef create(self, *, model_session: BTModelSession) -&gt; BTModelSession:\n    response = self.session.post(\n        self.base_path,\n        json=model_session.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n    )\n    return BTModelSession(**response.json())\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelSessionCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: BTModelSessionId) -&gt; BTModelSession\n</code></pre> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>@validate_call\ndef get_by_id(self, *, id: BTModelSessionId) -&gt; BTModelSession:\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    return BTModelSession(**response.json())\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelSessionCollection.update","title":"update","text":"<pre><code>update(*, model_session: BTModelSession) -&gt; BTModelSession\n</code></pre> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>@validate_call\ndef update(self, *, model_session: BTModelSession) -&gt; BTModelSession:\n    path = f\"{self.base_path}/{model_session.id}\"\n    payload = self._generate_patch_payload(\n        existing=self.get_by_id(id=model_session.id),\n        updated=model_session,\n    )\n    self.session.patch(path, json=payload.model_dump(mode=\"json\", by_alias=True))\n    return self.get_by_id(id=model_session.id)\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelSessionCollection.delete","title":"delete","text":"<pre><code>delete(*, id: BTModelSessionId) -&gt; None\n</code></pre> <p>Delete a BTModelSession by ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>BTModelSessionId</code> <p>The ID of the BTModelSession to delete.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>@validate_call\ndef delete(self, *, id: BTModelSessionId) -&gt; None:\n    \"\"\"Delete a BTModelSession by ID.\n\n    Parameters\n    ----------\n    id : BTModelSessionId\n        The ID of the BTModelSession to delete.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    self.session.delete(f\"{self.base_path}/{id}\")\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelCollection","title":"albert.collections.btmodel.BTModelCollection","text":"<pre><code>BTModelCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>BTModelCollection is a collection class for managing Breakthrough model entities.</p> <p>Breakthrough models can be associated with a parent Breakthrough model session, or a detached without a parent.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <p>Create a new BTModel instance.</p> <code>get_by_id</code> <p>Retrieve a BTModel by its ID.</p> <code>update</code> <p>Update an existing BTModel.</p> <code>delete</code> <p>Delete a BTModel by ID.</p> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    super().__init__(session=session)\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelCollection.create","title":"create","text":"<pre><code>create(\n    *,\n    model: BTModel,\n    parent_id: BTModelSessionId | None = None,\n) -&gt; BTModel\n</code></pre> <p>Create a new BTModel instance.</p> <p>Parameters:</p> Name Type Description Default <code>model</code> <code>BTModel</code> <p>The BTModel instance to create.</p> required <code>parent_id</code> <code>BTModelSessionId | None</code> <p>The optional ID of the parent BTModelSession.</p> <code>None</code> <p>Returns:</p> Type Description <code>BTModel</code> <p>The created BTModel instance.</p> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>@validate_call\ndef create(self, *, model: BTModel, parent_id: BTModelSessionId | None = None) -&gt; BTModel:\n    \"\"\"\n    Create a new BTModel instance.\n\n    Parameters\n    ----------\n    model : BTModel\n        The BTModel instance to create.\n    parent_id : BTModelSessionId | None\n        The optional ID of the parent BTModelSession.\n\n    Returns\n    -------\n    BTModel\n        The created BTModel instance.\n    \"\"\"\n    base_path = self._get_base_path(parent_id)\n    response = self.session.post(\n        base_path,\n        json=model.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n    )\n    return BTModel(**response.json())\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(\n    *,\n    id: BTModelId,\n    parent_id: BTModelSessionId | None = None,\n) -&gt; BTModel\n</code></pre> <p>Retrieve a BTModel by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>BTModelId</code> <p>The ID of the BTModel to retrieve.</p> required <code>parent_id</code> <code>BTModelSessionId | None</code> <p>The optional ID of the parent BTModelSession.</p> <code>None</code> <p>Returns:</p> Type Description <code>BTModel</code> <p>The retrieved BTModel instance.</p> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>@validate_call\ndef get_by_id(self, *, id: BTModelId, parent_id: BTModelSessionId | None = None) -&gt; BTModel:\n    \"\"\"\n    Retrieve a BTModel by its ID.\n\n    Parameters\n    ----------\n    id : BTModelId\n        The ID of the BTModel to retrieve.\n    parent_id : BTModelSessionId | None\n        The optional ID of the parent BTModelSession.\n\n    Returns\n    -------\n    BTModel\n        The retrieved BTModel instance.\n    \"\"\"\n    base_path = self._get_base_path(parent_id)\n    response = self.session.get(f\"{base_path}/{id}\")\n    return BTModel(**response.json())\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelCollection.update","title":"update","text":"<pre><code>update(\n    *,\n    model: BTModel,\n    parent_id: BTModelSessionId | None = None,\n) -&gt; BTModel\n</code></pre> <p>Update an existing BTModel.</p> <p>Parameters:</p> Name Type Description Default <code>model</code> <code>BTModel</code> <p>The BTModel instance with updated data.</p> required <code>parent_id</code> <code>BTModelSessionId | None</code> <p>The optional ID of the parent BTModelSession.</p> <code>None</code> <p>Returns:</p> Type Description <code>BTModel</code> <p>The updated BTModel instance.</p> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>@validate_call\ndef update(self, *, model: BTModel, parent_id: BTModelSessionId | None = None) -&gt; BTModel:\n    \"\"\"\n    Update an existing BTModel.\n\n    Parameters\n    ----------\n    model : BTModel\n        The BTModel instance with updated data.\n    parent_id : BTModelSessionId | None\n        The optional ID of the parent BTModelSession.\n\n    Returns\n    -------\n    BTModel\n        The updated BTModel instance.\n    \"\"\"\n    base_path = self._get_base_path(parent_id)\n    payload = self._generate_patch_payload(\n        existing=self.get_by_id(id=model.id, parent_id=parent_id),\n        updated=model,\n        generate_metadata_diff=False,\n    )\n    self.session.patch(\n        f\"{base_path}/{model.id}\",\n        json=payload.model_dump(mode=\"json\", by_alias=True),\n    )\n    return self.get_by_id(id=model.id, parent_id=parent_id)\n</code></pre>"},{"location":"collections/btmodel/#albert.collections.btmodel.BTModelCollection.delete","title":"delete","text":"<pre><code>delete(\n    *,\n    id: BTModelId,\n    parent_id: BTModelSessionId | None = None,\n) -&gt; None\n</code></pre> <p>Delete a BTModel by ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>BTModelId</code> <p>The ID of the BTModel to delete.</p> required <code>parent_id</code> <code>BTModelSessionId | None</code> <p>The optional ID of the parent BTModelSession.</p> <code>None</code> <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/btmodel.py</code> <pre><code>@validate_call\ndef delete(self, *, id: BTModelId, parent_id: BTModelSessionId | None = None) -&gt; None:\n    \"\"\"Delete a BTModel by ID.\n\n    Parameters\n    ----------\n    id : BTModelId\n        The ID of the BTModel to delete.\n    parent_id : BTModelSessionId | None\n        The optional ID of the parent BTModelSession.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    base_path = self._get_base_path(parent_id)\n    self.session.delete(f\"{base_path}/{id}\")\n</code></pre>"},{"location":"collections/cas/","title":"Cas","text":""},{"location":"collections/cas/#albert.collections.cas.CasCollection","title":"albert.collections.cas.CasCollection","text":"<pre><code>CasCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>CasCollection is a collection class for managing Cas entities on the Albert Platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>list</code> <p>Lists CAS entities with optional filters.</p> <code>cas_exists</code> <p>Checks if a CAS exists by its number.</p> <code>create</code> <p>Creates a new CAS entity.</p> <code>get_by_id</code> <p>Retrieves a CAS by its ID.</p> <code>get_by_number</code> <p>Retrieves a CAS by its number.</p> <code>delete</code> <p>Deletes a CAS by its ID.</p> <code>update</code> <p>Updates a CAS entity. The updated object must have the same ID as the object you want to update.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/cas.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the CasCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{CasCollection._api_version}/cas\"\n</code></pre>"},{"location":"collections/cas/#albert.collections.cas.CasCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/cas'\n</code></pre>"},{"location":"collections/cas/#albert.collections.cas.CasCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    limit: int = 50,\n    start_key: str | None = None,\n    number: str | None = None,\n    id: str | None = None,\n    order_by: OrderBy = DESCENDING,\n) -&gt; Iterator[Cas]\n</code></pre> <p>Lists CAS entities with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int | None</code> <p>The maximum number of CAS entities to return, by default 50.</p> <code>50</code> <code>start_key</code> <code>str | None</code> <p>The primary key of the first item that this operation will evaluate.</p> <code>None</code> <code>number</code> <code>str | None</code> <p>Fetches list of CAS by CAS number.</p> <code>None</code> <code>id</code> <code>str | None</code> <p>Fetches list of CAS using the CAS Albert ID.</p> <code>None</code> <code>order_by</code> <code>OrderBy</code> <p>The order by which to sort the results, by default OrderBy.DESCENDING.</p> <code>DESCENDING</code> <p>Returns:</p> Type Description <code>Iterator[Cas]</code> <p>An iterator of Cas objects.</p> Source code in <code>src/albert/collections/cas.py</code> <pre><code>def list(\n    self,\n    *,\n    limit: int = 50,\n    start_key: str | None = None,\n    number: str | None = None,\n    id: str | None = None,\n    order_by: OrderBy = OrderBy.DESCENDING,\n) -&gt; Iterator[Cas]:\n    \"\"\"\n    Lists CAS entities with optional filters.\n\n    Parameters\n    ----------\n    limit : int | None, optional\n        The maximum number of CAS entities to return, by default 50.\n    start_key : str | None, optional\n        The primary key of the first item that this operation will evaluate.\n    number : str | None, optional\n        Fetches list of CAS by CAS number.\n    id : str | None, optional\n        Fetches list of CAS using the CAS Albert ID.\n    order_by : OrderBy, optional\n        The order by which to sort the results, by default OrderBy.DESCENDING.\n\n    Returns\n    -------\n    Iterator[Cas]\n        An iterator of Cas objects.\n    \"\"\"\n    params = {\n        \"limit\": limit,\n        \"orderBy\": order_by.value,\n        \"startKey\": start_key,\n        \"number\": number,\n        \"albertId\": id,\n    }\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [Cas(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/cas/#albert.collections.cas.CasCollection.cas_exists","title":"cas_exists","text":"<pre><code>cas_exists(\n    *, number: str, exact_match: bool = True\n) -&gt; bool\n</code></pre> <p>Checks if a CAS exists by its number.</p> <p>Parameters:</p> Name Type Description Default <code>number</code> <code>str</code> <p>The number of the CAS to check.</p> required <code>exact_match</code> <code>bool</code> <p>Whether to match the number exactly, by default True.</p> <code>True</code> <p>Returns:</p> Type Description <code>bool</code> <p>True if the CAS exists, False otherwise.</p> Source code in <code>src/albert/collections/cas.py</code> <pre><code>def cas_exists(self, *, number: str, exact_match: bool = True) -&gt; bool:\n    \"\"\"\n    Checks if a CAS exists by its number.\n\n    Parameters\n    ----------\n    number : str\n        The number of the CAS to check.\n    exact_match : bool, optional\n        Whether to match the number exactly, by default True.\n\n    Returns\n    -------\n    bool\n        True if the CAS exists, False otherwise.\n    \"\"\"\n    cas_list = self.get_by_number(number=number, exact_match=exact_match)\n    return cas_list is not None\n</code></pre>"},{"location":"collections/cas/#albert.collections.cas.CasCollection.create","title":"create","text":"<pre><code>create(*, cas: str | Cas) -&gt; Cas\n</code></pre> <p>Creates a new CAS entity.</p> <p>Parameters:</p> Name Type Description Default <code>cas</code> <code>Union[str, Cas]</code> <p>The CAS number or Cas object to create.</p> required <p>Returns:</p> Type Description <code>Cas</code> <p>The created Cas object.</p> Source code in <code>src/albert/collections/cas.py</code> <pre><code>def create(self, *, cas: str | Cas) -&gt; Cas:\n    \"\"\"\n    Creates a new CAS entity.\n\n    Parameters\n    ----------\n    cas : Union[str, Cas]\n        The CAS number or Cas object to create.\n\n    Returns\n    -------\n    Cas\n        The created Cas object.\n    \"\"\"\n    if isinstance(cas, str):\n        cas = Cas(number=cas)\n    hit = self.get_by_number(number=cas.number, exact_match=True)\n    if hit:\n        return hit\n    else:\n        payload = cas.model_dump(by_alias=True, exclude_unset=True, mode=\"json\")\n        response = self.session.post(self.base_path, json=payload)\n        cas = Cas(**response.json())\n        return cas\n</code></pre>"},{"location":"collections/cas/#albert.collections.cas.CasCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Cas\n</code></pre> <p>Retrieves a CAS by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the CAS to retrieve.</p> required <p>Returns:</p> Type Description <code>Cas</code> <p>The Cas object if found, None otherwise.</p> Source code in <code>src/albert/collections/cas.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Cas:\n    \"\"\"\n    Retrieves a CAS by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the CAS to retrieve.\n\n    Returns\n    -------\n    Cas\n        The Cas object if found, None otherwise.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    cas = Cas(**response.json())\n    return cas\n</code></pre>"},{"location":"collections/cas/#albert.collections.cas.CasCollection.get_by_number","title":"get_by_number","text":"<pre><code>get_by_number(\n    *, number: str, exact_match: bool = True\n) -&gt; Cas | None\n</code></pre> <p>Retrieves a CAS by its number.</p> <p>Parameters:</p> Name Type Description Default <code>number</code> <code>str</code> <p>The number of the CAS to retrieve.</p> required <code>exact_match</code> <code>bool</code> <p>Whether to match the number exactly, by default True.</p> <code>True</code> <p>Returns:</p> Type Description <code>Optional[Cas]</code> <p>The Cas object if found, None otherwise.</p> Source code in <code>src/albert/collections/cas.py</code> <pre><code>def get_by_number(self, *, number: str, exact_match: bool = True) -&gt; Cas | None:\n    \"\"\"\n    Retrieves a CAS by its number.\n\n    Parameters\n    ----------\n    number : str\n        The number of the CAS to retrieve.\n    exact_match : bool, optional\n        Whether to match the number exactly, by default True.\n\n    Returns\n    -------\n    Optional[Cas]\n        The Cas object if found, None otherwise.\n    \"\"\"\n    found = self.list(number=number)\n    if exact_match:\n        for f in found:\n            if self._clean_cas_number(f.number) == self._clean_cas_number(number):\n                return f\n    return next(found, None)\n</code></pre>"},{"location":"collections/cas/#albert.collections.cas.CasCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes a CAS by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the CAS to delete.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/cas.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Deletes a CAS by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the CAS to delete.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/cas/#albert.collections.cas.CasCollection.update","title":"update","text":"<pre><code>update(*, updated_object: Cas) -&gt; Cas\n</code></pre> <p>Updates a CAS entity. The updated object must have the same ID as the object you want to update.</p> <p>Parameters:</p> Name Type Description Default <code>updated_object</code> <code>Cas</code> <p>The Updated Cas object.</p> required <p>Returns:</p> Type Description <code>Cas</code> <p>The updated Cas object as it appears in Albert</p> Source code in <code>src/albert/collections/cas.py</code> <pre><code>def update(self, *, updated_object: Cas) -&gt; Cas:\n    \"\"\"Updates a CAS entity. The updated object must have the same ID as the object you want to update.\n\n    Parameters\n    ----------\n    updated_object : Cas\n        The Updated Cas object.\n\n    Returns\n    -------\n    Cas\n        The updated Cas object as it appears in Albert\n    \"\"\"\n    # Fetch the current object state from the server or database\n    existing_cas = self.get_by_id(id=updated_object.id)\n\n    # Generate the PATCH payload\n    patch_payload = self._generate_patch_payload(existing=existing_cas, updated=updated_object)\n    url = f\"{self.base_path}/{updated_object.id}\"\n    self.session.patch(url, json=patch_payload.model_dump(mode=\"json\", by_alias=True))\n\n    updated_cas = self.get_by_id(id=updated_object.id)\n    return updated_cas\n</code></pre>"},{"location":"collections/companies/","title":"Companies","text":""},{"location":"collections/companies/#albert.collections.companies.CompanyCollection","title":"albert.collections.companies.CompanyCollection","text":"<pre><code>CompanyCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>CompanyCollection is a collection class for managing Company entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>list</code> <p>Lists company entities with optional filters.</p> <code>company_exists</code> <p>Checks if a company exists by its name.</p> <code>get_by_id</code> <p>Get a company by its ID.</p> <code>get_by_name</code> <p>Retrieves a company by its name.</p> <code>create</code> <p>Creates a new company entity.</p> <code>delete</code> <p>Deletes a company entity.</p> <code>rename</code> <p>Renames an existing company entity.</p> <code>update</code> <p>Update a Company entity. The id of the company must be provided.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/companies.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the CompanyCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{CompanyCollection._api_version}/companies\"\n</code></pre>"},{"location":"collections/companies/#albert.collections.companies.CompanyCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/companies'\n</code></pre>"},{"location":"collections/companies/#albert.collections.companies.CompanyCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    limit: int = 50,\n    name: str | list[str] = None,\n    exact_match: bool = True,\n    start_key: str | None = None,\n) -&gt; Iterator[Company]\n</code></pre> <p>Lists company entities with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The maximum number of companies to return, by default 50.</p> <code>50</code> <code>name</code> <code>Union[str, None]</code> <p>The name of the company to filter by, by default None.</p> <code>None</code> <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default True.</p> <code>True</code> <p>Returns:</p> Type Description <code>Iterator</code> <p>An iterator of Company objects.</p> Source code in <code>src/albert/collections/companies.py</code> <pre><code>def list(\n    self,\n    *,\n    limit: int = 50,\n    name: str | list[str] = None,\n    exact_match: bool = True,\n    start_key: str | None = None,\n) -&gt; Iterator[Company]:\n    \"\"\"\n    Lists company entities with optional filters.\n\n    Parameters\n    ----------\n    limit : int, optional\n        The maximum number of companies to return, by default 50.\n    name : Union[str, None], optional\n        The name of the company to filter by, by default None.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default True.\n\n    Returns\n    -------\n    Iterator\n        An iterator of Company objects.\n    \"\"\"\n    params = {\"limit\": limit, \"dupDetection\": \"false\", \"startKey\": start_key}\n    if name:\n        params[\"name\"] = name if isinstance(name, list) else [name]\n        params[\"exactMatch\"] = str(exact_match).lower()\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [Company(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/companies/#albert.collections.companies.CompanyCollection.company_exists","title":"company_exists","text":"<pre><code>company_exists(\n    *, name: str, exact_match: bool = True\n) -&gt; bool\n</code></pre> <p>Checks if a company exists by its name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the company to check.</p> required <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default True.</p> <code>True</code> <p>Returns:</p> Type Description <code>bool</code> <p>True if the company exists, False otherwise.</p> Source code in <code>src/albert/collections/companies.py</code> <pre><code>def company_exists(self, *, name: str, exact_match: bool = True) -&gt; bool:\n    \"\"\"\n    Checks if a company exists by its name.\n\n    Parameters\n    ----------\n    name : str\n        The name of the company to check.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default True.\n\n    Returns\n    -------\n    bool\n        True if the company exists, False otherwise.\n    \"\"\"\n    companies = self.get_by_name(name=name, exact_match=exact_match)\n    return bool(companies)\n</code></pre>"},{"location":"collections/companies/#albert.collections.companies.CompanyCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Company\n</code></pre> <p>Get a company by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the company to retrieve.</p> required <p>Returns:</p> Type Description <code>Company</code> <p>The Company object.</p> Source code in <code>src/albert/collections/companies.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Company:\n    \"\"\"\n    Get a company by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the company to retrieve.\n\n    Returns\n    -------\n    Company\n        The Company object.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    company = response.json()\n    found_company = Company(**company)\n    return found_company\n</code></pre>"},{"location":"collections/companies/#albert.collections.companies.CompanyCollection.get_by_name","title":"get_by_name","text":"<pre><code>get_by_name(\n    *, name: str, exact_match: bool = True\n) -&gt; Company | None\n</code></pre> <p>Retrieves a company by its name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the company to retrieve.</p> required <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default True.</p> <code>True</code> <p>Returns:</p> Type Description <code>Company</code> <p>The Company object if found, None otherwise.</p> Source code in <code>src/albert/collections/companies.py</code> <pre><code>def get_by_name(self, *, name: str, exact_match: bool = True) -&gt; Company | None:\n    \"\"\"\n    Retrieves a company by its name.\n\n    Parameters\n    ----------\n    name : str\n        The name of the company to retrieve.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default True.\n\n    Returns\n    -------\n    Company\n        The Company object if found, None otherwise.\n    \"\"\"\n    found = self.list(name=name, exact_match=exact_match)\n    return next(found, None)\n</code></pre>"},{"location":"collections/companies/#albert.collections.companies.CompanyCollection.create","title":"create","text":"<pre><code>create(\n    *, company: str | Company, check_if_exists: bool = True\n) -&gt; Company\n</code></pre> <p>Creates a new company entity.</p> <p>Parameters:</p> Name Type Description Default <code>company</code> <code>Union[str, Company]</code> <p>The company name or Company object to create.</p> required <code>check_if_exists</code> <code>bool</code> <p>Whether to check if the company already exists, by default True.</p> <code>True</code> <p>Returns:</p> Type Description <code>Company</code> <p>The created Company object.</p> Source code in <code>src/albert/collections/companies.py</code> <pre><code>def create(self, *, company: str | Company, check_if_exists: bool = True) -&gt; Company:\n    \"\"\"\n    Creates a new company entity.\n\n    Parameters\n    ----------\n    company : Union[str, Company]\n        The company name or Company object to create.\n    check_if_exists : bool, optional\n        Whether to check if the company already exists, by default True.\n\n    Returns\n    -------\n    Company\n        The created Company object.\n    \"\"\"\n    if isinstance(company, str):\n        company = Company(name=company)\n    hit = self.get_by_name(name=company.name, exact_match=True)\n    if check_if_exists and hit:\n        logging.warning(f\"Company {company.name} already exists with id {hit.id}.\")\n        return hit\n\n    payload = company.model_dump(by_alias=True, exclude_unset=True, mode=\"json\")\n    response = self.session.post(self.base_path, json=payload)\n    this_company = Company(**response.json())\n    return this_company\n</code></pre>"},{"location":"collections/companies/#albert.collections.companies.CompanyCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes a company entity.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the company to delete.</p> required Source code in <code>src/albert/collections/companies.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"Deletes a company entity.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the company to delete.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/companies/#albert.collections.companies.CompanyCollection.rename","title":"rename","text":"<pre><code>rename(*, old_name: str, new_name: str) -&gt; Company\n</code></pre> <p>Renames an existing company entity.</p> <p>Parameters:</p> Name Type Description Default <code>old_name</code> <code>str</code> <p>The current name of the company.</p> required <code>new_name</code> <code>str</code> <p>The new name of the company.</p> required <p>Returns:</p> Type Description <code>Company</code> <p>The renamed Company object</p> Source code in <code>src/albert/collections/companies.py</code> <pre><code>def rename(self, *, old_name: str, new_name: str) -&gt; Company:\n    \"\"\"\n    Renames an existing company entity.\n\n    Parameters\n    ----------\n    old_name : str\n        The current name of the company.\n    new_name : str\n        The new name of the company.\n\n    Returns\n    -------\n    Company\n        The renamed Company object\n    \"\"\"\n    company = self.get_by_name(name=old_name, exact_match=True)\n    if not company:\n        msg = f'Company \"{old_name}\" not found.'\n        logger.error(msg)\n        raise AlbertException(msg)\n    company_id = company.id\n    endpoint = f\"{self.base_path}/{company_id}\"\n    payload = {\n        \"data\": [\n            {\n                \"operation\": \"update\",\n                \"attribute\": \"name\",\n                \"oldValue\": old_name,\n                \"newValue\": new_name,\n            }\n        ]\n    }\n    self.session.patch(endpoint, json=payload)\n    updated_company = self.get_by_id(id=company_id)\n    return updated_company\n</code></pre>"},{"location":"collections/companies/#albert.collections.companies.CompanyCollection.update","title":"update","text":"<pre><code>update(*, company: Company) -&gt; Company\n</code></pre> <p>Update a Company entity. The id of the company must be provided.</p> <p>Parameters:</p> Name Type Description Default <code>company</code> <code>Company</code> <p>The updated Company object.</p> required <p>Returns:</p> Type Description <code>Company</code> <p>The updated Company object as registered in Albert.</p> Source code in <code>src/albert/collections/companies.py</code> <pre><code>def update(self, *, company: Company) -&gt; Company:\n    \"\"\"Update a Company entity. The id of the company must be provided.\n\n    Parameters\n    ----------\n    company : Company\n        The updated Company object.\n\n    Returns\n    -------\n    Company\n        The updated Company object as registered in Albert.\n    \"\"\"\n    # Fetch the current object state from the server or database\n    current_object = self.get_by_id(id=company.id)\n\n    # Generate the PATCH payload\n    patch_payload = self._generate_patch_payload(existing=current_object, updated=company)\n    url = f\"{self.base_path}/{company.id}\"\n    self.session.patch(url, json=patch_payload.model_dump(mode=\"json\", by_alias=True))\n    updated_company = self.get_by_id(id=company.id)\n    return updated_company\n</code></pre>"},{"location":"collections/custom_fields/","title":"Custom Fields","text":""},{"location":"collections/custom_fields/#albert.collections.custom_fields.CustomFieldCollection","title":"albert.collections.custom_fields.CustomFieldCollection","text":"<pre><code>CustomFieldCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>CustomFieldCollection is a collection class for managing CustomField entities in the Albert platform.</p> <p>This collection provides methods to create, update, retrieve, and list custom fields. CustomFields allow you to store custom metadata on a <code>Project</code>, <code>InventoryItem</code>, <code>User</code>, <code>BaseTask</code> (Tasks), and <code>Lot</code>.</p> <p>The <code>FieldType</code> used determines the shape of the metadata field's value. If the <code>FieldType</code> is <code>LIST</code>, then the <code>FieldCategory</code> defines the ACL needed to add new allowed items to the given list:</p> <ul> <li><code>FieldCategory.USER_DEFINED</code>: allows general users to add items</li> <li><code>FieldCategory.BUSINESS_DEFINED</code>: only admins can add new items to the list</li> </ul> Example <pre><code># Creating some custom fields\nfrom albert import Albert\nfrom albert.resources.custom_fields import CustomField, FieldCategory, FieldType, ServiceType\nfrom albert.resources.lists import ListItem\nfrom albert.resources.project import Project\n\n# Initialize the Albert client\nclient = Albert()\n\n# Define the custom fields\nstage_gate_field = CustomField(\n    name=\"stage_gate_status\",\n    display_name=\"Stage Gate\",\n    field_type=FieldType.LIST,\n    service=ServiceType.PROJECTS,\n    min=1,\n    max=1,\n    category=FieldCategory.BUSINESS_DEFINED  # Defined by the business\n)\njustification_field = CustomField(\n    name=\"justification\",\n    display_name=\"Project Justification\",\n    field_type=FieldType.STRING,\n    service=ServiceType.PROJECTS,\n)\n\n# Create the custom fields\nclient.custom_fields.create(custom_field=stage_gate_field)\nclient.custom_fields.create(custom_field=justification_field)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_by_id</code> <p>Get a CustomField item by its ID.</p> <code>get_by_name</code> <p>Get a CustomField item by its name.</p> <code>list</code> <p>Searches for CustomField items based on the provided parameters.</p> <code>create</code> <p>Create a new CustomField item.</p> <code>update</code> <p>Update a CustomField item.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/custom_fields.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the CasCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{CustomFieldCollection._api_version}/customfields\"\n</code></pre>"},{"location":"collections/custom_fields/#albert.collections.custom_fields.CustomFieldCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/customfields'\n</code></pre>"},{"location":"collections/custom_fields/#albert.collections.custom_fields.CustomFieldCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; CustomField\n</code></pre> <p>Get a CustomField item by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the CustomField item.</p> required <p>Returns:</p> Type Description <code>CustomField</code> <p>The CustomField item.</p> Source code in <code>src/albert/collections/custom_fields.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; CustomField:\n    \"\"\"Get a CustomField item by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the CustomField item.\n\n    Returns\n    -------\n    CustomField\n        The CustomField item.\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    return CustomField(**response.json())\n</code></pre>"},{"location":"collections/custom_fields/#albert.collections.custom_fields.CustomFieldCollection.get_by_name","title":"get_by_name","text":"<pre><code>get_by_name(\n    *, name: str, service: ServiceType | None = None\n) -&gt; CustomField | None\n</code></pre> <p>Get a CustomField item by its name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the CustomField item.</p> required <code>service</code> <code>ServiceType | None</code> <p>The service the field relates to, by default None</p> <code>None</code> <p>Returns:</p> Type Description <code>CustomField | None</code> <p>The CustomField item, or None if not found.</p> Source code in <code>src/albert/collections/custom_fields.py</code> <pre><code>def get_by_name(self, *, name: str, service: ServiceType | None = None) -&gt; CustomField | None:\n    \"\"\"Get a CustomField item by its name.\n\n    Parameters\n    ----------\n    name : str\n        The name of the CustomField item.\n    service : ServiceType | None, optional\n        The service the field relates to, by default None\n\n    Returns\n    -------\n    CustomField | None\n        The CustomField item, or None if not found.\n    \"\"\"\n    for custom_field in self.list(name=name, service=service):\n        if custom_field.name.lower() == name.lower():\n            return custom_field\n    return None\n</code></pre>"},{"location":"collections/custom_fields/#albert.collections.custom_fields.CustomFieldCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    name: str | None = None,\n    service: ServiceType | None = None,\n    lookup_column: bool | None = None,\n    lookup_row: bool | None = None,\n) -&gt; Iterator[CustomField]\n</code></pre> <p>Searches for CustomField items based on the provided parameters.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the field, by default None</p> <code>None</code> <code>service</code> <code>ServiceType | None</code> <p>The related service the field is in, by default None</p> <code>None</code> <code>lookup_column</code> <code>bool | None</code> <p>Whether the field relates to a lookup column, by default None</p> <code>None</code> <code>lookup_row</code> <code>bool | None</code> <p>Whether the field relates to a lookup row, by default None</p> <code>None</code> <p>Yields:</p> Type Description <code>Iterator[CustomField]</code> <p>Returns an iterator of CustomField items matching the search criteria.</p> Source code in <code>src/albert/collections/custom_fields.py</code> <pre><code>def list(\n    self,\n    *,\n    name: str | None = None,\n    service: ServiceType | None = None,\n    lookup_column: bool | None = None,\n    lookup_row: bool | None = None,\n) -&gt; Iterator[CustomField]:\n    \"\"\"Searches for CustomField items based on the provided parameters.\n\n    Parameters\n    ----------\n    name : str | None, optional\n        The name of the field, by default None\n    service : ServiceType | None, optional\n        The related service the field is in, by default None\n    lookup_column : bool | None, optional\n        Whether the field relates to a lookup column, by default None\n    lookup_row : bool | None, optional\n        Whether the field relates to a lookup row, by default None\n\n    Yields\n    ------\n    Iterator[CustomField]\n        Returns an iterator of CustomField items matching the search criteria.\n    \"\"\"\n    params = {\n        \"name\": name,\n        \"service\": service if service else None,\n        \"lookupColumn\": json.dumps(lookup_column) if lookup_column is not None else None,\n        \"lookupRow\": json.dumps(lookup_row) if lookup_row is not None else None,\n    }\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        params=params,\n        session=self.session,\n        deserialize=lambda items: [CustomField(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/custom_fields/#albert.collections.custom_fields.CustomFieldCollection.create","title":"create","text":"<pre><code>create(*, custom_field: CustomField) -&gt; CustomField\n</code></pre> <p>Create a new CustomField item.</p> <p>Parameters:</p> Name Type Description Default <code>custom_field</code> <code>CustomField</code> <p>The CustomField item to create.</p> required <p>Returns:</p> Type Description <code>CustomField</code> <p>The created CustomField item with its ID.</p> Source code in <code>src/albert/collections/custom_fields.py</code> <pre><code>def create(self, *, custom_field: CustomField) -&gt; CustomField:\n    \"\"\"Create a new CustomField item.\n\n    Parameters\n    ----------\n    custom_field : CustomField\n        The CustomField item to create.\n\n    Returns\n    -------\n    CustomField\n        The created CustomField item with its ID.\n    \"\"\"\n    response = self.session.post(\n        self.base_path,\n        json=custom_field.model_dump(by_alias=True, exclude_none=True, mode=\"json\"),\n    )\n    return CustomField(**response.json())\n</code></pre>"},{"location":"collections/custom_fields/#albert.collections.custom_fields.CustomFieldCollection.update","title":"update","text":"<pre><code>update(*, custom_field: CustomField) -&gt; CustomField\n</code></pre> <p>Update a CustomField item.</p> <p>Parameters:</p> Name Type Description Default <code>custom_field</code> <code>CustomField</code> <p>The updated CustomField item. The ID must be set and match the Field you want to update.</p> required <p>Returns:</p> Type Description <code>CustomField</code> <p>The updated CustomField item as registered in Albert.</p> Source code in <code>src/albert/collections/custom_fields.py</code> <pre><code>def update(self, *, custom_field: CustomField) -&gt; CustomField:\n    \"\"\"Update a CustomField item.\n\n    Parameters\n    ----------\n    custom_field : CustomField\n        The updated CustomField item. The ID must be set and match the Field you want to update.\n\n    Returns\n    -------\n    CustomField\n        The updated CustomField item as registered in Albert.\n    \"\"\"\n    # fetch current object state\n    current_object = self.get_by_id(id=custom_field.id)\n\n    # generate the patch payload\n    payload = self._generate_patch_payload(\n        existing=current_object,\n        updated=custom_field,\n        generate_metadata_diff=False,\n        stringify_values=False,\n    )\n\n    for patch in payload.data:\n        if (\n            patch.attribute in (\"hidden\", \"search\", \"lkpColumn\", \"lkpRow\")\n            and patch.operation == \"add\"\n        ):\n            patch.operation = \"update\"\n            patch.old_value = False\n        if (\n            patch.attribute in (\"entityCategory\")\n            and patch.operation == \"add\"\n            and isinstance(patch.new_value, list)\n        ):\n            patch.new_value = patch.new_value[0]\n\n    # run patch\n    url = f\"{self.base_path}/{custom_field.id}\"\n    self.session.patch(url, json=payload.model_dump(mode=\"json\", by_alias=True))\n    updated_ctf = self.get_by_id(id=custom_field.id)\n    return updated_ctf\n</code></pre>"},{"location":"collections/custom_templates/","title":"Custom Templates","text":""},{"location":"collections/custom_templates/#albert.collections.custom_templates.CustomTemplatesCollection","title":"albert.collections.custom_templates.CustomTemplatesCollection","text":"<pre><code>CustomTemplatesCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>CustomTemplatesCollection is a collection class for managing CustomTemplate entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_by_id</code> <p>Get a Custom Template by ID</p> <code>list</code> <p>Searches for custom templates matching the provided criteria.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/custom_templates.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the CustomTemplatesCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{CustomTemplatesCollection._api_version}/customtemplates\"\n</code></pre>"},{"location":"collections/custom_templates/#albert.collections.custom_templates.CustomTemplatesCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/customtemplates'\n</code></pre>"},{"location":"collections/custom_templates/#albert.collections.custom_templates.CustomTemplatesCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id) -&gt; CustomTemplate\n</code></pre> <p>Get a Custom Template by ID</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>id of the custom template</p> required <p>Returns:</p> Type Description <code>CustomTemplate</code> <p>The CutomTemplate with the provided ID (or None if not found)</p> Source code in <code>src/albert/collections/custom_templates.py</code> <pre><code>def get_by_id(self, *, id) -&gt; CustomTemplate:\n    \"\"\"Get a Custom Template by ID\n\n    Parameters\n    ----------\n    id : str\n        id of the custom template\n\n    Returns\n    -------\n    CustomTemplate\n        The CutomTemplate with the provided ID (or None if not found)\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    return CustomTemplate(**response.json())\n</code></pre>"},{"location":"collections/custom_templates/#albert.collections.custom_templates.CustomTemplatesCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    text: str | None = None,\n    limit: int = 50,\n    offset: int = 0,\n) -&gt; Iterator[CustomTemplate]\n</code></pre> <p>Searches for custom templates matching the provided criteria.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str | None</code> <p>The text to search for, by default None</p> <code>None</code> <p>Yields:</p> Type Description <code>Iterator[CustomTemplate]</code> <p>An iterator of CustomTemplate items matching the search criteria.</p> Source code in <code>src/albert/collections/custom_templates.py</code> <pre><code>def list(\n    self,\n    *,\n    text: str | None = None,\n    limit: int = 50,\n    offset: int = 0,\n) -&gt; Iterator[CustomTemplate]:\n    \"\"\"Searches for custom templates matching the provided criteria.\n\n    Parameters\n    ----------\n    text : str | None, optional\n        The text to search for, by default None\n\n\n    Yields\n    ------\n    Iterator[CustomTemplate]\n        An iterator of CustomTemplate items matching the search criteria.\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; Iterator[CustomTemplate]:\n        for item in items:\n            id = item[\"albertId\"]\n            try:\n                yield self.get_by_id(id=id)\n            except AlbertHTTPError as e:\n                logger.warning(f\"Error fetching custom template {id}: {e}\")\n\n    params = {\"limit\": limit, \"offset\": offset, \"text\": text}\n\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/search\",\n        session=self.session,\n        params=params,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/data_columns/","title":"Data Columns","text":""},{"location":"collections/data_columns/#albert.collections.data_columns.DataColumnCollection","title":"albert.collections.data_columns.DataColumnCollection","text":"<pre><code>DataColumnCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>DataColumnCollection is a collection class for managing DataColumn entities in the Albert platform.</p> <p>Methods:</p> Name Description <code>get_by_name</code> <p>Get a data column by its name.</p> <code>get_by_id</code> <p>Get a data column by its ID.</p> <code>list</code> <p>Lists data column entities with optional filters.</p> <code>create</code> <p>Create a new data column entity.</p> <code>delete</code> <p>Delete a data column entity.</p> <code>update</code> <p>Update a data column entity.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/data_columns.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"Initialize the DataColumnCollection with the provided session.\"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{DataColumnCollection._api_version}/datacolumns\"\n</code></pre>"},{"location":"collections/data_columns/#albert.collections.data_columns.DataColumnCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/datacolumns'\n</code></pre>"},{"location":"collections/data_columns/#albert.collections.data_columns.DataColumnCollection.get_by_name","title":"get_by_name","text":"<pre><code>get_by_name(*, name) -&gt; DataColumn | None\n</code></pre> <p>Get a data column by its name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the data column to get.</p> required <p>Returns:</p> Type Description <code>DataColumn | None</code> <p>The data column object on match or None</p> Source code in <code>src/albert/collections/data_columns.py</code> <pre><code>def get_by_name(self, *, name) -&gt; DataColumn | None:\n    \"\"\"\n    Get a data column by its name.\n\n    Parameters\n    ----------\n    name : str\n        The name of the data column to get.\n\n    Returns\n    -------\n    DataColumn | None\n        The data column object on match or None\n    \"\"\"\n    for dc in self.list(name=name):\n        if dc.name.lower() == name.lower():\n            return dc\n    return None\n</code></pre>"},{"location":"collections/data_columns/#albert.collections.data_columns.DataColumnCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id) -&gt; DataColumn\n</code></pre> <p>Get a data column by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the data column to get.</p> required <p>Returns:</p> Type Description <code>DataColumn | None</code> <p>The data column object on match or None</p> Source code in <code>src/albert/collections/data_columns.py</code> <pre><code>def get_by_id(self, *, id) -&gt; DataColumn:\n    \"\"\"\n    Get a data column by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the data column to get.\n\n    Returns\n    -------\n    DataColumn | None\n        The data column object on match or None\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    dc = DataColumn(**response.json())\n    return dc\n</code></pre>"},{"location":"collections/data_columns/#albert.collections.data_columns.DataColumnCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    order_by: OrderBy = DESCENDING,\n    ids: str | list[str] | None = None,\n    name: str | list[str] | None = None,\n    exact_match: bool | None = None,\n    default: bool | None = None,\n    start_key: str | None = None,\n    limit: int = 100,\n    return_full: bool = True,\n) -&gt; Iterator[DataColumn]\n</code></pre> <p>Lists data column entities with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>order_by</code> <code>OrderBy</code> <p>The order by which to sort the results, by default OrderBy.DESCENDING.</p> <code>DESCENDING</code> <code>ids</code> <code>str | list[str] | None</code> <p>Data column IDs to filter the search by, default None.</p> <code>None</code> <code>name</code> <code>Union[str, None]</code> <p>The name of the tag to filter by, by default None.</p> <code>None</code> <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default True.</p> <code>None</code> <code>default</code> <code>bool</code> <p>Whether to return only default columns, by default None.</p> <code>None</code> <code>return_full</code> <code>bool</code> <p>Whether to make additional API call to fetch the full object, by default True</p> <code>True</code> <p>Returns:</p> Type Description <code>Iterator[DataColumn]</code> <p>An iterator of DataColumns matching the provided criteria.</p> Source code in <code>src/albert/collections/data_columns.py</code> <pre><code>def list(\n    self,\n    *,\n    order_by: OrderBy = OrderBy.DESCENDING,\n    ids: str | list[str] | None = None,\n    name: str | list[str] | None = None,\n    exact_match: bool | None = None,\n    default: bool | None = None,\n    start_key: str | None = None,\n    limit: int = 100,\n    return_full: bool = True,\n) -&gt; Iterator[DataColumn]:\n    \"\"\"\n    Lists data column entities with optional filters.\n\n    Parameters\n    ----------\n    order_by : OrderBy, optional\n        The order by which to sort the results, by default OrderBy.DESCENDING.\n    ids: str | list[str] | None, optional\n        Data column IDs to filter the search by, default None.\n    name : Union[str, None], optional\n        The name of the tag to filter by, by default None.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default True.\n    default : bool, optional\n        Whether to return only default columns, by default None.\n    return_full : bool, optional\n        Whether to make additional API call to fetch the full object, by default True\n\n    Returns\n    -------\n    Iterator[DataColumn]\n        An iterator of DataColumns matching the provided criteria.\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; Iterator[DataColumn]:\n        if return_full:\n            for item in items:\n                id = item[\"albertId\"]\n                try:\n                    yield self.get_by_id(id=id)\n                except AlbertHTTPError as e:\n                    logger.warning(f\"Error fetching Data Column '{id}': {e}\")\n        else:\n            yield from (DataColumn(**item) for item in items)\n\n    params = {\n        \"limit\": limit,\n        \"orderBy\": order_by.value,\n        \"startKey\": start_key,\n        \"name\": [name] if isinstance(name, str) else name,\n        \"exactMatch\": json.dumps(exact_match) if exact_match is not None else None,\n        \"default\": json.dumps(default) if default is not None else None,\n        \"dataColumns\": [ids] if isinstance(ids, str) else ids,\n    }\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/data_columns/#albert.collections.data_columns.DataColumnCollection.create","title":"create","text":"<pre><code>create(*, data_column: DataColumn) -&gt; DataColumn\n</code></pre> <p>Create a new data column entity.</p> <p>Parameters:</p> Name Type Description Default <code>data_column</code> <code>DataColumn</code> <p>The data column object to create.</p> required <p>Returns:</p> Type Description <code>DataColumn</code> <p>The created data column object.</p> Source code in <code>src/albert/collections/data_columns.py</code> <pre><code>def create(self, *, data_column: DataColumn) -&gt; DataColumn:\n    \"\"\"\n    Create a new data column entity.\n\n    Parameters\n    ----------\n    data_column : DataColumn\n        The data column object to create.\n\n    Returns\n    -------\n    DataColumn\n        The created data column object.\n    \"\"\"\n    payload = [data_column.model_dump(by_alias=True, exclude_unset=True, mode=\"json\")]\n    response = self.session.post(self.base_path, json=payload)\n\n    return DataColumn(**response.json()[0])\n</code></pre>"},{"location":"collections/data_columns/#albert.collections.data_columns.DataColumnCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Delete a data column entity.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the data column object to delete.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/data_columns.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Delete a data column entity.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the data column object to delete.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    self.session.delete(f\"{self.base_path}/{id}\")\n</code></pre>"},{"location":"collections/data_columns/#albert.collections.data_columns.DataColumnCollection.update","title":"update","text":"<pre><code>update(*, data_column: DataColumn) -&gt; DataColumn\n</code></pre> <p>Update a data column entity.</p> <p>Parameters:</p> Name Type Description Default <code>data_column</code> <code>DataColumn</code> <p>The updated data column object. The ID must be set and match an existing data column.</p> required <p>Returns:</p> Type Description <code>DataColumn</code> <p>The updated data column object as registered in Albert.</p> Source code in <code>src/albert/collections/data_columns.py</code> <pre><code>def update(self, *, data_column: DataColumn) -&gt; DataColumn:\n    \"\"\"Update a data column entity.\n\n    Parameters\n    ----------\n    data_column : DataColumn\n        The updated data column object. The ID must be set and match an existing data column.\n\n    Returns\n    -------\n    DataColumn\n        The updated data column object as registered in Albert.\n    \"\"\"\n    existing = self.get_by_id(id=data_column.id)\n    payload = self._generate_patch_payload(\n        existing=existing,\n        updated=data_column,\n    )\n    payload_dump = payload.model_dump(mode=\"json\", by_alias=True)\n    for i, change in enumerate(payload_dump[\"data\"]):\n        if not self._is_metadata_item_list(\n            existing_object=existing,\n            updated_object=data_column,\n            metadata_field=change[\"attribute\"],\n        ):\n            change[\"operation\"] = \"update\"\n            if \"newValue\" in change and change[\"newValue\"] is None:\n                del change[\"newValue\"]\n            if \"oldValue\" in change and change[\"oldValue\"] is None:\n                del change[\"oldValue\"]\n            payload_dump[\"data\"][i] = change\n    if len(payload_dump[\"data\"]) == 0:\n        return data_column\n    for e in payload_dump[\"data\"]:\n        self.session.patch(\n            f\"{self.base_path}/{data_column.id}\",\n            json={\"data\": [e]},\n        )\n    return self.get_by_id(id=data_column.id)\n</code></pre>"},{"location":"collections/data_templates/","title":"Data Templates","text":""},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection","title":"albert.collections.data_templates.DataTemplateCollection","text":"<pre><code>DataTemplateCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>DataTemplateCollection is a collection class for managing DataTemplate entities in the Albert platform.</p> <p>Methods:</p> Name Description <code>create</code> <p>Creates a new data template.</p> <code>get_by_id</code> <p>Get a data template by its ID.</p> <code>get_by_ids</code> <p>Get a list of data templates by their IDs.</p> <code>get_by_name</code> <p>Get a data template by its name.</p> <code>add_data_columns</code> <p>Adds data columns to a data template.</p> <code>add_parameters</code> <p>Adds parameters to a data template.</p> <code>list</code> <p>Lists data template entities with optional filters.</p> <code>update</code> <p>Updates a data template.</p> <code>delete</code> <p>Deletes a data template by its ID.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    super().__init__(session=session)\n    self.base_path = f\"/api/{DataTemplateCollection._api_version}/datatemplates\"\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/datatemplates'\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.create","title":"create","text":"<pre><code>create(*, data_template: DataTemplate) -&gt; DataTemplate\n</code></pre> <p>Creates a new data template.</p> <p>Parameters:</p> Name Type Description Default <code>data_template</code> <code>DataTemplate</code> <p>The DataTemplate object to create.</p> required <p>Returns:</p> Type Description <code>DataTemplate</code> <p>The registered DataTemplate object with an ID.</p> Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def create(self, *, data_template: DataTemplate) -&gt; DataTemplate:\n    \"\"\"Creates a new data template.\n\n    Parameters\n    ----------\n    data_template : DataTemplate\n        The DataTemplate object to create.\n\n    Returns\n    -------\n    DataTemplate\n        The registered DataTemplate object with an ID.\n    \"\"\"\n    # Preprocess data_column_values to set validation to None if it is an empty list\n    # Handle a bug in the API where validation is an empty list\n    # https://support.albertinvent.com/hc/en-us/requests/9177\n    if (\n        isinstance(data_template.data_column_values, list)\n        and len(data_template.data_column_values) == 0\n    ):\n        data_template.data_column_values = None\n    if data_template.data_column_values is not None:\n        for column_value in data_template.data_column_values:\n            if isinstance(column_value.validation, list) and len(column_value.validation) == 0:\n                column_value.validation = None\n    # remove them on the initial post\n    parameter_values = data_template.parameter_values\n    data_template.parameter_values = None\n    response = self.session.post(\n        self.base_path,\n        json=data_template.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n    )\n    dt = DataTemplate(**response.json())\n    dt.parameter_values = parameter_values\n    if data_template.parameter_values is None or len(data_template.parameter_values) == 0:\n        return dt\n    else:\n        return self.add_parameters(\n            data_template_id=dt.id, parameters=data_template.parameter_values\n        )\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: DataTemplateId) -&gt; DataTemplate\n</code></pre> <p>Get a data template by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>DataTemplateId</code> <p>The ID of the data template to get.</p> required <p>Returns:</p> Type Description <code>DataTemplate</code> <p>The data template object on match or None</p> Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def get_by_id(self, *, id: DataTemplateId) -&gt; DataTemplate:\n    \"\"\"Get a data template by its ID.\n\n    Parameters\n    ----------\n    id : DataTemplateId\n        The ID of the data template to get.\n\n    Returns\n    -------\n    DataTemplate\n        The data template object on match or None\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    return DataTemplate(**response.json())\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.get_by_ids","title":"get_by_ids","text":"<pre><code>get_by_ids(\n    *, ids: list[DataTemplateId]\n) -&gt; list[DataTemplate]\n</code></pre> <p>Get a list of data templates by their IDs.</p> <p>Parameters:</p> Name Type Description Default <code>ids</code> <code>list[DataTemplateId]</code> <p>The list of DataTemplate IDs to get.</p> required <p>Returns:</p> Type Description <code>list[DataTemplate]</code> <p>A list of DataTemplate objects with the provided IDs.</p> Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def get_by_ids(self, *, ids: list[DataTemplateId]) -&gt; list[DataTemplate]:\n    \"\"\"Get a list of data templates by their IDs.\n\n    Parameters\n    ----------\n    ids : list[DataTemplateId]\n        The list of DataTemplate IDs to get.\n\n    Returns\n    -------\n    list[DataTemplate]\n        A list of DataTemplate objects with the provided IDs.\n    \"\"\"\n    url = f\"{self.base_path}/ids\"\n    batches = [ids[i : i + 250] for i in range(0, len(ids), 250)]\n    return [\n        DataTemplate(**item)\n        for batch in batches\n        for item in self.session.get(url, params={\"id\": batch}).json()[\"Items\"]\n    ]\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.get_by_name","title":"get_by_name","text":"<pre><code>get_by_name(*, name: str) -&gt; DataTemplate | None\n</code></pre> <p>Get a data template by its name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the data template to get.</p> required <p>Returns:</p> Type Description <code>DataTemplate | None</code> <p>The matching data template object or None if not found.</p> Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def get_by_name(self, *, name: str) -&gt; DataTemplate | None:\n    \"\"\"Get a data template by its name.\n\n    Parameters\n    ----------\n    name : str\n        The name of the data template to get.\n\n    Returns\n    -------\n    DataTemplate | None\n        The matching data template object or None if not found.\n    \"\"\"\n    hits = list(self.list(name=name))\n    for h in hits:\n        if h.name.lower() == name.lower():\n            return h\n    return None\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.add_data_columns","title":"add_data_columns","text":"<pre><code>add_data_columns(\n    *,\n    data_template_id: DataTemplateId,\n    data_columns: list[DataColumnValue],\n) -&gt; DataTemplate\n</code></pre> <p>Adds data columns to a data template.</p> <p>Parameters:</p> Name Type Description Default <code>data_template_id</code> <code>str</code> <p>The ID of the data template to add the columns to.</p> required <code>data_columns</code> <code>list[DataColumnValue]</code> <p>The list of DataColumnValue objects to add to the data template.</p> required <p>Returns:</p> Type Description <code>DataTemplate</code> <p>The updated DataTemplate object.</p> Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def add_data_columns(\n    self, *, data_template_id: DataTemplateId, data_columns: list[DataColumnValue]\n) -&gt; DataTemplate:\n    \"\"\"Adds data columns to a data template.\n\n    Parameters\n    ----------\n    data_template_id : str\n        The ID of the data template to add the columns to.\n    data_columns : list[DataColumnValue]\n        The list of DataColumnValue objects to add to the data template.\n\n    Returns\n    -------\n    DataTemplate\n        The updated DataTemplate object.\n    \"\"\"\n    # if there are enum values, we need to add them as an allowed enum\n    for column in data_columns:\n        if (\n            column.validation\n            and len(column.validation) &gt; 0\n            and isinstance(column.validation[0].value, list)\n        ):\n            for enum_value in column.validation[0].value:\n                self.session.put(\n                    f\"{self.base_path}/{data_template_id}/datacolumns/{column.sequence}/enums\",\n                    json=[\n                        enum_value.model_dump(mode=\"json\", by_alias=True, exclude_none=True)\n                    ],\n                )\n\n    payload = {\n        \"DataColumns\": [\n            x.model_dump(mode=\"json\", by_alias=True, exclude_none=True) for x in data_columns\n        ]\n    }\n    self.session.put(\n        f\"{self.base_path}/{data_template_id}/datacolumns\",\n        json=payload,\n    )\n    return self.get_by_id(id=data_template_id)\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.add_parameters","title":"add_parameters","text":"<pre><code>add_parameters(\n    *,\n    data_template_id: DataTemplateId,\n    parameters: list[ParameterValue],\n) -&gt; DataTemplate\n</code></pre> <p>Adds parameters to a data template.</p> <p>Parameters:</p> Name Type Description Default <code>data_template_id</code> <code>str</code> <p>The ID of the data template to add the columns to.</p> required <code>parameters</code> <code>list[ParameterValue]</code> <p>The list of ParameterValue objects to add to the data template.</p> required <p>Returns:</p> Type Description <code>DataTemplate</code> <p>The updated DataTemplate object.</p> Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def add_parameters(\n    self, *, data_template_id: DataTemplateId, parameters: list[ParameterValue]\n) -&gt; DataTemplate:\n    \"\"\"Adds parameters to a data template.\n\n    Parameters\n    ----------\n    data_template_id : str\n        The ID of the data template to add the columns to.\n    parameters : list[ParameterValue]\n        The list of ParameterValue objects to add to the data template.\n\n    Returns\n    -------\n    DataTemplate\n        The updated DataTemplate object.\n    \"\"\"\n    # make sure the parameter values have a default validaion of string type.\n    initial_enum_values = {}  # use index to track the enum values\n    if parameters is None or len(parameters) == 0:\n        return self.get_by_id(id=data_template_id)\n    for i, param in enumerate(parameters):\n        if (\n            param.validation\n            and len(param.validation) &gt; 0\n            and param.validation[0].datatype == DataType.ENUM\n        ):\n            initial_enum_values[i] = param.validation[0].value\n            param.validation[0].value = None\n            param.validation[0].datatype = DataType.STRING\n\n    payload = {\n        \"Parameters\": [\n            x.model_dump(mode=\"json\", by_alias=True, exclude_none=True) for x in parameters\n        ]\n    }\n    # if there are enum values, we need to add them as an allowed enum\n    response = self.session.put(\n        f\"{self.base_path}/{data_template_id}/parameters\",\n        json=payload,\n    )\n    returned_parameters = [ParameterValue(**x) for x in response.json()[\"Parameters\"]]\n    for i, param in enumerate(returned_parameters):\n        if i in initial_enum_values:\n            param.validation[0].value = initial_enum_values[i]\n            param.validation[0].datatype = DataType.ENUM\n    self._add_param_enums(\n        data_template_id=data_template_id,\n        new_parameters=returned_parameters,\n    )\n    dt_with_params = self.get_by_id(id=data_template_id)\n    for i, param in enumerate(dt_with_params.parameter_values):\n        if i in initial_enum_values:\n            param.validation[0].value = initial_enum_values[i]\n            param.validation[0].datatype = DataType.ENUM\n\n    return self.update(data_template=dt_with_params)\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    name: str | None = None,\n    user_id: str | None = None,\n    order_by: OrderBy = DESCENDING,\n    limit: int = 100,\n    offset: int = 0,\n) -&gt; Iterator[DataTemplate]\n</code></pre> <p>Lists data template entities with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>Union[str, None]</code> <p>The name of the data template to filter by, by default None.</p> <code>None</code> <code>user_id</code> <code>str</code> <p>user_id to filter by, by default None.</p> <code>None</code> <code>order_by</code> <code>OrderBy</code> <p>The order by which to sort the results, by default OrderBy.DESCENDING.</p> <code>DESCENDING</code> <p>Returns:</p> Type Description <code>Iterator[DataTemplate]</code> <p>An iterator of DataTemplate objects matching the provided criteria.</p> Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def list(\n    self,\n    *,\n    name: str | None = None,\n    user_id: str | None = None,\n    order_by: OrderBy = OrderBy.DESCENDING,\n    limit: int = 100,\n    offset: int = 0,\n) -&gt; Iterator[DataTemplate]:\n    \"\"\"\n    Lists data template entities with optional filters.\n\n    Parameters\n    ----------\n    name : Union[str, None], optional\n        The name of the data template to filter by, by default None.\n    user_id : str, optional\n        user_id to filter by, by default None.\n    order_by : OrderBy, optional\n        The order by which to sort the results, by default OrderBy.DESCENDING.\n\n    Returns\n    -------\n    Iterator[DataTemplate]\n        An iterator of DataTemplate objects matching the provided criteria.\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; Iterator[DataTemplate]:\n        for item in items:\n            id = item[\"albertId\"]\n            try:\n                yield self.get_by_id(id=id)\n            except AlbertHTTPError as e:\n                logger.warning(f\"Error fetching parameter group {id}: {e}\")\n        # get by ids is not currently returning metadata correctly, so temp fixing this\n        # return self.get_by_ids(ids=[x[\"albertId\"] for x in items])\n\n    params = {\n        \"limit\": limit,\n        \"offset\": offset,\n        \"order\": OrderBy(order_by).value if order_by else None,\n        \"text\": name,\n        \"userId\": user_id,\n    }\n\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/search\",\n        session=self.session,\n        deserialize=deserialize,\n        params=params,\n    )\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.update","title":"update","text":"<pre><code>update(*, data_template: DataTemplate) -&gt; DataTemplate\n</code></pre> <p>Updates a data template.</p> <p>Parameters:</p> Name Type Description Default <code>data_template</code> <code>DataTemplate</code> <p>The DataTemplate object to update. The ID must be set and matching the ID of the DataTemplate to update.</p> required <p>Returns:</p> Type Description <code>DataTemplate</code> <p>The Updated DataTemplate object.</p> Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def update(self, *, data_template: DataTemplate) -&gt; DataTemplate:\n    \"\"\"Updates a data template.\n\n    Parameters\n    ----------\n    data_template : DataTemplate\n        The DataTemplate object to update. The ID must be set and matching the ID of the DataTemplate to update.\n\n    Returns\n    -------\n    DataTemplate\n        The Updated DataTemplate object.\n    \"\"\"\n\n    existing = self.get_by_id(id=data_template.id)\n\n    base_payload = self._generate_patch_payload(existing=existing, updated=data_template)\n\n    path = f\"{self.base_path}/{existing.id}\"\n    (\n        general_patches,\n        new_data_columns,\n        data_column_enum_patches,\n        new_parameters,\n        parameter_enum_patches,\n        parameter_patches,\n    ) = generate_data_template_patches(\n        initial_patches=base_payload,\n        updated_data_template=data_template,\n        existing_data_template=existing,\n    )\n\n    if len(new_data_columns) &gt; 0:\n        self.session.put(\n            f\"{self.base_path}/{existing.id}/datacolumns\",\n            json={\n                \"DataColumns\": [\n                    x.model_dump(mode=\"json\", by_alias=True, exclude_none=True)\n                    for x in new_data_columns\n                ],\n            },\n        )\n    if len(data_column_enum_patches) &gt; 0:\n        for sequence, enum_patches in data_column_enum_patches.items():\n            if len(enum_patches) == 0:\n                continue\n            self.session.put(\n                f\"{self.base_path}/{existing.id}/datacolumns/{sequence}/enums\",\n                json=enum_patches,  # these are simple dicts for now\n            )\n    if len(new_parameters) &gt; 0:\n        self.session.put(\n            f\"{self.base_path}/{existing.id}/parameters\",\n            json={\n                \"Parameters\": [\n                    x.model_dump(mode=\"json\", by_alias=True, exclude_none=True)\n                    for x in new_parameters\n                ],\n            },\n        )\n    if len(parameter_enum_patches) &gt; 0:\n        for sequence, enum_patches in parameter_enum_patches.items():\n            if len(enum_patches) == 0:\n                continue\n            self.session.put(\n                f\"{self.base_path}/{existing.id}/parameters/{sequence}/enums\",\n                json=enum_patches,  # these are simple dicts for now\n            )\n    if len(parameter_patches) &gt; 0:\n        payload = PGPatchPayload(data=parameter_patches)\n        self.session.patch(\n            path + \"/parameters\",\n            json=payload.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n        )\n    if len(general_patches.data) &gt; 0:\n        payload = GeneralPatchPayload(data=general_patches.data)\n        self.session.patch(\n            path,\n            json=payload.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n        )\n    return self.get_by_id(id=data_template.id)\n</code></pre>"},{"location":"collections/data_templates/#albert.collections.data_templates.DataTemplateCollection.delete","title":"delete","text":"<pre><code>delete(*, id: DataTemplateId) -&gt; None\n</code></pre> <p>Deletes a data template by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the data template to delete.</p> required Source code in <code>src/albert/collections/data_templates.py</code> <pre><code>def delete(self, *, id: DataTemplateId) -&gt; None:\n    \"\"\"Deletes a data template by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the data template to delete.\n    \"\"\"\n    self.session.delete(f\"{self.base_path}/{id}\")\n</code></pre>"},{"location":"collections/files/","title":"Files","text":""},{"location":"collections/files/#albert.collections.files.FileCollection","title":"albert.collections.files.FileCollection","text":"<pre><code>FileCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>FileCollection is a collection class for managing File entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_by_name</code> <p>Gets a file by name and namespace.</p> <code>get_signed_download_url</code> <p>Get a signed download URL for a file.</p> <code>get_signed_upload_url</code> <p>Get a signed upload URL for a file.</p> <code>sign_and_upload_file</code> <p>Sign and upload a file to Albert.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/files.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initialize the FileCllection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{FileCollection._api_version}/files\"\n</code></pre>"},{"location":"collections/files/#albert.collections.files.FileCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/files'\n</code></pre>"},{"location":"collections/files/#albert.collections.files.FileCollection.get_by_name","title":"get_by_name","text":"<pre><code>get_by_name(\n    *,\n    name: str,\n    namespace: FileNamespace,\n    generic: bool = False,\n) -&gt; FileInfo\n</code></pre> <p>Gets a file by name and namespace.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The Name of the file</p> required <code>namespace</code> <code>FileNamespace</code> <p>The namespace of the file (e.g. AGENT, BREAKTHROUGH, PIPELINE, PUBLIC, RESULT, SDS)</p> required <code>generic</code> <code>bool</code> <p>description, by default False</p> <code>False</code> <p>Returns:</p> Type Description <code>FileInfo</code> <p>The file information related to the matching file.</p> Source code in <code>src/albert/collections/files.py</code> <pre><code>def get_by_name(\n    self,\n    *,\n    name: str,\n    namespace: FileNamespace,\n    generic: bool = False,\n) -&gt; FileInfo:\n    \"\"\"Gets a file by name and namespace.\n\n    Parameters\n    ----------\n    name : str\n        The Name of the file\n    namespace : FileNamespace\n        The namespace of the file (e.g. AGENT, BREAKTHROUGH, PIPELINE, PUBLIC, RESULT, SDS)\n    generic : bool, optional\n        _description_, by default False\n\n    Returns\n    -------\n    FileInfo\n        The file information related to the matching file.\n    \"\"\"\n    params = {\n        \"name\": name,\n        \"namespace\": namespace,\n        \"generic\": json.dumps(generic),\n    }\n    response = self.session.get(f\"{self.base_path}/info\", params=params)\n    return FileInfo(**response.json())\n</code></pre>"},{"location":"collections/files/#albert.collections.files.FileCollection.get_signed_download_url","title":"get_signed_download_url","text":"<pre><code>get_signed_download_url(\n    *,\n    name: str,\n    namespace: FileNamespace,\n    version_id: str | None = None,\n    generic: bool = False,\n    category: FileCategory | None = None,\n) -&gt; str\n</code></pre> <p>Get a signed download URL for a file.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The Name of the file</p> required <code>namespace</code> <code>FileNamespace</code> <p>The namespace of the file (e.g. AGENT, BREAKTHROUGH, PIPELINE, PUBLIC, RESULT, SDS)</p> required <code>version_id</code> <code>str | None</code> <p>The version of the file, by default None</p> <code>None</code> <code>category</code> <code>FileCategory | None</code> <p>The file category (E.g., SDS, OTHER), by default None</p> <code>None</code> <p>Returns:</p> Type Description <code>str</code> <p>description</p> Source code in <code>src/albert/collections/files.py</code> <pre><code>def get_signed_download_url(\n    self,\n    *,\n    name: str,\n    namespace: FileNamespace,\n    version_id: str | None = None,\n    generic: bool = False,\n    category: FileCategory | None = None,\n) -&gt; str:\n    \"\"\"Get a signed download URL for a file.\n\n    Parameters\n    ----------\n    name : str\n        The Name of the file\n    namespace : FileNamespace\n        The namespace of the file (e.g. AGENT, BREAKTHROUGH, PIPELINE, PUBLIC, RESULT, SDS)\n    version_id : str | None, optional\n        The version of the file, by default None\n    category : FileCategory | None, optional\n        The file category (E.g., SDS, OTHER), by default None\n\n    Returns\n    -------\n    str\n        _description_\n    \"\"\"\n    params = {\n        \"name\": name,\n        \"namespace\": namespace,\n        \"versionId\": version_id,\n        \"generic\": json.dumps(generic),\n        \"category\": category,\n    }\n    response = self.session.get(\n        f\"{self.base_path}/sign\",\n        params={k: v for k, v in params.items() if v is not None},\n    )\n    return response.json()[\"URL\"]\n</code></pre>"},{"location":"collections/files/#albert.collections.files.FileCollection.get_signed_upload_url","title":"get_signed_upload_url","text":"<pre><code>get_signed_upload_url(\n    *,\n    name: str,\n    namespace: FileNamespace,\n    content_type: str,\n    generic: bool = False,\n    category: FileCategory | None = None,\n) -&gt; str\n</code></pre> <p>Get a signed upload URL for a file.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The Name of the file</p> required <code>namespace</code> <code>FileNamespace</code> <p>The namespace of the file (e.g. AGENT, BREAKTHROUGH, PIPELINE, PUBLIC, RESULT, SDS)</p> required <code>content_type</code> <code>str</code> <p>The content type of the file</p> required <code>category</code> <code>FileCategory | None</code> <p>The File category (E.g., SDS, OTHER), by default None</p> <code>None</code> <p>Returns:</p> Type Description <code>str</code> <p>description</p> Source code in <code>src/albert/collections/files.py</code> <pre><code>def get_signed_upload_url(\n    self,\n    *,\n    name: str,\n    namespace: FileNamespace,\n    content_type: str,\n    generic: bool = False,\n    category: FileCategory | None = None,\n) -&gt; str:\n    \"\"\"Get a signed upload URL for a file.\n\n    Parameters\n    ----------\n    name : str\n        The Name of the file\n    namespace : FileNamespace\n        The namespace of the file (e.g. AGENT, BREAKTHROUGH, PIPELINE, PUBLIC, RESULT, SDS)\n    content_type : str\n        The content type of the file\n    category : FileCategory | None, optional\n        The File category (E.g., SDS, OTHER), by default None\n\n    Returns\n    -------\n    str\n        _description_\n    \"\"\"\n    params = {\"generic\": json.dumps(generic)}\n\n    post_body = SignURLPOST(\n        files=[\n            SignURLPOSTFile(\n                name=name,\n                namespace=namespace,\n                content_type=content_type,\n                category=category,\n            )\n        ]\n    )\n\n    response = self.session.post(\n        f\"{self.base_path}/sign\",\n        json=post_body.model_dump(by_alias=True, exclude_unset=True, mode=\"json\"),\n        params=params,\n    )\n    return response.json()[0][\"URL\"]\n</code></pre>"},{"location":"collections/files/#albert.collections.files.FileCollection.sign_and_upload_file","title":"sign_and_upload_file","text":"<pre><code>sign_and_upload_file(\n    data: IO,\n    name: str,\n    namespace: FileNamespace,\n    content_type: str,\n    generic: bool = False,\n    category: FileCategory | None = None,\n) -&gt; None\n</code></pre> <p>Sign and upload a file to Albert.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>IO</code> <p>The file data</p> required <code>name</code> <code>str</code> <p>The name of the file</p> required <code>namespace</code> <code>FileNamespace</code> <p>The File Namespace (e.g., AGENT, BREAKTHROUGH, PIPELINE, PUBLIC, RESULT, SDS)</p> required <code>content_type</code> <code>str</code> <p>The content type of the file</p> required <code>category</code> <code>FileCategory | None</code> <p>The category of the file (E.g., SDS, OTHER), by default None</p> <code>None</code> Source code in <code>src/albert/collections/files.py</code> <pre><code>def sign_and_upload_file(\n    self,\n    data: IO,\n    name: str,\n    namespace: FileNamespace,\n    content_type: str,\n    generic: bool = False,\n    category: FileCategory | None = None,\n) -&gt; None:\n    \"\"\"Sign and upload a file to Albert.\n\n    Parameters\n    ----------\n    data : IO\n        The file data\n    name : str\n        The name of the file\n    namespace : FileNamespace\n        The File Namespace (e.g., AGENT, BREAKTHROUGH, PIPELINE, PUBLIC, RESULT, SDS)\n    content_type : str\n        The content type of the file\n    category : FileCategory | None, optional\n        The category of the file (E.g., SDS, OTHER), by default None\n    \"\"\"\n    upload_url = self.get_signed_upload_url(\n        name=name,\n        namespace=namespace,\n        content_type=content_type,\n        generic=generic,\n        category=category,\n    )\n    requests.put(upload_url, data=data, headers={\"Content-Type\": content_type})\n</code></pre>"},{"location":"collections/inventory/","title":"Inventory","text":""},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection","title":"albert.collections.inventory.InventoryCollection","text":"<pre><code>InventoryCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>InventoryCollection is a collection class for managing Inventory Item entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>Albert</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>merge</code> <p>Merge one or multiple child inventory into a parent inventory item.</p> <code>inventory_exists</code> <p>Check if an inventory item exists.</p> <code>get_match_or_none</code> <p>Get a matching inventory item or return None if not found.</p> <code>create</code> <p>Create a new inventory item.</p> <code>get_by_id</code> <p>Retrieve an inventory item by its ID.</p> <code>get_by_ids</code> <p>Retrieve an set of inventory items by their IDs.</p> <code>get_specs</code> <p>Get the specs for a list of inventory items.</p> <code>add_specs</code> <p>Add inventory specs to the inventory item.</p> <code>delete</code> <p>Delete an inventory item by its ID.</p> <code>get_all_facets</code> <p>Get available facets for inventory items based on the provided filters.</p> <code>get_facet_by_name</code> <p>Returns a specific facet by its name with all the filters applied to the search.</p> <code>search</code> <p>Get a list of inventory items that match the search criteria and</p> <code>list</code> <p>List inventory items with optional filters.</p> <code>update</code> <p>Update an inventory item.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    InventoryCollection is a collection class for managing inventory items.\n\n    Parameters\n    ----------\n    session : Albert\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{InventoryCollection._api_version}/inventories\"\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/inventories'\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.merge","title":"merge","text":"<pre><code>merge(\n    *,\n    parent_id: InventoryId,\n    child_id: InventoryId | list[InventoryId],\n    modules: list[str] | None = None,\n) -&gt; None\n</code></pre> <p>Merge one or multiple child inventory into a parent inventory item.</p> <p>Parameters:</p> Name Type Description Default <code>parent_id</code> <code>InventoryId</code> <p>The ID of the parent inventory item.</p> required <code>child_id</code> <code>InventoryId | list[InventoryId]</code> <p>The ID(s) of the child inventory item(s).</p> required <code>modules</code> <code>list[str]</code> <p>The merge modules to use (default is all).</p> <code>None</code> <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>def merge(\n    self,\n    *,\n    parent_id: InventoryId,\n    child_id: InventoryId | list[InventoryId],\n    modules: list[str] | None = None,\n) -&gt; None:\n    \"\"\"\n    Merge one or multiple child inventory into a parent inventory item.\n\n    Parameters\n    ----------\n    parent_id : InventoryId\n        The ID of the parent inventory item.\n    child_id : InventoryId | list[InventoryId]\n        The ID(s) of the child inventory item(s).\n    modules : list[str], optional\n        The merge modules to use (default is all).\n\n    Returns\n    -------\n    None\n    \"\"\"\n\n    # assume \"all\" modules if not specified explicitly\n    modules = modules if modules is not None else ALL_MERGE_MODULES\n\n    # define merge endpoint\n    url = f\"{self.base_path}/merge\"\n\n    if isinstance(child_id, list):\n        child_inventories = [{\"id\": i} for i in child_id]\n    else:\n        child_inventories = [{\"id\": child_id}]\n\n    # define payload using the class\n    payload = MergeInventory(\n        parent_id=parent_id,\n        child_inventories=child_inventories,\n        modules=modules,\n    )\n\n    # post request\n    self.session.post(url, json=payload.model_dump(mode=\"json\", by_alias=True))\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.inventory_exists","title":"inventory_exists","text":"<pre><code>inventory_exists(*, inventory_item: InventoryItem) -&gt; bool\n</code></pre> <p>Check if an inventory item exists.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_item</code> <code>InventoryItem</code> <p>The inventory item to check.</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True if the inventory item exists, False otherwise.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>def inventory_exists(self, *, inventory_item: InventoryItem) -&gt; bool:\n    \"\"\"\n    Check if an inventory item exists.\n\n    Parameters\n    ----------\n    inventory_item : InventoryItem\n        The inventory item to check.\n\n    Returns\n    -------\n    bool\n        True if the inventory item exists, False otherwise.\n    \"\"\"\n    hit = self.get_match_or_none(inventory_item=inventory_item)\n    return bool(hit)\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.get_match_or_none","title":"get_match_or_none","text":"<pre><code>get_match_or_none(\n    *, inventory_item: InventoryItem\n) -&gt; InventoryItem | None\n</code></pre> <p>Get a matching inventory item or return None if not found.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_item</code> <code>InventoryItem</code> <p>The inventory item to match.</p> required <p>Returns:</p> Type Description <code>Union[InventoryItem, None]</code> <p>The matching inventory item or None if not found.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>def get_match_or_none(self, *, inventory_item: InventoryItem) -&gt; InventoryItem | None:\n    \"\"\"\n    Get a matching inventory item or return None if not found.\n\n    Parameters\n    ----------\n    inventory_item : InventoryItem\n        The inventory item to match.\n\n    Returns\n    -------\n    Union[InventoryItem, None]\n        The matching inventory item or None if not found.\n    \"\"\"\n    hits = self.list(text=inventory_item.name, company=[inventory_item.company])\n    inv_company = (\n        inventory_item.company.name\n        if isinstance(inventory_item.company, Company)\n        else inventory_item.company\n    )\n    for inv in hits:\n        if inv and inv.name == inventory_item.name and inv.company.name == inv_company:\n            return inv\n    else:\n        return None\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.create","title":"create","text":"<pre><code>create(\n    *,\n    inventory_item: InventoryItem,\n    avoid_duplicates: bool = True,\n) -&gt; InventoryItem\n</code></pre> <p>Create a new inventory item.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_item</code> <code>InventoryItem</code> <p>The inventory item to create.</p> required <code>avoid_duplicates</code> <code>bool</code> <p>Whether to avoid creating duplicate items (default is True).</p> <code>True</code> <p>Returns:</p> Type Description <code>InventoryItem</code> <p>The created inventory item.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>def create(\n    self,\n    *,\n    inventory_item: InventoryItem,\n    avoid_duplicates: bool = True,\n) -&gt; InventoryItem:\n    \"\"\"\n    Create a new inventory item.\n\n    Parameters\n    ----------\n    inventory_item : InventoryItem\n        The inventory item to create.\n    avoid_duplicates : bool, optional\n        Whether to avoid creating duplicate items (default is True).\n\n    Returns\n    -------\n    InventoryItem\n        The created inventory item.\n    \"\"\"\n    category = (\n        inventory_item.category\n        if isinstance(inventory_item.category, str)\n        else inventory_item.category.value\n    )\n    if category == InventoryCategory.FORMULAS.value:\n        # This will need to interact with worksheets\n        raise NotImplementedError(\"Registrations of formulas not yet implemented\")\n    tag_collection = TagCollection(session=self.session)\n    if inventory_item.tags is not None and inventory_item.tags != []:\n        all_tags = [\n            tag_collection.create(tag=t) if t.id is None else t for t in inventory_item.tags\n        ]\n        inventory_item.tags = all_tags\n    if inventory_item.company and inventory_item.company.id is None:\n        company_collection = CompanyCollection(session=self.session)\n        inventory_item.company = company_collection.create(company=inventory_item.company)\n    # Check to see if there is a match on name + Company already\n    if avoid_duplicates:\n        existing = self.get_match_or_none(inventory_item=inventory_item)\n        if isinstance(existing, InventoryItem):\n            logging.warning(\n                f\"Inventory item already exists with name {existing.name} and company {existing.company.name}, returning existing item.\"\n            )\n            return existing\n    response = self.session.post(\n        self.base_path,\n        json=inventory_item.model_dump(by_alias=True, exclude_none=True, mode=\"json\"),\n    )\n    return InventoryItem(**response.json())\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: InventoryId) -&gt; InventoryItem\n</code></pre> <p>Retrieve an inventory item by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>InventoryId</code> <p>The ID of the inventory item.</p> required <p>Returns:</p> Type Description <code>InventoryItem</code> <p>The retrieved inventory item.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>@validate_call\ndef get_by_id(self, *, id: InventoryId) -&gt; InventoryItem:\n    \"\"\"\n    Retrieve an inventory item by its ID.\n\n    Parameters\n    ----------\n    id : InventoryId\n        The ID of the inventory item.\n\n    Returns\n    -------\n    InventoryItem\n        The retrieved inventory item.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    return InventoryItem(**response.json())\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.get_by_ids","title":"get_by_ids","text":"<pre><code>get_by_ids(\n    *, ids: list[InventoryId]\n) -&gt; list[InventoryItem]\n</code></pre> <p>Retrieve an set of inventory items by their IDs.</p> <p>Parameters:</p> Name Type Description Default <code>ids</code> <code>list[InventoryId]</code> <p>The list of IDs of the inventory items.</p> required <p>Returns:</p> Type Description <code>list[InventoryItem]</code> <p>The retrieved inventory items.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>@validate_call\ndef get_by_ids(self, *, ids: list[InventoryId]) -&gt; list[InventoryItem]:\n    \"\"\"\n    Retrieve an set of inventory items by their IDs.\n\n    Parameters\n    ----------\n    ids : list[InventoryId]\n        The list of IDs of the inventory items.\n\n    Returns\n    -------\n    list[InventoryItem]\n        The retrieved inventory items.\n    \"\"\"\n    batch_size = 250\n    batches = [ids[i : i + batch_size] for i in range(0, len(ids), batch_size)]\n    inventory = []\n    for batch in batches:\n        response = self.session.get(f\"{self.base_path}/ids\", params={\"id\": batch})\n        inventory.extend([InventoryItem(**item) for item in response.json()[\"Items\"]])\n    return inventory\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.get_specs","title":"get_specs","text":"<pre><code>get_specs(\n    *, ids: list[InventoryId]\n) -&gt; list[InventorySpecList]\n</code></pre> <p>Get the specs for a list of inventory items.</p> <p>Parameters:</p> Name Type Description Default <code>ids</code> <code>list[InventoryId]</code> <p>List of Inventory IDs to get the specs for.</p> required <p>Returns:</p> Type Description <code>list[InventorySpecList]</code> <p>A list of InventorySpecList objects, each containing the specs for an inventory item.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>@validate_call\ndef get_specs(self, *, ids: list[InventoryId]) -&gt; list[InventorySpecList]:\n    \"\"\"Get the specs for a list of inventory items.\n\n    Parameters\n    ----------\n    ids : list[InventoryId]\n        List of Inventory IDs to get the specs for.\n\n    Returns\n    -------\n    list[InventorySpecList]\n        A list of InventorySpecList objects, each containing the specs for an inventory item.\n    \"\"\"\n    url = f\"{self.base_path}/specs\"\n    batches = [ids[i : i + 250] for i in range(0, len(ids), 250)]\n    ta = TypeAdapter(InventorySpecList)\n    return [\n        ta.validate_python(item)\n        for batch in batches\n        for item in self.session.get(url, params={\"id\": batch}).json()\n    ]\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.add_specs","title":"add_specs","text":"<pre><code>add_specs(\n    *,\n    inventory_id: InventoryId,\n    specs: InventorySpec | list[InventorySpec],\n) -&gt; InventorySpecList\n</code></pre> <p>Add inventory specs to the inventory item.</p> <p>An <code>InventorySpec</code> is a property that was not directly measured via a task, but is a generic property of that inentory item.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_id</code> <code>InventoryId</code> <p>The Albert ID of the inventory item to add the specs to</p> required <code>specs</code> <code>list[InventorySpec]</code> <p>List of InventorySpec objects to add to the inventory item, which described the value and, optionally, the conditions associated with the value (via workflow).</p> required <p>Returns:</p> Type Description <code>InventorySpecList</code> <p>The list of InventorySpecs attached to the InventoryItem.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>@validate_call\ndef add_specs(\n    self,\n    *,\n    inventory_id: InventoryId,\n    specs: InventorySpec | list[InventorySpec],\n) -&gt; InventorySpecList:\n    \"\"\"Add inventory specs to the inventory item.\n\n    An `InventorySpec` is a property that was not directly measured via a task,\n    but is a generic property of that inentory item.\n\n    Parameters\n    ----------\n    inventory_id : InventoryId\n        The Albert ID of the inventory item to add the specs to\n    specs : list[InventorySpec]\n        List of InventorySpec objects to add to the inventory item,\n        which described the value and, optionally,\n        the conditions associated with the value (via workflow).\n\n    Returns\n    -------\n    InventorySpecList\n        The list of InventorySpecs attached to the InventoryItem.\n    \"\"\"\n    if isinstance(specs, InventorySpec):\n        specs = [specs]\n    response = self.session.put(\n        url=f\"{self.base_path}/{inventory_id}/specs\",\n        json=[x.model_dump(exclude_unset=True, by_alias=True, mode=\"json\") for x in specs],\n    )\n    return InventorySpecList(**response.json())\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.delete","title":"delete","text":"<pre><code>delete(*, id: InventoryId) -&gt; None\n</code></pre> <p>Delete an inventory item by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>InventoryId</code> <p>The ID of the inventory item.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>@validate_call\ndef delete(self, *, id: InventoryId) -&gt; None:\n    \"\"\"\n    Delete an inventory item by its ID.\n\n    Parameters\n    ----------\n    id : InventoryId\n        The ID of the inventory item.\n\n    Returns\n    -------\n    None\n    \"\"\"\n\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.get_all_facets","title":"get_all_facets","text":"<pre><code>get_all_facets(\n    *,\n    text: str | None = None,\n    cas: list[Cas] | Cas | None = None,\n    category: list[InventoryCategory]\n    | InventoryCategory\n    | None = None,\n    company: list[Company] | Company | None = None,\n    location: list[Location] | Location | None = None,\n    storage_location: list[StorageLocation]\n    | StorageLocation\n    | None = None,\n    project_id: ProjectId | None = None,\n    sheet_id: WorksheetId | None = None,\n    created_by: list[User] | User | None = None,\n    lot_owner: list[User] | User | None = None,\n    tags: list[str] | None = None,\n    match_all_conditions: bool = False,\n) -&gt; list[FacetItem]\n</code></pre> <p>Get available facets for inventory items based on the provided filters.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>@validate_call\ndef get_all_facets(\n    self,\n    *,\n    text: str | None = None,\n    cas: list[Cas] | Cas | None = None,\n    category: list[InventoryCategory] | InventoryCategory | None = None,\n    company: list[Company] | Company | None = None,\n    location: list[Location] | Location | None = None,\n    storage_location: list[StorageLocation] | StorageLocation | None = None,\n    project_id: ProjectId | None = None,\n    sheet_id: WorksheetId | None = None,\n    created_by: list[User] | User | None = None,\n    lot_owner: list[User] | User | None = None,\n    tags: list[str] | None = None,\n    match_all_conditions: bool = False,\n) -&gt; list[FacetItem]:\n    \"\"\"\n    Get available facets for inventory items based on the provided filters.\n    \"\"\"\n\n    params = self._prepare_parameters(\n        limit=1,\n        text=text,\n        cas=cas,\n        category=category,\n        company=company,\n        location=location,\n        storage_location=storage_location,\n        project_id=project_id,\n        sheet_id=sheet_id,\n        created_by=created_by,\n        lot_owner=lot_owner,\n        tags=tags,\n    )\n    response = self.session.get(\n        url=f\"{self.base_path}/llmsearch\"\n        if match_all_conditions\n        else f\"{self.base_path}/search\",\n        params=params,\n    )\n    return [FacetItem.model_validate(x) for x in response.json()[\"Facets\"]]\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.get_facet_by_name","title":"get_facet_by_name","text":"<pre><code>get_facet_by_name(\n    name: str | list[str],\n    *,\n    text: str | None = None,\n    cas: list[Cas] | Cas | None = None,\n    category: list[InventoryCategory]\n    | InventoryCategory\n    | None = None,\n    company: list[Company] | Company | None = None,\n    location: list[Location] | Location | None = None,\n    storage_location: list[StorageLocation]\n    | StorageLocation\n    | None = None,\n    project_id: ProjectId | None = None,\n    sheet_id: WorksheetId | None = None,\n    created_by: list[User] | User | None = None,\n    lot_owner: list[User] | User | None = None,\n    tags: list[str] | None = None,\n    match_all_conditions: bool = False,\n) -&gt; list[FacetItem]\n</code></pre> <p>Returns a specific facet by its name with all the filters applied to the search. This can be used for example to fetch all remaining tags as part of an iterative refinement of a search.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>@validate_call\ndef get_facet_by_name(\n    self,\n    name: str | list[str],\n    *,\n    text: str | None = None,\n    cas: list[Cas] | Cas | None = None,\n    category: list[InventoryCategory] | InventoryCategory | None = None,\n    company: list[Company] | Company | None = None,\n    location: list[Location] | Location | None = None,\n    storage_location: list[StorageLocation] | StorageLocation | None = None,\n    project_id: ProjectId | None = None,\n    sheet_id: WorksheetId | None = None,\n    created_by: list[User] | User | None = None,\n    lot_owner: list[User] | User | None = None,\n    tags: list[str] | None = None,\n    match_all_conditions: bool = False,\n) -&gt; list[FacetItem]:\n    \"\"\"\n    Returns a specific facet by its name with all the filters applied to the search.\n    This can be used for example to fetch all remaining tags as part of an iterative\n    refinement of a search.\n    \"\"\"\n    if isinstance(name, str):\n        name = [name]\n\n    facets = self.get_all_facets(\n        text=text,\n        cas=cas,\n        category=category,\n        company=company,\n        location=location,\n        storage_location=storage_location,\n        project_id=project_id,\n        sheet_id=sheet_id,\n        created_by=created_by,\n        lot_owner=lot_owner,\n        tags=tags,\n        match_all_conditions=match_all_conditions,\n    )\n    filtered_facets = []\n    for facet in facets:\n        if facet.name in name or facet.name.lower() in name:\n            filtered_facets.append(facet)\n\n    return filtered_facets\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.search","title":"search","text":"<pre><code>search(\n    *,\n    limit: int = 100,\n    text: str | None = None,\n    cas: list[Cas] | Cas | None = None,\n    category: list[InventoryCategory]\n    | InventoryCategory\n    | None = None,\n    company: list[Company] | Company | None = None,\n    location: list[Location] | Location | None = None,\n    storage_location: list[StorageLocation]\n    | StorageLocation\n    | None = None,\n    project_id: ProjectId | None = None,\n    sheet_id: WorksheetId | None = None,\n    created_by: list[User] | User | None = None,\n    lot_owner: list[User] | User | None = None,\n    tags: list[str] | None = None,\n    match_all_conditions: bool = False,\n) -&gt; Iterator[InventorySearchItem]\n</code></pre> <p>Get a list of inventory items that match the search criteria and return the raw search records. These are not full inventory item objects, but are special short documents intended for fast summary results</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>@validate_call\ndef search(\n    self,\n    *,\n    limit: int = 100,\n    text: str | None = None,\n    cas: list[Cas] | Cas | None = None,\n    category: list[InventoryCategory] | InventoryCategory | None = None,\n    company: list[Company] | Company | None = None,\n    location: list[Location] | Location | None = None,\n    storage_location: list[StorageLocation] | StorageLocation | None = None,\n    project_id: ProjectId | None = None,\n    sheet_id: WorksheetId | None = None,\n    created_by: list[User] | User | None = None,\n    lot_owner: list[User] | User | None = None,\n    tags: list[str] | None = None,\n    match_all_conditions: bool = False,\n) -&gt; Iterator[InventorySearchItem]:\n    \"\"\"\n    Get a list of inventory items that match the search criteria and\n    return the raw search records. These are not full inventory item\n    objects, but are special short documents intended for fast summary results\n    \"\"\"\n\n    def deserialize(items: list[dict]):\n        return [InventorySearchItem.model_validate(x) for x in items]\n\n    params = self._prepare_parameters(\n        limit=limit,\n        text=text,\n        cas=cas,\n        category=category,\n        company=company,\n        location=location,\n        storage_location=storage_location,\n        project_id=project_id,\n        sheet_id=sheet_id,\n        created_by=created_by,\n        lot_owner=lot_owner,\n        tags=tags,\n    )\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/llmsearch\"\n        if match_all_conditions\n        else f\"{self.base_path}/search\",\n        params=params,\n        session=self.session,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    limit: int = 100,\n    text: str | None = None,\n    cas: list[Cas] | Cas | None = None,\n    category: list[InventoryCategory]\n    | InventoryCategory\n    | None = None,\n    company: list[Company] | Company | None = None,\n    order: OrderBy = DESCENDING,\n    sort_by: str | None = \"createdAt\",\n    location: list[Location] | Location | None = None,\n    storage_location: list[StorageLocation]\n    | StorageLocation\n    | None = None,\n    project_id: ProjectId | None = None,\n    sheet_id: WorksheetId | None = None,\n    created_by: list[User] | User | None = None,\n    lot_owner: list[User] | User | None = None,\n    tags: list[str] | None = None,\n    match_all_conditions: bool = False,\n) -&gt; Iterator[InventoryItem]\n</code></pre> <p>List inventory items with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>Maximum number of items to return (default is 100)</p> <code>100</code> <code>text</code> <code>str</code> <p>Text to search for in inventory names and descriptions</p> <code>None</code> <code>cas</code> <code>list[Cas] | Cas | None</code> <p>Filter by CAS number(s)</p> <code>None</code> <code>category</code> <code>list[InventoryCategory] | InventoryCategory | None</code> <p>Filter by inventory category/categories</p> <code>None</code> <code>company</code> <code>list[Company] | Company | None</code> <p>Filter by manufacturing company/companies</p> <code>None</code> <code>order</code> <code>OrderBy</code> <p>Sort order, either ASCENDING or DESCENDING (default is DESCENDING)</p> <code>DESCENDING</code> <code>sort_by</code> <code>str</code> <p>Field to sort by (default is \"createdAt\")</p> <code>'createdAt'</code> <code>location</code> <code>list[Location] | None</code> <p>Filter by location(s)</p> <code>None</code> <code>storage_location</code> <code>list[StorageLocation] | None</code> <p>Filter by storage location(s)</p> <code>None</code> <code>project_id</code> <code>str</code> <p>Filter by project ID</p> <code>None</code> <code>sheet_id</code> <code>str</code> <p>Filter by sheet ID</p> <code>None</code> <code>created_by</code> <code>list[User]</code> <p>Filter by creator(s)</p> <code>None</code> <code>lot_owner</code> <code>list[User]</code> <p>Filter by lot owner(s)</p> <code>None</code> <code>tags</code> <code>list[str]</code> <p>Filter by tag(s)</p> <code>None</code> <code>match_all_conditions</code> <code>bool</code> <p>Whether to match all conditions (default is False -- e.g. OR between conditions)</p> <code>False</code> <p>Returns:</p> Type Description <code>Iterator[InventoryItem]</code> <p>An iterator over the matching inventory items</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>@validate_call\ndef list(\n    self,\n    *,\n    limit: int = 100,\n    text: str | None = None,\n    cas: list[Cas] | Cas | None = None,\n    category: list[InventoryCategory] | InventoryCategory | None = None,\n    company: list[Company] | Company | None = None,\n    order: OrderBy = OrderBy.DESCENDING,\n    sort_by: str | None = \"createdAt\",\n    location: list[Location] | Location | None = None,\n    storage_location: list[StorageLocation] | StorageLocation | None = None,\n    project_id: ProjectId | None = None,\n    sheet_id: WorksheetId | None = None,\n    created_by: list[User] | User | None = None,\n    lot_owner: list[User] | User | None = None,\n    tags: list[str] | None = None,\n    match_all_conditions: bool = False,\n) -&gt; Iterator[InventoryItem]:\n    \"\"\"\n    List inventory items with optional filters.\n\n    Parameters\n    ----------\n    limit : int, optional\n        Maximum number of items to return (default is 100)\n    text : str, optional\n        Text to search for in inventory names and descriptions\n    cas : list[Cas] | Cas | None, optional\n        Filter by CAS number(s)\n    category : list[InventoryCategory] | InventoryCategory | None, optional\n        Filter by inventory category/categories\n    company : list[Company] | Company | None, optional\n        Filter by manufacturing company/companies\n    order : OrderBy, optional\n        Sort order, either ASCENDING or DESCENDING (default is DESCENDING)\n    sort_by : str, optional\n        Field to sort by (default is \"createdAt\")\n    location : list[Location] | None, optional\n        Filter by location(s)\n    storage_location : list[StorageLocation] | None, optional\n        Filter by storage location(s)\n    project_id : str, optional\n        Filter by project ID\n    sheet_id : str, optional\n        Filter by sheet ID\n    created_by : list[User], optional\n        Filter by creator(s)\n    lot_owner : list[User], optional\n        Filter by lot owner(s)\n    tags : list[str], optional\n        Filter by tag(s)\n    match_all_conditions : bool, optional\n        Whether to match all conditions (default is False -- e.g. OR between conditions)\n\n    Returns\n    -------\n    Iterator[InventoryItem]\n        An iterator over the matching inventory items\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; list[InventoryItem]:\n        return self.get_by_ids(ids=[x[\"albertId\"] for x in items])\n\n    search_text = text if (text is None or len(text) &lt; 50) else text[0:50]\n    params = self._prepare_parameters(\n        limit=limit,\n        text=search_text,\n        cas=cas,\n        category=category,\n        company=company,\n        order=order,\n        sort_by=sort_by,\n        location=location,\n        storage_location=storage_location,\n        project_id=project_id,\n        sheet_id=sheet_id,\n        created_by=created_by,\n        lot_owner=lot_owner,\n        tags=tags,\n    )\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/llmsearch\"\n        if match_all_conditions\n        else f\"{self.base_path}/search\",\n        params=params,\n        session=self.session,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/inventory/#albert.collections.inventory.InventoryCollection.update","title":"update","text":"<pre><code>update(*, inventory_item: InventoryItem) -&gt; InventoryItem\n</code></pre> <p>Update an inventory item.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_item</code> <code>InventoryItem</code> <p>The updated inventory item object.</p> required <p>Returns:</p> Type Description <code>InventoryItem</code> <p>The updated inventory item retrieved from the server.</p> Source code in <code>src/albert/collections/inventory.py</code> <pre><code>def update(self, *, inventory_item: InventoryItem) -&gt; InventoryItem:\n    \"\"\"\n    Update an inventory item.\n\n    Parameters\n    ----------\n    inventory_item : InventoryItem\n        The updated inventory item object.\n\n    Returns\n    -------\n    InventoryItem\n        The updated inventory item retrieved from the server.\n    \"\"\"\n    # Fetch the current object state from the server or database\n    current_object = self.get_by_id(id=inventory_item.id)\n\n    # Generate the PATCH payload\n    patch_payload = self._generate_inventory_patch_payload(\n        existing=current_object, updated=inventory_item\n    )\n\n    # Complex patching is not working, so I'm going to do this in a loop :(\n    # https://teams.microsoft.com/l/message/19:de4a48c366664ce1bafcdbea02298810@thread.tacv2/1724856117312?tenantId=98aab90e-764b-48f1-afaa-02e3c7300653&amp;groupId=35a36a3d-fc25-4899-a1dd-ad9c7d77b5b3&amp;parentMessageId=1724856117312&amp;teamName=Product%20%2B%20Engineering&amp;channelName=General%20-%20API&amp;createdTime=1724856117312\n    url = f\"{self.base_path}/{inventory_item.id}\"\n    for change in patch_payload[\"data\"]:\n        change_payload = {\"data\": [change]}\n        self.session.patch(url, json=change_payload)\n    updated_inv = self.get_by_id(id=inventory_item.id)\n    return updated_inv\n</code></pre>"},{"location":"collections/links/","title":"Links","text":""},{"location":"collections/links/#albert.collections.links.LinksCollection","title":"albert.collections.links.LinksCollection","text":"<pre><code>LinksCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>LinksCollection is a collection class for managing Link entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <p>Creates a new link entity.</p> <code>list</code> <p>Generates a list of link entities with optional filters.</p> <code>get_by_id</code> <p>Retrieves a link entity by its ID.</p> <code>delete</code> <p>Deletes a link entity by its ID.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/links.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the LinksCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{LinksCollection._api_version}/links\"\n</code></pre>"},{"location":"collections/links/#albert.collections.links.LinksCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/links'\n</code></pre>"},{"location":"collections/links/#albert.collections.links.LinksCollection.create","title":"create","text":"<pre><code>create(*, links: list[Link]) -&gt; list[Link]\n</code></pre> <p>Creates a new link entity.</p> <p>Parameters:</p> Name Type Description Default <code>links</code> <code>list[Link]</code> <p>List of Link entities to create.</p> required <p>Returns:</p> Type Description <code>Link</code> <p>The created link entity.</p> Source code in <code>src/albert/collections/links.py</code> <pre><code>def create(self, *, links: list[Link]) -&gt; list[Link]:\n    \"\"\"\n    Creates a new link entity.\n\n    Parameters\n    ----------\n    links : list[Link]\n        List of Link entities to create.\n\n    Returns\n    -------\n    Link\n        The created link entity.\n    \"\"\"\n    response = self.session.post(\n        self.base_path,\n        json=[l.model_dump(by_alias=True, exclude_none=True, mode=\"json\") for l in links],\n    )\n    return [Link(**l) for l in response.json()]\n</code></pre>"},{"location":"collections/links/#albert.collections.links.LinksCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    limit: int = 100,\n    type: str | None = None,\n    category: LinkCategory | None = None,\n    id: str | None = None,\n) -&gt; Iterator[Link]\n</code></pre> <p>Generates a list of link entities with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The maximum number of link entities to return.</p> <code>100</code> <code>type</code> <code>str</code> <p>The type of the link entities to return. Allowed values are <code>parent</code>, <code>child</code>, and <code>all</code>. If type is \"all\" then it will fetch both parent/child record for mentioned id.</p> <code>None</code> <code>category</code> <code>LinkCategory</code> <p>The category of the link entities to return. Allowed values are <code>mention</code>, <code>linkedTask</code>, and <code>synthesis</code>.</p> <code>None</code> <code>id</code> <code>str</code> <p>The ID of the link entity to return. (Use with <code>type</code> parameter)</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[Link]</code> <p>An iterator of Links.</p> Source code in <code>src/albert/collections/links.py</code> <pre><code>def list(\n    self,\n    *,\n    limit: int = 100,\n    type: str | None = None,\n    category: LinkCategory | None = None,\n    id: str | None = None,\n) -&gt; Iterator[Link]:\n    \"\"\"\n    Generates a list of link entities with optional filters.\n\n    Parameters\n    ----------\n    limit : int, optional\n        The maximum number of link entities to return.\n    type : str, optional\n        The type of the link entities to return. Allowed values are `parent`, `child`, and `all`. If type is \"all\" then it will fetch both parent/child record for mentioned id.\n    category : LinkCategory, optional\n        The category of the link entities to return. Allowed values are `mention`, `linkedTask`, and `synthesis`.\n    id : str\n        The ID of the link entity to return. (Use with `type` parameter)\n\n    Returns\n    ------\n    Iterator[Link]\n        An iterator of Links.\n    \"\"\"\n    params = {\"limit\": limit, \"type\": type, \"category\": category, \"id\": id}\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        params=params,\n        session=self.session,\n        deserialize=lambda items: [Link(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/links/#albert.collections.links.LinksCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Link\n</code></pre> <p>Retrieves a link entity by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the link entity to retrieve.</p> required <p>Returns:</p> Type Description <code>Link</code> <p>The retrieved link entity.</p> Source code in <code>src/albert/collections/links.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Link:\n    \"\"\"\n    Retrieves a link entity by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the link entity to retrieve.\n\n    Returns\n    -------\n    Link\n        The retrieved link entity.\n    \"\"\"\n    path = f\"{self.base_path}/{id}\"\n    response = self.session.get(path)\n    return Link(**response.json())\n</code></pre>"},{"location":"collections/links/#albert.collections.links.LinksCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes a link entity by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the link entity to delete.</p> required Source code in <code>src/albert/collections/links.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Deletes a link entity by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the link entity to delete.\n    \"\"\"\n    path = f\"{self.base_path}/{id}\"\n    self.session.delete(path)\n</code></pre>"},{"location":"collections/lists/","title":"Lists","text":""},{"location":"collections/lists/#albert.collections.lists.ListsCollection","title":"albert.collections.lists.ListsCollection","text":"<pre><code>ListsCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>ListsCollection is a collection class for managing ListItem entities in the Albert platform.</p> Example <pre><code>stages = [\n    \"1. Discovery\",\n    \"2. Concept Validation\",\n    \"3. Proof of Concept\",\n    \"4. Prototype Development\",\n    \"5. Preliminary Evaluation\",\n    \"6. Feasibility Study\",\n    \"7. Optimization\",\n    \"8. Scale-Up\",\n    \"9. Regulatory Assessment\",\n]\n# Initialize the Albert client\nclient = Albert()\n\n# Get the custom field this list is associated with\nstage_gate_field = client.custom_fields.get_by_id(id=\"CF123\")\n\n# Create the list items\nfor s in stages:\n    item = ListItem(\n        name=s,\n        category=stage_gate_field.category,\n        list_type=stage_gate_field.name,\n    )\n\n    client.lists.create(list_item=item)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>list</code> <p>Generates a list of list entities with optional filters.</p> <code>get_by_id</code> <p>Retrieves a list entity by its ID.</p> <code>create</code> <p>Creates a list entity.</p> <code>delete</code> <p>Delete a lists entry item by its ID.</p> <code>get_matching_item</code> <p>Get a list item by name and list type.</p> <code>update</code> <p>Update a list item.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/lists.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the TagCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{ListsCollection._api_version}/lists\"\n</code></pre>"},{"location":"collections/lists/#albert.collections.lists.ListsCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/lists'\n</code></pre>"},{"location":"collections/lists/#albert.collections.lists.ListsCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    limit: int = 100,\n    names: list[str] | None = None,\n    category: ListItemCategory | None = None,\n    list_type: str | None = None,\n    start_key: str | None = None,\n) -&gt; Iterator[ListItem]\n</code></pre> <p>Generates a list of list entities with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The maximum number of list entities to return.</p> <code>100</code> <code>names</code> <code>list[str]</code> <p>A list of names of the list entity to retrieve.</p> <code>None</code> <code>category</code> <code>ListItemCategory</code> <p>The category of the list entity to retrieve.</p> <code>None</code> <code>list_type</code> <code>str</code> <p>The type of list entity to retrieve.</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[ListItem]</code> <p>An iterator of ListItems.</p> Source code in <code>src/albert/collections/lists.py</code> <pre><code>def list(\n    self,\n    *,\n    limit: int = 100,\n    names: list[str] | None = None,\n    category: ListItemCategory | None = None,\n    list_type: str | None = None,\n    start_key: str | None = None,\n) -&gt; Iterator[ListItem]:\n    \"\"\"\n    Generates a list of list entities with optional filters.\n\n    Parameters\n    ----------\n    limit : int, optional\n        The maximum number of list entities to return.\n    names : list[str], optional\n        A list of names of the list entity to retrieve.\n    category : ListItemCategory, optional\n        The category of the list entity to retrieve.\n    list_type : str, optional\n        The type of list entity to retrieve.\n    Returns\n    ------\n    Iterator[ListItem]\n        An iterator of ListItems.\n    \"\"\"\n    params = {\n        \"limit\": limit,\n        \"startKey\": start_key,\n        \"name\": [names] if isinstance(names, str) else names,\n        \"category\": category.value if isinstance(category, ListItemCategory) else category,\n        \"listType\": list_type,\n    }\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [ListItem(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/lists/#albert.collections.lists.ListsCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; ListItem\n</code></pre> <p>Retrieves a list entity by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the list entity to retrieve.</p> required <p>Returns:</p> Type Description <code>List</code> <p>A list entity.</p> Source code in <code>src/albert/collections/lists.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; ListItem:\n    \"\"\"\n    Retrieves a list entity by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the list entity to retrieve.\n\n    Returns\n    -------\n    List\n        A list entity.\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    return ListItem(**response.json())\n</code></pre>"},{"location":"collections/lists/#albert.collections.lists.ListsCollection.create","title":"create","text":"<pre><code>create(*, list_item: ListItem) -&gt; ListItem\n</code></pre> <p>Creates a list entity.</p> <p>Parameters:</p> Name Type Description Default <code>list_item</code> <code>ListItem</code> <p>The list entity to create.</p> required <p>Returns:</p> Type Description <code>List</code> <p>The created list entity.</p> Source code in <code>src/albert/collections/lists.py</code> <pre><code>def create(self, *, list_item: ListItem) -&gt; ListItem:\n    \"\"\"\n    Creates a list entity.\n\n    Parameters\n    ----------\n    list_item : ListItem\n        The list entity to create.\n\n    Returns\n    -------\n    List\n        The created list entity.\n    \"\"\"\n    response = self.session.post(\n        self.base_path,\n        json=list_item.model_dump(by_alias=True, exclude_none=True, mode=\"json\"),\n    )\n    return ListItem(**response.json())\n</code></pre>"},{"location":"collections/lists/#albert.collections.lists.ListsCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Delete a lists entry item by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the lists item.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/lists.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Delete a lists entry item by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the lists item.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/lists/#albert.collections.lists.ListsCollection.get_matching_item","title":"get_matching_item","text":"<pre><code>get_matching_item(\n    *, name: str, list_type: str\n) -&gt; ListItem | None\n</code></pre> <p>Get a list item by name and list type.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of it item to retrieve.</p> required <code>list_type</code> <code>str</code> <p>The type of list (can be the name of the custom field)</p> required <p>Returns:</p> Type Description <code>ListItem | None</code> <p>A list item with the provided name and list type, or None if not found.</p> Source code in <code>src/albert/collections/lists.py</code> <pre><code>def get_matching_item(self, *, name: str, list_type: str) -&gt; ListItem | None:\n    \"\"\"Get a list item by name and list type.\n\n    Parameters\n    ----------\n    name : str\n        The name of it item to retrieve.\n    list_type : str\n        The type of list (can be the name of the custom field)\n\n    Returns\n    -------\n    ListItem | None\n        A list item with the provided name and list type, or None if not found.\n    \"\"\"\n    for list_item in self.list(names=[name], list_type=list_type):\n        if list_item.name.lower() == name.lower():\n            return list_item\n    return None\n</code></pre>"},{"location":"collections/lists/#albert.collections.lists.ListsCollection.update","title":"update","text":"<pre><code>update(*, list_item=ListItem) -&gt; ListItem\n</code></pre> <p>Update a list item.</p> <p>Parameters:</p> Name Type Description Default <code>list_item</code> <code>ListItem</code> <p>The list item to update.</p> <code>ListItem</code> <p>Returns:</p> Type Description <code>ListItem</code> <p>The updated list item.</p> Source code in <code>src/albert/collections/lists.py</code> <pre><code>def update(self, *, list_item=ListItem) -&gt; ListItem:\n    \"\"\"Update a list item.\n\n    Parameters\n    ----------\n    list_item : ListItem\n        The list item to update.\n\n    Returns\n    -------\n    ListItem\n        The updated list item.\n    \"\"\"\n    existing = self.get_by_id(id=list_item.id)\n    patches = self._generate_patch_payload(\n        existing=existing, updated=list_item, generate_metadata_diff=False\n    )\n    if len(patches.data) == 0:\n        return existing\n    self.session.patch(\n        url=f\"{self.base_path}/{list_item.id}\",\n        json=patches.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n    )\n    return self.get_by_id(id=list_item.id)\n</code></pre>"},{"location":"collections/locations/","title":"Locations","text":""},{"location":"collections/locations/#albert.collections.locations.LocationCollection","title":"albert.collections.locations.LocationCollection","text":"<pre><code>LocationCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>LocationCollection is a collection class for managing Location entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>list</code> <p>Searches for locations matching the provided criteria.</p> <code>get_by_id</code> <p>Retrieves a location by its ID.</p> <code>update</code> <p>Update a Location entity.</p> <code>location_exists</code> <p>Determines if a location, with the same name, exists in the collection.</p> <code>create</code> <p>Creates a new Location entity.</p> <code>delete</code> <p>Deletes a Location entity.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/locations.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the LocationCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{LocationCollection._api_version}/locations\"\n</code></pre>"},{"location":"collections/locations/#albert.collections.locations.LocationCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/locations'\n</code></pre>"},{"location":"collections/locations/#albert.collections.locations.LocationCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    ids: list[str] | None = None,\n    name: str | list[str] | None = None,\n    country: str | None = None,\n    exact_match: bool = False,\n    limit: int = 50,\n    start_key: str | None = None,\n) -&gt; Iterator[Location]\n</code></pre> <p>Searches for locations matching the provided criteria.</p> <p>Parameters:</p> Name Type Description Default <code>ids</code> <code>list[str] | None</code> <p>The list of IDs to filter the locations, by default None. Max length is 100.</p> <code>None</code> <code>name</code> <code>str | list[str] | None</code> <p>The name or names of locations to search for, by default None</p> <code>None</code> <code>country</code> <code>str | None</code> <p>The country code of the country to filter the locations , by default None</p> <code>None</code> <code>exact_match</code> <code>bool</code> <p>Whether to return exact matches only, by default False</p> <code>False</code> <p>Yields:</p> Type Description <code>Iterator[Location]</code> <p>An iterator of Location objects matching the search criteria.</p> Source code in <code>src/albert/collections/locations.py</code> <pre><code>def list(\n    self,\n    *,\n    ids: list[str] | None = None,\n    name: str | list[str] | None = None,\n    country: str | None = None,\n    exact_match: bool = False,\n    limit: int = 50,\n    start_key: str | None = None,\n) -&gt; Iterator[Location]:\n    \"\"\"Searches for locations matching the provided criteria.\n\n    Parameters\n    ----------\n    ids: list[str] | None, optional\n        The list of IDs to filter the locations, by default None.\n        Max length is 100.\n    name : str | list[str] | None, optional\n        The name or names of locations to search for, by default None\n    country : str | None, optional\n        The country code of the country to filter the locations , by default None\n    exact_match : bool, optional\n        Whether to return exact matches only, by default False\n\n    Yields\n    ------\n    Iterator[Location]\n        An iterator of Location objects matching the search criteria.\n    \"\"\"\n    params = {\"limit\": limit, \"startKey\": start_key, \"country\": country}\n    if ids:\n        params[\"id\"] = ids\n    if name:\n        params[\"name\"] = [name] if isinstance(name, str) else name\n        params[\"exactMatch\"] = json.dumps(exact_match)\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [Location(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/locations/#albert.collections.locations.LocationCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Location\n</code></pre> <p>Retrieves a location by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the location to retrieve.</p> required <p>Returns:</p> Type Description <code>Location</code> <p>The Location object.</p> Source code in <code>src/albert/collections/locations.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Location:\n    \"\"\"\n    Retrieves a location by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the location to retrieve.\n\n    Returns\n    -------\n    Location\n        The Location object.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    return Location(**response.json())\n</code></pre>"},{"location":"collections/locations/#albert.collections.locations.LocationCollection.update","title":"update","text":"<pre><code>update(*, location: Location) -&gt; Location\n</code></pre> <p>Update a Location entity.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>Location</code> <p>The Location object to update. The ID of the Location object must be provided.</p> required <p>Returns:</p> Type Description <code>Location</code> <p>The updated Location object as returned by the server.</p> Source code in <code>src/albert/collections/locations.py</code> <pre><code>def update(self, *, location: Location) -&gt; Location:\n    \"\"\"Update a Location entity.\n\n    Parameters\n    ----------\n    location : Location\n        The Location object to update. The ID of the Location object must be provided.\n\n    Returns\n    -------\n    Location\n        The updated Location object as returned by the server.\n    \"\"\"\n    # Fetch the current object state from the server or database\n    current_object = self.get_by_id(id=location.id)\n    # Generate the PATCH payload\n    patch_payload = self._generate_patch_payload(\n        existing=current_object,\n        updated=location,\n        stringify_values=True,\n    )\n    url = f\"{self.base_path}/{location.id}\"\n    self.session.patch(url, json=patch_payload.model_dump(mode=\"json\", by_alias=True))\n    return self.get_by_id(id=location.id)\n</code></pre>"},{"location":"collections/locations/#albert.collections.locations.LocationCollection.location_exists","title":"location_exists","text":"<pre><code>location_exists(*, location: Location) -&gt; Location | None\n</code></pre> <p>Determines if a location, with the same name, exists in the collection.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>Location</code> <p>The Location object to check</p> required <p>Returns:</p> Type Description <code>Location | None</code> <p>The existing registered Location object if found, otherwise None.</p> Source code in <code>src/albert/collections/locations.py</code> <pre><code>def location_exists(self, *, location: Location) -&gt; Location | None:\n    \"\"\"Determines if a location, with the same name, exists in the collection.\n\n    Parameters\n    ----------\n    location : Location\n        The Location object to check\n\n    Returns\n    -------\n    Location | None\n        The existing registered Location object if found, otherwise None.\n    \"\"\"\n    hits = self.list(name=location.name)\n    if hits:\n        for hit in hits:\n            if hit and hit.name.lower() == location.name.lower():\n                return hit\n    return None\n</code></pre>"},{"location":"collections/locations/#albert.collections.locations.LocationCollection.create","title":"create","text":"<pre><code>create(*, location: Location) -&gt; Location\n</code></pre> <p>Creates a new Location entity.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>Location</code> <p>The Location object to create.</p> required <p>Returns:</p> Type Description <code>Location</code> <p>The created Location object.</p> Source code in <code>src/albert/collections/locations.py</code> <pre><code>def create(self, *, location: Location) -&gt; Location:\n    \"\"\"\n    Creates a new Location entity.\n\n    Parameters\n    ----------\n    location : Location\n        The Location object to create.\n\n    Returns\n    -------\n    Location\n        The created Location object.\n    \"\"\"\n    exists = self.location_exists(location=location)\n    if exists:\n        logging.warning(\n            f\"Location with name {location.name} matches an existing location. Returning the existing Location.\"\n        )\n        return exists\n\n    payload = location.model_dump(by_alias=True, exclude_unset=True, mode=\"json\")\n    response = self.session.post(self.base_path, json=payload)\n\n    return Location(**response.json())\n</code></pre>"},{"location":"collections/locations/#albert.collections.locations.LocationCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes a Location entity.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>Str</code> <p>The id of the Location object to delete.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/locations.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Deletes a Location entity.\n\n    Parameters\n    ----------\n    id : Str\n        The id of the Location object to delete.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/lots/","title":"Lots","text":""},{"location":"collections/lots/#albert.collections.lots.LotCollection","title":"albert.collections.lots.LotCollection","text":"<pre><code>LotCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>LotCollection is a collection class for managing Lot entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>An Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <code>get_by_id</code> <p>Get a lot by its ID.</p> <code>get_by_ids</code> <p>Get a list of lots by their IDs.</p> <code>delete</code> <p>Delete a lot by its ID.</p> <code>list</code> <p>Lists Lot entities with optional filters.</p> <code>update</code> <p>Update a lot.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/lots.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"A collection for interacting with Lots in Albert.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        An Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{LotCollection._api_version}/lots\"\n</code></pre>"},{"location":"collections/lots/#albert.collections.lots.LotCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/lots'\n</code></pre>"},{"location":"collections/lots/#albert.collections.lots.LotCollection.create","title":"create","text":"<pre><code>create(*, lots: list[Lot]) -&gt; list[Lot]\n</code></pre> Source code in <code>src/albert/collections/lots.py</code> <pre><code>def create(self, *, lots: list[Lot]) -&gt; list[Lot]:\n    # TODO: Once thi endpoint is fixed, go back to passing the whole list at once\n    payload = [lot.model_dump(by_alias=True, exclude_none=True, mode=\"json\") for lot in lots]\n    all_lots = []\n    for lot in payload:\n        response = self.session.post(self.base_path, json=[lot])\n        all_lots.append(Lot(**response.json()[0]))\n    # response = self.session.post(self.base_path, json=payload)\n    # return [Lot(**lot) for lot in response.json().get(\"CreatedLots\", [])]\n    return all_lots\n</code></pre>"},{"location":"collections/lots/#albert.collections.lots.LotCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Lot\n</code></pre> <p>Get a lot by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the lot to get.</p> required <p>Returns:</p> Type Description <code>Lot</code> <p>The lot with the provided ID.</p> Source code in <code>src/albert/collections/lots.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Lot:\n    \"\"\"Get a lot by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the lot to get.\n\n    Returns\n    -------\n    Lot\n        The lot with the provided ID.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    return Lot(**response.json())\n</code></pre>"},{"location":"collections/lots/#albert.collections.lots.LotCollection.get_by_ids","title":"get_by_ids","text":"<pre><code>get_by_ids(*, ids: list[str]) -&gt; list[Lot]\n</code></pre> <p>Get a list of lots by their IDs.</p> <p>Parameters:</p> Name Type Description Default <code>ids</code> <code>list[str]</code> <p>A list of lot IDs to get.</p> required <p>Returns:</p> Type Description <code>list[Lot]</code> <p>A list of lots with the provided IDs.</p> Source code in <code>src/albert/collections/lots.py</code> <pre><code>def get_by_ids(self, *, ids: list[str]) -&gt; list[Lot]:\n    \"\"\"Get a list of lots by their IDs.\n\n    Parameters\n    ----------\n    ids : list[str]\n        A list of lot IDs to get.\n\n    Returns\n    -------\n    list[Lot]\n        A list of lots with the provided IDs.\n    \"\"\"\n    url = f\"{self.base_path}/ids\"\n    response = self.session.get(url, params={\"id\": ids})\n    return [Lot(**lot) for lot in response.json()[\"Items\"]]\n</code></pre>"},{"location":"collections/lots/#albert.collections.lots.LotCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Delete a lot by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the lot to delete.</p> required Source code in <code>src/albert/collections/lots.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"Delete a lot by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the lot to delete.\n    \"\"\"\n    url = f\"{self.base_path}?id={id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/lots/#albert.collections.lots.LotCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    limit: int = 100,\n    start_key: str | None = None,\n    parent_id: str | None = None,\n    inventory_id: str | None = None,\n    barcode_id: str | None = None,\n    parent_id_category: str | None = None,\n    inventory_on_hand: str | None = None,\n    location_id: str | None = None,\n    exact_match: bool = False,\n    begins_with: bool = False,\n) -&gt; Iterator[Lot]\n</code></pre> <p>Lists Lot entities with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The maximum number of Lots to return, by default 100.</p> <code>100</code> <code>start_key</code> <code>Optional[str]</code> <p>The primary key of the first item to evaluate for pagination.</p> <code>None</code> <code>parent_id</code> <code>Optional[str]</code> <p>Fetches list of lots for a parentId (inventory).</p> <code>None</code> <code>inventory_id</code> <code>Optional[str]</code> <p>Fetches list of lots for an inventory.</p> <code>None</code> <code>barcode_id</code> <code>Optional[str]</code> <p>Fetches list of lots for a barcodeId.</p> <code>None</code> <code>parent_id_category</code> <code>Optional[str]</code> <p>Fetches list of lots for a parentIdCategory (e.g., RawMaterials, Consumables).</p> <code>None</code> <code>inventory_on_hand</code> <code>Optional[str]</code> <p>Fetches records based on inventoryOnHand (lteZero, gtZero, eqZero).</p> <code>None</code> <code>location_id</code> <code>Optional[str]</code> <p>Fetches list of lots for a locationId.</p> <code>None</code> <code>exact_match</code> <code>bool</code> <p>Determines if barcodeId field should be an exact match, by default False.</p> <code>False</code> <code>begins_with</code> <code>bool</code> <p>Determines if barcodeId begins with a certain value, by default False.</p> <code>False</code> <p>Yields:</p> Type Description <code>Iterator[Lot]</code> <p>An iterator of Lot objects.</p> Source code in <code>src/albert/collections/lots.py</code> <pre><code>def list(\n    self,\n    *,\n    limit: int = 100,\n    start_key: str | None = None,\n    parent_id: str | None = None,\n    inventory_id: str | None = None,\n    barcode_id: str | None = None,\n    parent_id_category: str | None = None,\n    inventory_on_hand: str | None = None,\n    location_id: str | None = None,\n    exact_match: bool = False,\n    begins_with: bool = False,\n) -&gt; Iterator[Lot]:\n    \"\"\"\n    Lists Lot entities with optional filters.\n\n    Parameters\n    ----------\n    limit : int, optional\n        The maximum number of Lots to return, by default 100.\n    start_key : Optional[str], optional\n        The primary key of the first item to evaluate for pagination.\n    parent_id : Optional[str], optional\n        Fetches list of lots for a parentId (inventory).\n    inventory_id : Optional[str], optional\n        Fetches list of lots for an inventory.\n    barcode_id : Optional[str], optional\n        Fetches list of lots for a barcodeId.\n    parent_id_category : Optional[str], optional\n        Fetches list of lots for a parentIdCategory (e.g., RawMaterials, Consumables).\n    inventory_on_hand : Optional[str], optional\n        Fetches records based on inventoryOnHand (lteZero, gtZero, eqZero).\n    location_id : Optional[str], optional\n        Fetches list of lots for a locationId.\n    exact_match : bool, optional\n        Determines if barcodeId field should be an exact match, by default False.\n    begins_with : bool, optional\n        Determines if barcodeId begins with a certain value, by default False.\n\n    Yields\n    -------\n    Iterator[Lot]\n        An iterator of Lot objects.\n    \"\"\"\n    params = {\n        \"limit\": limit,\n        \"startKey\": start_key,\n        \"parentId\": parent_id,\n        \"inventoryId\": inventory_id,\n        \"barcodeId\": barcode_id,\n        \"parentIdCategory\": parent_id_category,\n        \"inventoryOnHand\": inventory_on_hand,\n        \"locationId\": location_id,\n        \"exactMatch\": json.dumps(exact_match),\n        \"beginsWith\": json.dumps(begins_with),\n    }\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [Lot(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/lots/#albert.collections.lots.LotCollection.update","title":"update","text":"<pre><code>update(*, lot: Lot) -&gt; Lot\n</code></pre> <p>Update a lot.</p> <p>Parameters:</p> Name Type Description Default <code>lot</code> <code>Lot</code> <p>The updated lot object.</p> required <p>Returns:</p> Type Description <code>Lot</code> <p>The updated lot object as returned by the server.</p> Source code in <code>src/albert/collections/lots.py</code> <pre><code>def update(self, *, lot: Lot) -&gt; Lot:\n    \"\"\"Update a lot.\n\n    Parameters\n    ----------\n    lot : Lot\n        The updated lot object.\n\n    Returns\n    -------\n    Lot\n        The updated lot object as returned by the server.\n    \"\"\"\n    existing_lot = self.get_by_id(id=lot.id)\n    patch_data = self._generate_patch_payload(existing=existing_lot, updated=lot)\n    url = f\"{self.base_path}/{lot.id}\"\n\n    self.session.patch(url, json=patch_data.model_dump(mode=\"json\", by_alias=True))\n\n    return self.get_by_id(id=lot.id)\n</code></pre>"},{"location":"collections/notebooks/","title":"Notebooks","text":""},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection","title":"albert.collections.notebooks.NotebookCollection","text":"<pre><code>NotebookCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>NotebookCollection is a collection class for managing Notebook entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_by_id</code> <p>Retrieve a Notebook by its ID.</p> <code>list_by_parent_id</code> <p>Retrieve a Notebook by parent ID.</p> <code>create</code> <p>Create or return notebook for the provided notebook.</p> <code>delete</code> <p>Deletes a notebook by its ID.</p> <code>update</code> <p>Update a notebook.</p> <code>update_block_content</code> <p>Updates the block content of a Notebook. This does not update the notebook name (use .update for that).</p> <code>get_block_by_id</code> <p>Retrieve a Notebook Block by its ID.</p> <code>copy</code> <p>Create a copy of a Notebook into a specified parent</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/notebooks.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the NotebookCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{NotebookCollection._api_version}/notebooks\"\n</code></pre>"},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/notebooks'\n</code></pre>"},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Notebook\n</code></pre> <p>Retrieve a Notebook by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the Notebook to retrieve.</p> required <p>Returns:</p> Type Description <code>Notebook</code> <p>The Notebook object.</p> Source code in <code>src/albert/collections/notebooks.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Notebook:\n    \"\"\"Retrieve a Notebook by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the Notebook to retrieve.\n\n    Returns\n    -------\n    Notebook\n        The Notebook object.\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    return Notebook(**response.json())\n</code></pre>"},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection.list_by_parent_id","title":"list_by_parent_id","text":"<pre><code>list_by_parent_id(*, parent_id: str) -&gt; list[Notebook]\n</code></pre> <p>Retrieve a Notebook by parent ID.</p> <p>Parameters:</p> Name Type Description Default <code>parent_id</code> <code>str</code> <p>The ID of the parent ID, e.g. task.</p> required <p>Returns:</p> Type Description <code>list[Notebook]</code> <p>list of notebook references.</p> Source code in <code>src/albert/collections/notebooks.py</code> <pre><code>def list_by_parent_id(self, *, parent_id: str) -&gt; list[Notebook]:\n    \"\"\"Retrieve a Notebook by parent ID.\n\n    Parameters\n    ----------\n    parent_id : str\n        The ID of the parent ID, e.g. task.\n\n    Returns\n    -------\n    list[Notebook]\n        list of notebook references.\n\n    \"\"\"\n\n    # search\n    response = self.session.get(f\"{self.base_path}/{parent_id}/search\")\n    # return\n    return [self.get_by_id(id=x[\"id\"]) for x in response.json()[\"Items\"]]\n</code></pre>"},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection.create","title":"create","text":"<pre><code>create(*, notebook: Notebook) -&gt; Notebook\n</code></pre> <p>Create or return notebook for the provided notebook. This endpoint automatically tries to find an existing notebook with the same parameter setpoints, and will either return the existing notebook or create a new one.</p> <p>Parameters:</p> Name Type Description Default <code>notebook</code> <code>Notebook</code> <p>A list of Notebook objects to find or create.</p> required <p>Returns:</p> Type Description <code>Notebook</code> <p>A list of created or found Notebook objects.</p> Source code in <code>src/albert/collections/notebooks.py</code> <pre><code>def create(self, *, notebook: Notebook) -&gt; Notebook:\n    \"\"\"Create or return notebook for the provided notebook.\n    This endpoint automatically tries to find an existing notebook with the same parameter setpoints, and will either return the existing notebook or create a new one.\n\n    Parameters\n    ----------\n    notebook : Notebook\n        A list of Notebook objects to find or create.\n\n    Returns\n    -------\n    Notebook\n        A list of created or found Notebook objects.\n    \"\"\"\n    if notebook.blocks:\n        # This check keeps a user from corrupting the Notebook data.\n        msg = (\n            \"Cannot create a Notebook with pre-filled blocks. \"\n            \"Set `blocks=[]` (or do not set it) when creating it. \"\n            \"Use `.update_block_content()` afterward to add, update, or delete blocks.\"\n        )\n        raise AlbertException(msg)\n    response = self.session.post(\n        url=self.base_path,\n        json=notebook.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n        params={\"parentId\": notebook.parent_id},\n    )\n    return Notebook(**response.json())\n</code></pre>"},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes a notebook by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the notebook to delete.</p> required Source code in <code>src/albert/collections/notebooks.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Deletes a notebook by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the notebook to delete.\n    \"\"\"\n    self.session.delete(f\"{self.base_path}/{id}\")\n</code></pre>"},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection.update","title":"update","text":"<pre><code>update(*, notebook: Notebook) -&gt; Notebook\n</code></pre> <p>Update a notebook.</p> <p>Parameters:</p> Name Type Description Default <code>notebook</code> <code>Notebook</code> <p>The updated notebook object.</p> required <p>Returns:</p> Type Description <code>Notebook</code> <p>The updated notebook object as returned by the server.</p> Source code in <code>src/albert/collections/notebooks.py</code> <pre><code>def update(self, *, notebook: Notebook) -&gt; Notebook:\n    \"\"\"Update a notebook.\n\n    Parameters\n    ----------\n    notebook : Notebook\n        The updated notebook object.\n\n    Returns\n    -------\n    Notebook\n        The updated notebook object as returned by the server.\n    \"\"\"\n    existing_notebook = self.get_by_id(id=notebook.id)\n    patch_data = self._generate_patch_payload(existing=existing_notebook, updated=notebook)\n    url = f\"{self.base_path}/{notebook.id}\"\n\n    self.session.patch(url, json=patch_data.model_dump(mode=\"json\", by_alias=True))\n\n    return self.get_by_id(id=notebook.id)\n</code></pre>"},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection.update_block_content","title":"update_block_content","text":"<pre><code>update_block_content(*, notebook: Notebook) -&gt; Notebook\n</code></pre> <p>Updates the block content of a Notebook. This does not update the notebook name (use .update for that). If a block in the Notebook does not already exist on Albert, it will be created. Note: The order of the Blocks in your Notebook matter and will be used in the updated Notebook!</p> <p>Parameters:</p> Name Type Description Default <code>notebook</code> <code>Notebook</code> <p>The updated notebook object.</p> required <p>Returns:</p> Type Description <code>Notebook</code> <p>The updated notebook object as returned by the server.</p> Source code in <code>src/albert/collections/notebooks.py</code> <pre><code>def update_block_content(self, *, notebook: Notebook) -&gt; Notebook:\n    \"\"\"\n    Updates the block content of a Notebook. This does not update the notebook name (use .update for that).\n    If a block in the Notebook does not already exist on Albert, it will be created.\n    *Note: The order of the Blocks in your Notebook matter and will be used in the updated Notebook!*\n\n\n    Parameters\n    ----------\n    notebook : Notebook\n        The updated notebook object.\n\n    Returns\n    -------\n    Notebook\n        The updated notebook object as returned by the server.\n    \"\"\"\n    put_data = self._generate_put_block_payload(notebook=notebook)\n    url = f\"{self.base_path}/{notebook.id}/content\"\n\n    self.session.put(url, json=put_data.model_dump(mode=\"json\", by_alias=True))\n\n    return self.get_by_id(id=notebook.id)\n</code></pre>"},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection.get_block_by_id","title":"get_block_by_id","text":"<pre><code>get_block_by_id(\n    *, notebook_id: str, block_id: str\n) -&gt; NotebookBlock\n</code></pre> <p>Retrieve a Notebook Block by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>notebook_id</code> <code>str</code> <p>The ID of the Notebook to which the Block belongs.</p> required <code>block_id</code> <code>str</code> <p>The ID of the Notebook Block to retrieve.</p> required <p>Returns:</p> Type Description <code>NotebookBlock</code> <p>The NotebookBlock object.</p> Source code in <code>src/albert/collections/notebooks.py</code> <pre><code>def get_block_by_id(self, *, notebook_id: str, block_id: str) -&gt; NotebookBlock:\n    \"\"\"Retrieve a Notebook Block by its ID.\n\n    Parameters\n    ----------\n    notebook_id : str\n        The ID of the Notebook to which the Block belongs.\n    block_id : str\n        The ID of the Notebook Block to retrieve.\n\n    Returns\n    -------\n    NotebookBlock\n        The NotebookBlock object.\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{notebook_id}/blocks/{block_id}\")\n    return TypeAdapter(NotebookBlock).validate_python(response.json())\n</code></pre>"},{"location":"collections/notebooks/#albert.collections.notebooks.NotebookCollection.copy","title":"copy","text":"<pre><code>copy(\n    *,\n    notebook_copy_info: NotebookCopyInfo,\n    type: NotebookCopyType,\n) -&gt; Notebook\n</code></pre> <p>Create a copy of a Notebook into a specified parent</p> <p>Parameters:</p> Name Type Description Default <code>notebook_copy_info</code> <code>NotebookCopyInfo</code> <p>The copy information for the Notebook copy</p> required <code>type</code> <code>NotebookCopyType</code> <p>Differentiate whether copy is for templates, task, project or restoreTemplate</p> required <p>Returns:</p> Type Description <code>Notebook</code> <p>The result of the copied Notebook.</p> Source code in <code>src/albert/collections/notebooks.py</code> <pre><code>def copy(self, *, notebook_copy_info: NotebookCopyInfo, type: NotebookCopyType) -&gt; Notebook:\n    \"\"\"Create a copy of a Notebook into a specified parent\n\n    Parameters\n    ----------\n    notebook_copy_info : NotebookCopyInfo\n        The copy information for the Notebook copy\n    type : NotebookCopyType\n        Differentiate whether copy is for templates, task, project or restoreTemplate\n\n    Returns\n    -------\n    Notebook\n        The result of the copied Notebook.\n    \"\"\"\n    response = self.session.post(\n        url=f\"{self.base_path}/copy\",\n        json=notebook_copy_info.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n        params={\"type\": type, \"parentId\": notebook_copy_info.parent_id},\n    )\n    return Notebook(**response.json())\n</code></pre>"},{"location":"collections/notes/","title":"Notes","text":""},{"location":"collections/notes/#albert.collections.notes.NotesCollection","title":"albert.collections.notes.NotesCollection","text":"<pre><code>NotesCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>NotesCollection is a collection class for managing Note entities in the Albert platform.</p> <p>Methods:</p> Name Description <code>create</code> <p>Creates a new note.</p> <code>get_by_id</code> <p>Retrieves a note by its ID.</p> <code>update</code> <p>Updates a note.</p> <code>delete</code> <p>Deletes a note by its ID.</p> <code>list</code> <p>Lists notes by their parent ID.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/notes.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    super().__init__(session=session)\n    self.base_path = f\"/api/{NotesCollection._api_version}/notes\"\n</code></pre>"},{"location":"collections/notes/#albert.collections.notes.NotesCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/notes'\n</code></pre>"},{"location":"collections/notes/#albert.collections.notes.NotesCollection.create","title":"create","text":"<pre><code>create(*, note: Note) -&gt; Note\n</code></pre> <p>Creates a new note.</p> <p>Parameters:</p> Name Type Description Default <code>note</code> <code>str</code> <p>The note content.</p> required <p>Returns:</p> Type Description <code>Note</code> <p>The created note.</p> Source code in <code>src/albert/collections/notes.py</code> <pre><code>def create(self, *, note: Note) -&gt; Note:\n    \"\"\"\n    Creates a new note.\n\n    Parameters\n    ----------\n    note : str\n        The note content.\n\n    Returns\n    -------\n    Note\n        The created note.\n    \"\"\"\n    response = self.session.post(\n        self.base_path, json=note.model_dump(by_alias=True, exclude_unset=True, mode=\"json\")\n    )\n    return Note(**response.json())\n</code></pre>"},{"location":"collections/notes/#albert.collections.notes.NotesCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Note\n</code></pre> <p>Retrieves a note by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the note to retrieve.</p> required <p>Returns:</p> Type Description <code>Note</code> <p>The note if found, None otherwise.</p> Source code in <code>src/albert/collections/notes.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Note:\n    \"\"\"\n    Retrieves a note by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the note to retrieve.\n\n    Returns\n    -------\n    Note\n        The note if found, None otherwise.\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    return Note(**response.json())\n</code></pre>"},{"location":"collections/notes/#albert.collections.notes.NotesCollection.update","title":"update","text":"<pre><code>update(*, note: Note) -&gt; Note\n</code></pre> <p>Updates a note.</p> <p>Parameters:</p> Name Type Description Default <code>note</code> <code>Note</code> <p>The note to update. The note must have an ID.</p> required <p>Returns:</p> Type Description <code>Note</code> <p>The updated note as returned by the server.</p> Source code in <code>src/albert/collections/notes.py</code> <pre><code>def update(self, *, note: Note) -&gt; Note:\n    \"\"\"Updates a note.\n\n    Parameters\n    ----------\n    note : Note\n        The note to update. The note must have an ID.\n\n    Returns\n    -------\n    Note\n        The updated note as returned by the server.\n    \"\"\"\n    patch = self._generate_patch_payload(\n        existing=self.get_by_id(id=note.id), updated=note, generate_metadata_diff=False\n    )\n    self.session.patch(\n        f\"{self.base_path}/{note.id}\",\n        json=patch.model_dump(mode=\"json\", by_alias=True, exclude_unset=True),\n    )\n    return self.get_by_id(id=note.id)\n</code></pre>"},{"location":"collections/notes/#albert.collections.notes.NotesCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes a note by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the note to delete.</p> required Source code in <code>src/albert/collections/notes.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Deletes a note by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the note to delete.\n    \"\"\"\n    self.session.delete(f\"{self.base_path}/{id}\")\n</code></pre>"},{"location":"collections/notes/#albert.collections.notes.NotesCollection.list","title":"list","text":"<pre><code>list(\n    *, parent_id: str, order_by: OrderBy = DESCENDING\n) -&gt; list[Note]\n</code></pre> <p>Lists notes by their parent ID.</p> <p>Parameters:</p> Name Type Description Default <code>parent_id</code> <code>str</code> <p>The parent ID of the notes to list.</p> required <code>order_by</code> <code>OrderBy</code> <p>The order to list notes in, by default OrderBy.DESCENDING.</p> <code>DESCENDING</code> <p>Returns:</p> Type Description <code>List[Note]</code> <p>The list of notes.</p> Source code in <code>src/albert/collections/notes.py</code> <pre><code>def list(self, *, parent_id: str, order_by: OrderBy = OrderBy.DESCENDING) -&gt; list[Note]:\n    \"\"\"\n    Lists notes by their parent ID.\n\n    Parameters\n    ----------\n    parent_id : str\n        The parent ID of the notes to list.\n    order_by : OrderBy, optional\n        The order to list notes in, by default OrderBy.DESCENDING.\n\n    Returns\n    -------\n    List[Note]\n        The list of notes.\n    \"\"\"\n\n    params = {\"parentId\": parent_id, \"orderBy\": order_by.value}\n    return AlbertPaginator(\n        session=self.session,\n        path=self.base_path,\n        mode=PaginationMode.KEY,\n        params=params,\n        deserialize=lambda items: [Note(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/parameter_groups/","title":"Parameter Groups","text":""},{"location":"collections/parameter_groups/#albert.collections.parameter_groups.ParameterGroupCollection","title":"albert.collections.parameter_groups.ParameterGroupCollection","text":"<pre><code>ParameterGroupCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>ParameterGroupCollection is a collection class for managing ParameterGroup entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session to use for making requests.</p> required <p>Methods:</p> Name Description <code>get_by_id</code> <p>Get a parameter group by its ID.</p> <code>get_by_ids</code> <code>list</code> <p>Search for Parameter Groups matching the given criteria.</p> <code>delete</code> <p>Delete a parameter group by its ID.</p> <code>create</code> <p>Create a new parameter group.</p> <code>get_by_name</code> <p>Get a parameter group by its name.</p> <code>update</code> <p>Update a parameter group.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/parameter_groups.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"A collection for interacting with Albert parameter groups.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session to use for making requests.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{ParameterGroupCollection._api_version}/parametergroups\"\n</code></pre>"},{"location":"collections/parameter_groups/#albert.collections.parameter_groups.ParameterGroupCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/parametergroups'\n</code></pre>"},{"location":"collections/parameter_groups/#albert.collections.parameter_groups.ParameterGroupCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; ParameterGroup\n</code></pre> <p>Get a parameter group by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the parameter group to retrieve.</p> required <p>Returns:</p> Type Description <code>ParameterGroup</code> <p>The parameter group with the given ID.</p> Source code in <code>src/albert/collections/parameter_groups.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; ParameterGroup:\n    \"\"\"Get a parameter group by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the parameter group to retrieve.\n\n    Returns\n    -------\n    ParameterGroup\n        The parameter group with the given ID.\n    \"\"\"\n    path = f\"{self.base_path}/{id}\"\n    response = self.session.get(path)\n    return ParameterGroup(**response.json())\n</code></pre>"},{"location":"collections/parameter_groups/#albert.collections.parameter_groups.ParameterGroupCollection.get_by_ids","title":"get_by_ids","text":"<pre><code>get_by_ids(*, ids: list[str]) -&gt; ParameterGroup\n</code></pre> Source code in <code>src/albert/collections/parameter_groups.py</code> <pre><code>def get_by_ids(self, *, ids: list[str]) -&gt; ParameterGroup:\n    url = f\"{self.base_path}/ids\"\n    batches = [ids[i : i + 100] for i in range(0, len(ids), 100)]\n    return [\n        ParameterGroup(**item)\n        for batch in batches\n        for item in self.session.get(url, params={\"id\": batch}).json()[\"Items\"]\n    ]\n</code></pre>"},{"location":"collections/parameter_groups/#albert.collections.parameter_groups.ParameterGroupCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    text: str | None = None,\n    types: PGType | list[PGType] | None = None,\n    order_by: OrderBy = DESCENDING,\n    limit: int = 25,\n    offset: int | None = None,\n) -&gt; Iterator[ParameterGroup]\n</code></pre> <p>Search for Parameter Groups matching the given criteria.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str | None</code> <p>Text to search for, by default None</p> <code>None</code> <code>types</code> <code>PGType | list[PGType] | None</code> <p>Filer the returned Parameter Groups by Type, by default None</p> <code>None</code> <code>order_by</code> <code>OrderBy</code> <p>The order in which to return results, by default OrderBy.DESCENDING</p> <code>DESCENDING</code> <p>Yields:</p> Type Description <code>Iterator[ParameterGroup]</code> <p>An iterator of Parameter Groups matching the given criteria.</p> Source code in <code>src/albert/collections/parameter_groups.py</code> <pre><code>def list(\n    self,\n    *,\n    text: str | None = None,\n    types: PGType | list[PGType] | None = None,\n    order_by: OrderBy = OrderBy.DESCENDING,\n    limit: int = 25,\n    offset: int | None = None,\n) -&gt; Iterator[ParameterGroup]:\n    \"\"\"Search for Parameter Groups matching the given criteria.\n\n    Parameters\n    ----------\n    text : str | None, optional\n        Text to search for, by default None\n    types : PGType | list[PGType] | None, optional\n        Filer the returned Parameter Groups by Type, by default None\n    order_by : OrderBy, optional\n        The order in which to return results, by default OrderBy.DESCENDING\n\n    Yields\n    ------\n    Iterator[ParameterGroup]\n        An iterator of Parameter Groups matching the given criteria.\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; Iterator[ParameterGroup]:\n        for item in items:\n            id = item[\"albertId\"]\n            try:\n                yield self.get_by_id(id=id)\n            except AlbertHTTPError as e:  # pragma: no cover\n                logger.warning(f\"Error fetching parameter group {id}: {e}\")\n        # Currently, the API is not returning metadata for the list_by_ids endpoint, so we need to fetch individually until that is fixed\n        # return self.get_by_ids(ids=[x[\"albertId\"] for x in items])\n\n    params = {\n        \"limit\": limit,\n        \"offset\": offset,\n        \"order\": order_by.value,\n        \"text\": text,\n        \"types\": [types] if isinstance(types, PGType) else types,\n    }\n\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/search\",\n        session=self.session,\n        params=params,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/parameter_groups/#albert.collections.parameter_groups.ParameterGroupCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Delete a parameter group by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the parameter group to delete</p> required Source code in <code>src/albert/collections/parameter_groups.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"Delete a parameter group by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the parameter group to delete\n    \"\"\"\n    path = f\"{self.base_path}/{id}\"\n    self.session.delete(path)\n</code></pre>"},{"location":"collections/parameter_groups/#albert.collections.parameter_groups.ParameterGroupCollection.create","title":"create","text":"<pre><code>create(\n    *, parameter_group: ParameterGroup\n) -&gt; ParameterGroup\n</code></pre> <p>Create a new parameter group.</p> <p>Parameters:</p> Name Type Description Default <code>parameter_group</code> <code>ParameterGroup</code> <p>The parameter group to create.</p> required <p>Returns:</p> Type Description <code>ParameterGroup</code> <p>The created parameter group.</p> Source code in <code>src/albert/collections/parameter_groups.py</code> <pre><code>def create(self, *, parameter_group: ParameterGroup) -&gt; ParameterGroup:\n    \"\"\"Create a new parameter group.\n\n    Parameters\n    ----------\n    parameter_group : ParameterGroup\n        The parameter group to create.\n\n    Returns\n    -------\n    ParameterGroup\n        The created parameter group.\n    \"\"\"\n\n    response = self.session.post(\n        self.base_path,\n        json=parameter_group.model_dump(by_alias=True, exclude_none=True, mode=\"json\"),\n    )\n    return ParameterGroup(**response.json())\n</code></pre>"},{"location":"collections/parameter_groups/#albert.collections.parameter_groups.ParameterGroupCollection.get_by_name","title":"get_by_name","text":"<pre><code>get_by_name(*, name: str) -&gt; ParameterGroup | None\n</code></pre> <p>Get a parameter group by its name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the parameter group to retrieve.</p> required <p>Returns:</p> Type Description <code>ParameterGroup | None</code> <p>The parameter group with the given name, or None if not found.</p> Source code in <code>src/albert/collections/parameter_groups.py</code> <pre><code>def get_by_name(self, *, name: str) -&gt; ParameterGroup | None:\n    \"\"\"Get a parameter group by its name.\n\n    Parameters\n    ----------\n    name : str\n        The name of the parameter group to retrieve.\n\n    Returns\n    -------\n    ParameterGroup | None\n        The parameter group with the given name, or None if not found.\n    \"\"\"\n    matches = self.list(text=name)\n    for m in matches:\n        if m.name.lower() == name.lower():\n            return m\n    return None\n</code></pre>"},{"location":"collections/parameter_groups/#albert.collections.parameter_groups.ParameterGroupCollection.update","title":"update","text":"<pre><code>update(\n    *, parameter_group: ParameterGroup\n) -&gt; ParameterGroup\n</code></pre> <p>Update a parameter group.</p> <p>Parameters:</p> Name Type Description Default <code>parameter_group</code> <code>ParameterGroup</code> <p>The updated ParameterGroup. The ParameterGroup must have an ID.</p> required <p>Returns:</p> Type Description <code>ParameterGroup</code> <p>The updated ParameterGroup as returned by the server.</p> Source code in <code>src/albert/collections/parameter_groups.py</code> <pre><code>def update(self, *, parameter_group: ParameterGroup) -&gt; ParameterGroup:\n    \"\"\"Update a parameter group.\n\n    Parameters\n    ----------\n    parameter_group : ParameterGroup\n        The updated ParameterGroup. The ParameterGroup must have an ID.\n\n    Returns\n    -------\n    ParameterGroup\n        The updated ParameterGroup as returned by the server.\n    \"\"\"\n    existing = self.get_by_id(id=parameter_group.id)\n    path = f\"{self.base_path}/{existing.id}\"\n\n    base_payload = self._generate_patch_payload(\n        existing=existing, updated=parameter_group, generate_metadata_diff=True\n    )\n\n    general_patches, new_parameter_values, enum_patches = generate_parameter_group_patches(\n        initial_patches=base_payload,\n        updated_parameter_group=parameter_group,\n        existing_parameter_group=existing,\n    )\n\n    # add new parameters\n    new_param_url = f\"{self.base_path}/{parameter_group.id}/parameters\"\n    if len(new_parameter_values) &gt; 0:\n        self.session.put(\n            url=new_param_url,\n            json=[\n                x.model_dump(mode=\"json\", by_alias=True, exclude_none=True)\n                for x in new_parameter_values\n            ],\n        )\n    new_param_sequences = [x.sequence for x in new_parameter_values]\n    # handle enum updates\n    for sequence, ep in enum_patches.items():\n        if sequence in new_param_sequences:\n            # we don't need to handle enum updates for new parameters\n            continue\n        if len(ep) &gt; 0:\n            enum_url = f\"{self.base_path}/{parameter_group.id}/parameters/{sequence}/enums\"\n            self.session.put(\n                url=enum_url,\n                json=ep,\n            )\n    if len(general_patches.data) &gt; 0:\n        # patch the general patches\n        self.session.patch(\n            url=path,\n            json=general_patches.model_dump(mode=\"json\", by_alias=True, exclude_none=True),\n        )\n\n    return self.get_by_id(id=parameter_group.id)\n</code></pre>"},{"location":"collections/parameters/","title":"Parameters","text":""},{"location":"collections/parameters/#albert.collections.parameters.ParameterCollection","title":"albert.collections.parameters.ParameterCollection","text":"<pre><code>ParameterCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>ParameterCollection is a collection class for managing Parameter entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_by_id</code> <p>Retrieve a parameter by its ID.</p> <code>create</code> <p>Create a new parameter.</p> <code>delete</code> <p>Delete a parameter by its ID.</p> <code>list</code> <p>Lists parameters that match the provided criteria.</p> <code>update</code> <p>Update a parameter.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/parameters.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"Initializes the ParameterCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{ParameterCollection._api_version}/parameters\"\n</code></pre>"},{"location":"collections/parameters/#albert.collections.parameters.ParameterCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/parameters'\n</code></pre>"},{"location":"collections/parameters/#albert.collections.parameters.ParameterCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Parameter\n</code></pre> <p>Retrieve a parameter by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the parameter to retrieve.</p> required <p>Returns:</p> Type Description <code>Parameter</code> <p>The parameter with the given ID.</p> Source code in <code>src/albert/collections/parameters.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Parameter:\n    \"\"\"Retrieve a parameter by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the parameter to retrieve.\n\n    Returns\n    -------\n    Parameter\n        The parameter with the given ID.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    return Parameter(**response.json())\n</code></pre>"},{"location":"collections/parameters/#albert.collections.parameters.ParameterCollection.create","title":"create","text":"<pre><code>create(*, parameter: Parameter) -&gt; Parameter\n</code></pre> <p>Create a new parameter.</p> <p>Parameters:</p> Name Type Description Default <code>parameter</code> <code>Parameter</code> <p>The parameter to create.</p> required <p>Returns:</p> Type Description <code>Parameter</code> <p>Returns the created parameter or the existing parameter if it already exists.</p> Source code in <code>src/albert/collections/parameters.py</code> <pre><code>def create(self, *, parameter: Parameter) -&gt; Parameter:\n    \"\"\"Create a new parameter.\n\n    Parameters\n    ----------\n    parameter : Parameter\n        The parameter to create.\n\n    Returns\n    -------\n    Parameter\n        Returns the created parameter or the existing parameter if it already exists.\n    \"\"\"\n    match = next(self.list(names=parameter.name, exact_match=True), None)\n    if match is not None:\n        logging.warning(\n            f\"Parameter with name {parameter.name} already exists. Returning existing parameter.\"\n        )\n        return match\n    response = self.session.post(\n        self.base_path,\n        json=parameter.model_dump(by_alias=True, exclude_none=True, mode=\"json\"),\n    )\n    return Parameter(**response.json())\n</code></pre>"},{"location":"collections/parameters/#albert.collections.parameters.ParameterCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Delete a parameter by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the parameter to delete.</p> required Source code in <code>src/albert/collections/parameters.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"Delete a parameter by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the parameter to delete.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/parameters/#albert.collections.parameters.ParameterCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    ids: list[str] | None = None,\n    names: str | list[str] = None,\n    exact_match: bool = False,\n    order_by: OrderBy = DESCENDING,\n    start_key: str | None = None,\n    limit: int = 50,\n    return_full: bool = True,\n) -&gt; Iterator[Parameter]\n</code></pre> <p>Lists parameters that match the provided criteria.</p> <p>Parameters:</p> Name Type Description Default <code>ids</code> <code>list[str] | None</code> <p>A list of parameter IDs to retrieve, by default None</p> <code>None</code> <code>names</code> <code>str | list[str]</code> <p>A list of parameter names to retrieve, by default None</p> <code>None</code> <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default False</p> <code>False</code> <code>order_by</code> <code>OrderBy</code> <p>The order in which to return results, by default OrderBy.DESCENDING</p> <code>DESCENDING</code> <code>return_full</code> <code>bool</code> <p>Whether to make additional API call to fetch the full object, by default True</p> <code>True</code> <p>Yields:</p> Type Description <code>Iterator[Parameter]</code> <p>An iterator of Parameters matching the given criteria.</p> Source code in <code>src/albert/collections/parameters.py</code> <pre><code>def list(\n    self,\n    *,\n    ids: list[str] | None = None,\n    names: str | list[str] = None,\n    exact_match: bool = False,\n    order_by: OrderBy = OrderBy.DESCENDING,\n    start_key: str | None = None,\n    limit: int = 50,\n    return_full: bool = True,\n) -&gt; Iterator[Parameter]:\n    \"\"\"Lists parameters that match the provided criteria.\n\n    Parameters\n    ----------\n    ids : list[str] | None, optional\n        A list of parameter IDs to retrieve, by default None\n    names : str | list[str], optional\n        A list of parameter names to retrieve, by default None\n    exact_match : bool, optional\n        Whether to match the name exactly, by default False\n    order_by : OrderBy, optional\n        The order in which to return results, by default OrderBy.DESCENDING\n    return_full : bool, optional\n        Whether to make additional API call to fetch the full object, by default True\n\n    Yields\n    ------\n    Iterator[Parameter]\n        An iterator of Parameters matching the given criteria.\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; Iterator[Parameter]:\n        if return_full:\n            for item in items:\n                id = item[\"albertId\"]\n                try:\n                    yield self.get_by_id(id=id)\n                except AlbertHTTPError as e:\n                    logger.warning(f\"Error fetching Parameter '{id}': {e}\")\n        else:\n            yield from (Parameter(**item) for item in items)\n\n    params = {\"limit\": limit, \"orderBy\": order_by, \"parameters\": ids, \"startKey\": start_key}\n    if names:\n        params[\"name\"] = [names] if isinstance(names, str) else names\n        params[\"exactMatch\"] = json.dumps(exact_match)\n\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/parameters/#albert.collections.parameters.ParameterCollection.update","title":"update","text":"<pre><code>update(*, parameter: Parameter) -&gt; Parameter\n</code></pre> <p>Update a parameter.</p> <p>Parameters:</p> Name Type Description Default <code>parameter</code> <code>Parameter</code> <p>The updated parameter to save. The parameter must have an ID.</p> required <p>Returns:</p> Type Description <code>Parameter</code> <p>The updated parameter as returned by the server.</p> Source code in <code>src/albert/collections/parameters.py</code> <pre><code>def update(self, *, parameter: Parameter) -&gt; Parameter:\n    \"\"\"Update a parameter.\n\n    Parameters\n    ----------\n    parameter : Parameter\n        The updated parameter to save. The parameter must have an ID.\n\n    Returns\n    -------\n    Parameter\n        The updated parameter as returned by the server.\n    \"\"\"\n    existing = self.get_by_id(id=parameter.id)\n    payload = self._generate_patch_payload(\n        existing=existing,\n        updated=parameter,\n    )\n    payload_dump = payload.model_dump(mode=\"json\", by_alias=True)\n    for i, change in enumerate(payload_dump[\"data\"]):\n        if not self._is_metadata_item_list(\n            existing_object=existing,\n            updated_object=parameter,\n            metadata_field=change[\"attribute\"],\n        ):\n            change[\"operation\"] = \"update\"\n            if \"newValue\" in change and change[\"newValue\"] is None:\n                del change[\"newValue\"]\n            if \"oldValue\" in change and change[\"oldValue\"] is None:\n                del change[\"oldValue\"]\n            payload_dump[\"data\"][i] = change\n    if len(payload_dump[\"data\"]) == 0:\n        return parameter\n    for e in payload_dump[\"data\"]:\n        self.session.patch(\n            f\"{self.base_path}/{parameter.id}\",\n            json={\"data\": [e]},\n        )\n    return self.get_by_id(id=parameter.id)\n</code></pre>"},{"location":"collections/pricings/","title":"Pricings","text":""},{"location":"collections/pricings/#albert.collections.pricings.PricingCollection","title":"albert.collections.pricings.PricingCollection","text":"<pre><code>PricingCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>PricingCollection is a collection class for managing Pricing entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <p>Creates a new Pricing entity.</p> <code>get_by_id</code> <p>Retrieves a Pricing entity by its ID.</p> <code>get_by_inventory_id</code> <p>Returns a list of Pricing entities for the given inventory ID as per the provided parameters.</p> <code>get_by_inventory_ids</code> <p>Returns a list of Pricing resources for each parent inventory ID.</p> <code>delete</code> <p>Deletes a Pricing entity by its ID.</p> <code>update</code> <p>Updates a Pricing entity.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/pricings.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"Initializes the PricingCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{PricingCollection._api_version}/pricings\"\n</code></pre>"},{"location":"collections/pricings/#albert.collections.pricings.PricingCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/pricings'\n</code></pre>"},{"location":"collections/pricings/#albert.collections.pricings.PricingCollection.create","title":"create","text":"<pre><code>create(*, pricing: Pricing) -&gt; Pricing\n</code></pre> <p>Creates a new Pricing entity.</p> <p>Parameters:</p> Name Type Description Default <code>pricing</code> <code>Pricing</code> <p>The Pricing entity to create.</p> required <p>Returns:</p> Type Description <code>Pricing</code> <p>The created Pricing entity.</p> Source code in <code>src/albert/collections/pricings.py</code> <pre><code>def create(self, *, pricing: Pricing) -&gt; Pricing:\n    \"\"\"Creates a new Pricing entity.\n\n    Parameters\n    ----------\n    pricing : Pricing\n        The Pricing entity to create.\n\n    Returns\n    -------\n    Pricing\n        The created Pricing entity.\n    \"\"\"\n    payload = pricing.model_dump(by_alias=True, exclude_none=True, mode=\"json\")\n    response = self.session.post(self.base_path, json=payload)\n    return Pricing(**response.json())\n</code></pre>"},{"location":"collections/pricings/#albert.collections.pricings.PricingCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Pricing\n</code></pre> <p>Retrieves a Pricing entity by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the Pricing entity to retrieve.</p> required <p>Returns:</p> Type Description <code>Pricing</code> <p>The Pricing entity if found, None otherwise.</p> Source code in <code>src/albert/collections/pricings.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Pricing:\n    \"\"\"Retrieves a Pricing entity by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the Pricing entity to retrieve.\n\n    Returns\n    -------\n    Pricing\n        The Pricing entity if found, None otherwise.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    return Pricing(**response.json())\n</code></pre>"},{"location":"collections/pricings/#albert.collections.pricings.PricingCollection.get_by_inventory_id","title":"get_by_inventory_id","text":"<pre><code>get_by_inventory_id(\n    *,\n    inventory_id: str,\n    group_by: PricingBy | None = None,\n    filter_by: PricingBy | None = None,\n    filter_id: str | None = None,\n    order_by: OrderBy | None = None,\n) -&gt; list[Pricing]\n</code></pre> <p>Returns a list of Pricing entities for the given inventory ID as per the provided parameters.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_id</code> <code>str</code> <p>The ID of the inventory to retrieve pricings for.</p> required <code>group_by</code> <code>PricingBy | None</code> <p>Grouping by PricingBy, by default None</p> <code>None</code> <code>filter_by</code> <code>PricingBy | None</code> <p>Filter by PricingBy, by default None</p> <code>None</code> <code>filter_id</code> <code>str | None</code> <p>The string to use as the filter, by default None</p> <code>None</code> <code>order_by</code> <code>OrderBy | None</code> <p>The order to sort the results by, by default None</p> <code>None</code> <p>Returns:</p> Type Description <code>list[Pricing]</code> <p>A list of Pricing entities matching the provided parameters.</p> Source code in <code>src/albert/collections/pricings.py</code> <pre><code>def get_by_inventory_id(\n    self,\n    *,\n    inventory_id: str,\n    group_by: PricingBy | None = None,\n    filter_by: PricingBy | None = None,\n    filter_id: str | None = None,\n    order_by: OrderBy | None = None,\n) -&gt; list[Pricing]:\n    \"\"\"Returns a list of Pricing entities for the given inventory ID as per the provided parameters.\n\n    Parameters\n    ----------\n    inventory_id : str\n        The ID of the inventory to retrieve pricings for.\n    group_by : PricingBy | None, optional\n        Grouping by PricingBy, by default None\n    filter_by : PricingBy | None, optional\n        Filter by PricingBy, by default None\n    filter_id : str | None, optional\n        The string to use as the filter, by default None\n    order_by : OrderBy | None, optional\n        The order to sort the results by, by default None\n\n    Returns\n    -------\n    list[Pricing]\n        A list of Pricing entities matching the provided parameters.\n    \"\"\"\n    params = {\n        \"parentId\": inventory_id,\n        \"groupBy\": group_by,\n        \"filterBy\": filter_by,\n        \"id\": filter_id,\n        \"orderBy\": order_by,\n    }\n    params = {k: v for k, v in params.items() if v is not None}\n    response = self.session.get(self.base_path, params=params)\n    items = response.json().get(\"Items\", [])\n    return [Pricing(**x) for x in items]\n</code></pre>"},{"location":"collections/pricings/#albert.collections.pricings.PricingCollection.get_by_inventory_ids","title":"get_by_inventory_ids","text":"<pre><code>get_by_inventory_ids(\n    *, inventory_ids: list[InventoryId]\n) -&gt; list[InventoryPricings]\n</code></pre> <p>Returns a list of Pricing resources for each parent inventory ID.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_ids</code> <code>list[str]</code> <p>The list of inventory IDs to retrieve pricings for.</p> required <p>Returns:</p> Type Description <code>list[InventoryPricing]</code> <p>A list of InventoryPricing objects matching the provided inventory.</p> Source code in <code>src/albert/collections/pricings.py</code> <pre><code>@validate_call\ndef get_by_inventory_ids(self, *, inventory_ids: list[InventoryId]) -&gt; list[InventoryPricings]:\n    \"\"\"Returns a list of Pricing resources for each parent inventory ID.\n\n    Parameters\n    ----------\n    inventory_ids : list[str]\n        The list of inventory IDs to retrieve pricings for.\n\n    Returns\n    -------\n    list[InventoryPricing]\n        A list of InventoryPricing objects matching the provided inventory.\n    \"\"\"\n    params = {\"id\": inventory_ids}\n    response = self.session.get(f\"{self.base_path}/ids\", params=params)\n    return [InventoryPricings(**x) for x in response.json()[\"Items\"]]\n</code></pre>"},{"location":"collections/pricings/#albert.collections.pricings.PricingCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes a Pricing entity by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the Pricing entity to delete.</p> required Source code in <code>src/albert/collections/pricings.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"Deletes a Pricing entity by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the Pricing entity to delete.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/pricings/#albert.collections.pricings.PricingCollection.update","title":"update","text":"<pre><code>update(*, pricing: Pricing) -&gt; Pricing\n</code></pre> <p>Updates a Pricing entity.</p> <p>Parameters:</p> Name Type Description Default <code>pricing</code> <code>Pricing</code> <p>The updated Pricing entity.</p> required <p>Returns:</p> Type Description <code>Pricing</code> <p>The updated Pricing entity as it appears in Albert.</p> Source code in <code>src/albert/collections/pricings.py</code> <pre><code>def update(self, *, pricing: Pricing) -&gt; Pricing:\n    \"\"\"Updates a Pricing entity.\n\n    Parameters\n    ----------\n    pricing : Pricing\n        The updated Pricing entity.\n\n    Returns\n    -------\n    Pricing\n        The updated Pricing entity as it appears in Albert.\n    \"\"\"\n    current_pricing = self.get_by_id(id=pricing.id)\n    patch_payload = self._pricing_patch_payload(existing=current_pricing, updated=pricing)\n    self.session.patch(\n        url=f\"{self.base_path}/{pricing.id}\",\n        json=patch_payload.model_dump(mode=\"json\", by_alias=True),\n    )\n    return self.get_by_id(id=pricing.id)\n</code></pre>"},{"location":"collections/product_design/","title":"Product Design","text":""},{"location":"collections/product_design/#albert.collections.product_design.ProductDesignCollection","title":"albert.collections.product_design.ProductDesignCollection","text":"<pre><code>ProductDesignCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>ProductDesignCollection is a collection class for managing Product Design entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_unpacked_products</code> <p>Get unpacked products by inventory IDs.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/product_design.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the CasCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{ProductDesignCollection._api_version}/productdesign\"\n</code></pre>"},{"location":"collections/product_design/#albert.collections.product_design.ProductDesignCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/productdesign'\n</code></pre>"},{"location":"collections/product_design/#albert.collections.product_design.ProductDesignCollection.get_unpacked_products","title":"get_unpacked_products","text":"<pre><code>get_unpacked_products(\n    *,\n    inventory_ids: list[InventoryId],\n    unpack_id: Literal[\n        \"DESIGN\", \"PREDICTION\"\n    ] = \"PREDICTION\",\n) -&gt; list[UnpackedProductDesign]\n</code></pre> <p>Get unpacked products by inventory IDs.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_ids</code> <code>list[InventoryId]</code> <p>The inventory ids to get unpacked formulas for.</p> required <code>unpack_id</code> <code>Literal['DESIGN', 'PREDICTION']</code> <p>The ID for the unpack operation.</p> <code>'PREDICTION'</code> <p>Returns:</p> Type Description <code>list[UnpackedProductDesign]</code> <p>The unpacked products/formulas.</p> Source code in <code>src/albert/collections/product_design.py</code> <pre><code>@validate_call\ndef get_unpacked_products(\n    self,\n    *,\n    inventory_ids: list[InventoryId],\n    unpack_id: Literal[\"DESIGN\", \"PREDICTION\"] = \"PREDICTION\",\n) -&gt; list[UnpackedProductDesign]:\n    \"\"\"\n    Get unpacked products by inventory IDs.\n\n    Parameters\n    ----------\n    inventory_ids : list[InventoryId]\n        The inventory ids to get unpacked formulas for.\n    unpack_id: Literal[\"DESIGN\", \"PREDICTION\"]\n        The ID for the unpack operation.\n\n    Returns\n    -------\n    list[UnpackedProductDesign]\n        The unpacked products/formulas.\n    \"\"\"\n    url = f\"{self.base_path}/{unpack_id}/unpack\"\n    batches = [inventory_ids[i : i + 50] for i in range(0, len(inventory_ids), 50)]\n    return [\n        UnpackedProductDesign(**item)\n        for batch in batches\n        for item in self.session.get(url, params={\"formulaId\": batch}).json()\n    ]\n</code></pre>"},{"location":"collections/projects/","title":"Projects","text":""},{"location":"collections/projects/#albert.collections.projects.ProjectCollection","title":"albert.collections.projects.ProjectCollection","text":"<pre><code>ProjectCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>ProjectCollection is a collection class for managing Project entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <p>Create a new project.</p> <code>get_by_id</code> <p>Retrieve a project by its ID.</p> <code>update</code> <p>Update a project.</p> <code>delete</code> <p>Delete a project by its ID.</p> <code>list</code> <p>List projects with optional filters.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/projects.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initialize a ProjectCollection object.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{ProjectCollection._api_version}/projects\"\n</code></pre>"},{"location":"collections/projects/#albert.collections.projects.ProjectCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/projects'\n</code></pre>"},{"location":"collections/projects/#albert.collections.projects.ProjectCollection.create","title":"create","text":"<pre><code>create(*, project: Project) -&gt; Project\n</code></pre> <p>Create a new project.</p> <p>Parameters:</p> Name Type Description Default <code>project</code> <code>Project</code> <p>The project to create.</p> required <p>Returns:</p> Type Description <code>Optional[Project]</code> <p>The created project object if successful, None otherwise.</p> Source code in <code>src/albert/collections/projects.py</code> <pre><code>def create(self, *, project: Project) -&gt; Project:\n    \"\"\"\n    Create a new project.\n\n    Parameters\n    ----------\n    project : Project\n        The project to create.\n\n    Returns\n    -------\n    Optional[Project]\n        The created project object if successful, None otherwise.\n    \"\"\"\n    response = self.session.post(\n        self.base_path, json=project.model_dump(by_alias=True, exclude_unset=True, mode=\"json\")\n    )\n    return Project(**response.json())\n</code></pre>"},{"location":"collections/projects/#albert.collections.projects.ProjectCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Project\n</code></pre> <p>Retrieve a project by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the project to retrieve.</p> required <p>Returns:</p> Type Description <code>Project</code> <p>The project object if found</p> Source code in <code>src/albert/collections/projects.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Project:\n    \"\"\"\n    Retrieve a project by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the project to retrieve.\n\n    Returns\n    -------\n    Project\n        The project object if found\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n\n    return Project(**response.json())\n</code></pre>"},{"location":"collections/projects/#albert.collections.projects.ProjectCollection.update","title":"update","text":"<pre><code>update(*, project: Project) -&gt; Project\n</code></pre> <p>Update a project.</p> <p>Parameters:</p> Name Type Description Default <code>project</code> <code>Project</code> <p>The updated project object.</p> required <p>Returns:</p> Type Description <code>Project</code> <p>The updated project object as returned by the server.</p> Source code in <code>src/albert/collections/projects.py</code> <pre><code>def update(self, *, project: Project) -&gt; Project:\n    \"\"\"Update a project.\n\n    Parameters\n    ----------\n    project : Project\n        The updated project object.\n\n    Returns\n    -------\n    Project\n        The updated project object as returned by the server.\n    \"\"\"\n    existing_project = self.get_by_id(id=project.id)\n    patch_data = self._generate_patch_payload(existing=existing_project, updated=project)\n    url = f\"{self.base_path}/{project.id}\"\n\n    self.session.patch(url, json=patch_data.model_dump(mode=\"json\", by_alias=True))\n\n    return self.get_by_id(id=project.id)\n</code></pre>"},{"location":"collections/projects/#albert.collections.projects.ProjectCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Delete a project by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the project to delete.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/projects.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Delete a project by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the project to delete.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/projects/#albert.collections.projects.ProjectCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    text: str = None,\n    status: list[str] = None,\n    market_segment: list[str] = None,\n    application: list[str] = None,\n    technology: list[str] = None,\n    created_by: list[str] = None,\n    location: list[str] = None,\n    from_created_at: str = None,\n    to_created_at: str = None,\n    facet_field: str = None,\n    facet_text: str = None,\n    contains_field: list[str] = None,\n    contains_text: list[str] = None,\n    linked_to: str = None,\n    my_projects: bool = None,\n    my_role: list[str] = None,\n    order_by: OrderBy = DESCENDING,\n    sort_by: str = None,\n    limit: int = 50,\n) -&gt; Iterator[Project]\n</code></pre> <p>List projects with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Search any test in the project.</p> <code>None</code> <code>status</code> <code>list[str]</code> <p>The status filter for the projects.</p> <code>None</code> <code>market_segment</code> <code>list[str]</code> <p>The market segment filter for the projects.</p> <code>None</code> <code>application</code> <code>list[str]</code> <p>The application filter for the projects.</p> <code>None</code> <code>technology</code> <code>list[str]</code> <p>The technology filter for the projects.</p> <code>None</code> <code>created_by</code> <code>list[str]</code> <p>The name of the user who created the project.</p> <code>None</code> <code>location</code> <code>list[str]</code> <p>The location filter for the projects.</p> <code>None</code> <code>from_created_at</code> <code>str</code> <p>The start date filter for the projects.</p> <code>None</code> <code>to_created_at</code> <code>str</code> <p>The end date filter for the projects.</p> <code>None</code> <code>facet_field</code> <code>str</code> <p>The facet field for the projects.</p> <code>None</code> <code>facet_text</code> <code>str</code> <p>The facet text for the projects.</p> <code>None</code> <code>contains_field</code> <code>list[str]</code> <p>To power project facets search</p> <code>None</code> <code>contains_text</code> <code>list[str]</code> <p>To power project facets search</p> <code>None</code> <code>linked_to</code> <code>str</code> <p>To pass text for linked to dropdown search in Task creation flow.</p> <code>None</code> <code>my_projects</code> <code>bool</code> <p>Return Projects owned by you.</p> <code>None</code> <code>my_role</code> <code>list[str]</code> <p>Filter Projects to ones which you have a specific role in.</p> <code>None</code> <code>order_by</code> <code>OrderBy</code> <p>The order in which to retrieve items (default is OrderBy.DESCENDING).</p> <code>DESCENDING</code> <code>sort_by</code> <code>str</code> <p>The field to sort by.</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[Project]</code> <p>An iterator of Project resources.</p> Source code in <code>src/albert/collections/projects.py</code> <pre><code>def list(\n    self,\n    *,\n    text: str = None,\n    status: list[str] = None,\n    market_segment: list[str] = None,\n    application: list[str] = None,\n    technology: list[str] = None,\n    created_by: list[str] = None,\n    location: list[str] = None,\n    from_created_at: str = None,\n    to_created_at: str = None,\n    facet_field: str = None,\n    facet_text: str = None,\n    contains_field: list[str] = None,\n    contains_text: list[str] = None,\n    linked_to: str = None,\n    my_projects: bool = None,\n    my_role: list[str] = None,\n    order_by: OrderBy = OrderBy.DESCENDING,\n    sort_by: str = None,\n    limit: int = 50,\n) -&gt; Iterator[Project]:\n    \"\"\"\n    List projects with optional filters.\n\n    Parameters\n    ----------\n    text : str, optional\n        Search any test in the project.\n    status : list[str], optional\n        The status filter for the projects.\n    market_segment : list[str], optional\n        The market segment filter for the projects.\n    application : list[str], optional\n        The application filter for the projects.\n    technology : list[str], optional\n        The technology filter for the projects.\n    created_by : list[str], optional\n        The name of the user who created the project.\n    location : list[str], optional\n        The location filter for the projects.\n    from_created_at : str, optional\n        The start date filter for the projects.\n    to_created_at : str, optional\n        The end date filter for the projects.\n    facet_field : str, optional\n        The facet field for the projects.\n    facet_text : str, optional\n        The facet text for the projects.\n    contains_field : list[str], optional\n        To power project facets search\n    contains_text : list[str], optional\n        To power project facets search\n    linked_to : str, optional\n        To pass text for linked to dropdown search in Task creation flow.\n    my_projects : bool, optional\n        Return Projects owned by you.\n    my_role : list[str], optional\n        Filter Projects to ones which you have a specific role in.\n    order_by : OrderBy, optional\n        The order in which to retrieve items (default is OrderBy.DESCENDING).\n    sort_by : str, optional\n        The field to sort by.\n\n    Returns\n    ------\n    Iterator[Project]\n        An iterator of Project resources.\n    \"\"\"\n    params = {\n        \"limit\": limit,\n        \"order\": order_by.value,\n        \"text\": text,\n        \"sortBy\": sort_by,\n        \"status\": status,\n        \"marketSegment\": market_segment,\n        \"application\": application,\n        \"technology\": technology,\n        \"createdBy\": created_by,\n        \"location\": location,\n        \"fromCreatedAt\": from_created_at,\n        \"toCreatedAt\": to_created_at,\n        \"facetField\": facet_field,\n        \"facetText\": facet_text,\n        \"containsField\": contains_field,\n        \"containsText\": contains_text,\n        \"linkedTo\": linked_to,\n        \"myProjects\": my_projects,\n        \"myRole\": my_role,\n    }\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/search\",\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [Project(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/property_data/","title":"Property Data","text":""},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection","title":"albert.collections.property_data.PropertyDataCollection","text":"<pre><code>PropertyDataCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>PropertyDataCollection is a collection class for managing Property Data entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_properties_on_inventory</code> <p>Returns all the properties of an inventory item.</p> <code>add_properties_to_inventory</code> <p>Add new properties to an inventory item.</p> <code>update_property_on_inventory</code> <p>Update a property on an inventory item.</p> <code>get_task_block_properties</code> <p>Returns all the properties within a Property Task block for a specific inventory item.</p> <code>check_for_task_data</code> <p>Checks if a task has data.</p> <code>check_block_interval_for_data</code> <p>Check if a specific block interval has data.</p> <code>get_all_task_properties</code> <p>Returns all the properties for a specific task.</p> <code>update_property_on_task</code> <p>Updates a specific property on a task.</p> <code>add_properties_to_task</code> <p>Add new task properties for a given task.</p> <code>update_or_create_task_properties</code> <p>Update or create task properties for a given task.</p> <code>bulk_load_task_properties</code> <p>Bulk load task properties for a given task. WARNING: This will overwrite any existing properties!</p> <code>bulk_delete_task_data</code> <p>Bulk delete task data for a given task.</p> <code>search</code> <p>Search for property data with various filtering options.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the CompanyCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{PropertyDataCollection._api_version}/propertydata\"\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/propertydata'\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.get_properties_on_inventory","title":"get_properties_on_inventory","text":"<pre><code>get_properties_on_inventory(\n    *, inventory_id: InventoryId\n) -&gt; InventoryPropertyData\n</code></pre> <p>Returns all the properties of an inventory item.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_id</code> <code>InventoryId</code> <p>The ID of the inventory item to retrieve properties for.</p> required <p>Returns:</p> Type Description <code>InventoryPropertyData</code> <p>The properties of the inventory item.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef get_properties_on_inventory(self, *, inventory_id: InventoryId) -&gt; InventoryPropertyData:\n    \"\"\"Returns all the properties of an inventory item.\n\n    Parameters\n    ----------\n    inventory_id : InventoryId\n        The ID of the inventory item to retrieve properties for.\n\n    Returns\n    -------\n    InventoryPropertyData\n        The properties of the inventory item.\n    \"\"\"\n    params = {\"entity\": \"inventory\", \"id\": [inventory_id]}\n    response = self.session.get(url=self.base_path, params=params)\n    response_json = response.json()\n    return InventoryPropertyData(**response_json[0])\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.add_properties_to_inventory","title":"add_properties_to_inventory","text":"<pre><code>add_properties_to_inventory(\n    *,\n    inventory_id: InventoryId,\n    properties: list[InventoryDataColumn],\n) -&gt; list[InventoryPropertyDataCreate]\n</code></pre> <p>Add new properties to an inventory item.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_id</code> <code>InventoryId</code> <p>The ID of the inventory item to add properties to.</p> required <code>properties</code> <code>list[InventoryDataColumn]</code> <p>The properties to add.</p> required <p>Returns:</p> Type Description <code>list[InventoryPropertyDataCreate]</code> <p>The registered properties.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef add_properties_to_inventory(\n    self, *, inventory_id: InventoryId, properties: list[InventoryDataColumn]\n) -&gt; list[InventoryPropertyDataCreate]:\n    \"\"\"Add new properties to an inventory item.\n\n    Parameters\n    ----------\n    inventory_id : InventoryId\n        The ID of the inventory item to add properties to.\n    properties : list[InventoryDataColumn]\n        The properties to add.\n\n    Returns\n    -------\n    list[InventoryPropertyDataCreate]\n        The registered properties.\n    \"\"\"\n    returned = []\n    for p in properties:\n        # Can only add one at a time.\n        create_object = InventoryPropertyDataCreate(\n            inventory_id=inventory_id, data_columns=[p]\n        )\n        response = self.session.post(\n            self.base_path,\n            json=create_object.model_dump(exclude_none=True, by_alias=True, mode=\"json\"),\n        )\n        response_json = response.json()\n        logger.info(response_json.get(\"message\", None))\n        returned.append(InventoryPropertyDataCreate(**response_json))\n    return returned\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.update_property_on_inventory","title":"update_property_on_inventory","text":"<pre><code>update_property_on_inventory(\n    *,\n    inventory_id: InventoryId,\n    property_data: InventoryDataColumn,\n) -&gt; InventoryPropertyData\n</code></pre> <p>Update a property on an inventory item.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_id</code> <code>InventoryId</code> <p>The ID of the inventory item to update the property on.</p> required <code>property_data</code> <code>InventoryDataColumn</code> <p>The updated property data.</p> required <p>Returns:</p> Type Description <code>InventoryPropertyData</code> <p>The updated property data as returned by the server.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef update_property_on_inventory(\n    self, *, inventory_id: InventoryId, property_data: InventoryDataColumn\n) -&gt; InventoryPropertyData:\n    \"\"\"Update a property on an inventory item.\n\n    Parameters\n    ----------\n    inventory_id : InventoryId\n        The ID of the inventory item to update the property on.\n    property_data : InventoryDataColumn\n        The updated property data.\n\n    Returns\n    -------\n    InventoryPropertyData\n        The updated property data as returned by the server.\n    \"\"\"\n    existing_properties = self.get_properties_on_inventory(inventory_id=inventory_id)\n    existing_value = None\n    for p in existing_properties.custom_property_data:\n        if p.data_column.data_column_id == property_data.data_column_id:\n            existing_value = (\n                p.data_column.property_data.value\n                if p.data_column.property_data.value is not None\n                else p.data_column.property_data.string_value\n                if p.data_column.property_data.string_value is not None\n                else str(p.data_column.property_data.numeric_value)\n                if p.data_column.property_data.numeric_value is not None\n                else None\n            )\n            existing_id = p.data_column.property_data.id\n            break\n    if existing_value is not None:\n        payload = [\n            PropertyDataPatchDatum(\n                operation=PatchOperation.UPDATE,\n                id=existing_id,\n                attribute=\"value\",\n                new_value=property_data.value,\n                old_value=existing_value,\n            )\n        ]\n    else:\n        payload = [\n            PropertyDataPatchDatum(\n                operation=PatchOperation.ADD,\n                id=existing_id,\n                attribute=\"value\",\n                new_value=property_data.value,\n            )\n        ]\n\n    self.session.patch(\n        url=f\"{self.base_path}/{inventory_id}\",\n        json=[x.model_dump(exclude_none=True, by_alias=True, mode=\"json\") for x in payload],\n    )\n    return self.get_properties_on_inventory(inventory_id=inventory_id)\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.get_task_block_properties","title":"get_task_block_properties","text":"<pre><code>get_task_block_properties(\n    *,\n    inventory_id: InventoryId,\n    task_id: TaskId,\n    block_id: BlockId,\n    lot_id: LotId | None = None,\n) -&gt; TaskPropertyData\n</code></pre> <p>Returns all the properties within a Property Task block for a specific inventory item.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_id</code> <code>InventoryId</code> <p>The ID of the inventory.</p> required <code>task_id</code> <code>TaskId</code> <p>The Property task ID.</p> required <code>block_id</code> <code>BlockId</code> <p>The Block ID of the block to retrieve properties for.</p> required <code>lot_id</code> <code>LotId | None</code> <p>The specific Lot of the inventory Item to retrieve lots for, by default None</p> <code>None</code> <p>Returns:</p> Type Description <code>TaskPropertyData</code> <p>The properties of the inventory item within the block.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef get_task_block_properties(\n    self,\n    *,\n    inventory_id: InventoryId,\n    task_id: TaskId,\n    block_id: BlockId,\n    lot_id: LotId | None = None,\n) -&gt; TaskPropertyData:\n    \"\"\"Returns all the properties within a Property Task block for a specific inventory item.\n\n    Parameters\n    ----------\n    inventory_id : InventoryId\n        The ID of the inventory.\n    task_id : TaskId\n        The Property task ID.\n    block_id : BlockId\n        The Block ID of the block to retrieve properties for.\n    lot_id : LotId | None, optional\n        The specific Lot of the inventory Item to retrieve lots for, by default None\n\n    Returns\n    -------\n    TaskPropertyData\n        The properties of the inventory item within the block.\n    \"\"\"\n    params = {\n        \"entity\": \"task\",\n        \"blockId\": block_id,\n        \"id\": task_id,\n        \"inventoryId\": inventory_id,\n        \"lotId\": lot_id,\n    }\n    params = {k: v for k, v in params.items() if v is not None}\n\n    response = self.session.get(url=self.base_path, params=params)\n    response_json = response.json()\n    return TaskPropertyData(**response_json[0])\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.check_for_task_data","title":"check_for_task_data","text":"<pre><code>check_for_task_data(\n    *, task_id: TaskId\n) -&gt; list[CheckPropertyData]\n</code></pre> <p>Checks if a task has data.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>TaskId</code> <p>The ID of the task to check for data.</p> required <p>Returns:</p> Type Description <code>list[CheckPropertyData]</code> <p>A list of CheckPropertyData objects representing the data status of each block + inventory item of the task.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef check_for_task_data(self, *, task_id: TaskId) -&gt; list[CheckPropertyData]:\n    \"\"\"Checks if a task has data.\n\n    Parameters\n    ----------\n    task_id : TaskId\n        The ID of the task to check for data.\n\n    Returns\n    -------\n    list[CheckPropertyData]\n        A list of CheckPropertyData objects representing the data status of each block + inventory item of the task.\n    \"\"\"\n    task_info = self._get_task_from_id(id=task_id)\n\n    params = {\n        \"entity\": \"block\",\n        \"action\": \"checkdata\",\n        \"parentId\": task_id,\n        \"id\": [x.id for x in task_info.blocks],\n    }\n\n    response = self.session.get(url=self.base_path, params=params)\n    return [CheckPropertyData(**x) for x in response.json()]\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.check_block_interval_for_data","title":"check_block_interval_for_data","text":"<pre><code>check_block_interval_for_data(\n    *,\n    block_id: BlockId,\n    task_id: TaskId,\n    interval_id: IntervalId,\n) -&gt; CheckPropertyData\n</code></pre> <p>Check if a specific block interval has data.</p> <p>Parameters:</p> Name Type Description Default <code>block_id</code> <code>BlockId</code> <p>The ID of the block.</p> required <code>task_id</code> <code>TaskId</code> <p>The ID of the task.</p> required <code>interval_id</code> <code>IntervalId</code> <p>The ID of the interval.</p> required <p>Returns:</p> Type Description <code>CheckPropertyData</code> <p>description</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef check_block_interval_for_data(\n    self, *, block_id: BlockId, task_id: TaskId, interval_id: IntervalId\n) -&gt; CheckPropertyData:\n    \"\"\"Check if a specific block interval has data.\n\n    Parameters\n    ----------\n    block_id : BlockId\n        The ID of the block.\n    task_id : TaskId\n        The ID of the task.\n    interval_id : IntervalId\n        The ID of the interval.\n\n    Returns\n    -------\n    CheckPropertyData\n        _description_\n    \"\"\"\n    params = {\n        \"entity\": \"block\",\n        \"action\": \"checkdata\",\n        \"id\": block_id,\n        \"parentId\": task_id,\n        \"intervalId\": interval_id,\n    }\n\n    response = self.session.get(url=self.base_path, params=params)\n    return CheckPropertyData(response.json())\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.get_all_task_properties","title":"get_all_task_properties","text":"<pre><code>get_all_task_properties(\n    *, task_id: TaskId\n) -&gt; list[TaskPropertyData]\n</code></pre> <p>Returns all the properties for a specific task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>TaskId</code> <p>The ID of the task to retrieve properties for.</p> required <p>Returns:</p> Type Description <code>list[TaskPropertyData]</code> <p>A list of TaskPropertyData objects representing the properties within the task.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef get_all_task_properties(self, *, task_id: TaskId) -&gt; list[TaskPropertyData]:\n    \"\"\"Returns all the properties for a specific task.\n\n    Parameters\n    ----------\n    task_id : TaskId\n        The ID of the task to retrieve properties for.\n\n    Returns\n    -------\n    list[TaskPropertyData]\n        A list of TaskPropertyData objects representing the properties within the task.\n    \"\"\"\n    all_info = []\n    task_data_info = self.check_for_task_data(task_id=task_id)\n    for combo_info in task_data_info:\n        all_info.append(\n            self.get_task_block_properties(\n                inventory_id=combo_info.inventory_id,\n                task_id=task_id,\n                block_id=combo_info.block_id,\n                lot_id=combo_info.lot_id,\n            )\n        )\n\n    return all_info\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.update_property_on_task","title":"update_property_on_task","text":"<pre><code>update_property_on_task(\n    *,\n    task_id: TaskId,\n    patch_payload: list[PropertyDataPatchDatum],\n) -&gt; list[TaskPropertyData]\n</code></pre> <p>Updates a specific property on a task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>TaskId</code> <p>The ID of the task.</p> required <code>patch_payload</code> <code>list[PropertyDataPatchDatum]</code> <p>The specific patch to make to update the property.</p> required <p>Returns:</p> Type Description <code>list[TaskPropertyData]</code> <p>A list of TaskPropertyData objects representing the properties within the task.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef update_property_on_task(\n    self, *, task_id: TaskId, patch_payload: list[PropertyDataPatchDatum]\n) -&gt; list[TaskPropertyData]:\n    \"\"\"Updates a specific property on a task.\n\n    Parameters\n    ----------\n    task_id : TaskId\n        The ID of the task.\n    patch_payload : list[PropertyDataPatchDatum]\n        The specific patch to make to update the property.\n\n    Returns\n    -------\n    list[TaskPropertyData]\n        A list of TaskPropertyData objects representing the properties within the task.\n    \"\"\"\n    if len(patch_payload) &gt; 0:\n        self.session.patch(\n            url=f\"{self.base_path}/{task_id}\",\n            json=[\n                x.model_dump(exclude_none=True, by_alias=True, mode=\"json\")\n                for x in patch_payload\n            ],\n        )\n    return self.get_all_task_properties(task_id=task_id)\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.add_properties_to_task","title":"add_properties_to_task","text":"<pre><code>add_properties_to_task(\n    *,\n    inventory_id: InventoryId,\n    task_id: TaskId,\n    block_id: BlockId,\n    lot_id: LotId | None = None,\n    properties: list[TaskPropertyCreate],\n)\n</code></pre> <p>Add new task properties for a given task.</p> <p>This method only works for new values. If a trial number is provided in the TaskPropertyCreate, it must relate to an existing trial. New trials must be added with no trial number provided. Do not try to create multiple new trials in one call as this will lead to unexpected behavior. Build out new trials in a loop if many new trials are needed.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_id</code> <code>InventoryId</code> <p>The ID of the inventory.</p> required <code>task_id</code> <code>TaskId</code> <p>The ID of the task.</p> required <code>block_id</code> <code>BlockId</code> <p>The ID of the block.</p> required <code>lot_id</code> <code>LotId</code> <p>The ID of the lot, by default None.</p> <code>None</code> <code>properties</code> <code>list[TaskPropertyCreate]</code> <p>A list of TaskPropertyCreate objects representing the properties to add.</p> required <p>Returns:</p> Type Description <code>list[TaskPropertyData]</code> <p>The newly created task properties.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef add_properties_to_task(\n    self,\n    *,\n    inventory_id: InventoryId,\n    task_id: TaskId,\n    block_id: BlockId,\n    lot_id: LotId | None = None,\n    properties: list[TaskPropertyCreate],\n):\n    \"\"\"\n    Add new task properties for a given task.\n\n    This method only works for new values. If a trial number is provided in the TaskPropertyCreate,\n    it must relate to an existing trial. New trials must be added with no trial number provided.\n    Do not try to create multiple new trials in one call as this will lead to unexpected behavior.\n    Build out new trials in a loop if many new trials are needed.\n\n    Parameters\n    ----------\n    inventory_id : InventoryId\n        The ID of the inventory.\n    task_id : TaskId\n        The ID of the task.\n    block_id : BlockId\n        The ID of the block.\n    lot_id : LotId, optional\n        The ID of the lot, by default None.\n    properties : list[TaskPropertyCreate]\n        A list of TaskPropertyCreate objects representing the properties to add.\n\n    Returns\n    -------\n    list[TaskPropertyData]\n        The newly created task properties.\n    \"\"\"\n    params = {\n        \"blockId\": block_id,\n        \"inventoryId\": inventory_id,\n        \"lotId\": lot_id,\n        \"autoCalculate\": \"true\",\n        \"history\": \"true\",\n    }\n    params = {k: v for k, v in params.items() if v is not None}\n    response = self.session.post(\n        url=f\"{self.base_path}/{task_id}\",\n        json=[x.model_dump(exclude_none=True, by_alias=True, mode=\"json\") for x in properties],\n        params=params,\n    )\n\n    registered_properties = [\n        TaskPropertyCreate(**x) for x in response.json() if \"DataTemplate\" in x\n    ]\n    existing_data_rows = self.get_task_block_properties(\n        inventory_id=inventory_id, task_id=task_id, block_id=block_id, lot_id=lot_id\n    )\n    patches = self._form_calculated_task_property_patches(\n        existing_data_rows=existing_data_rows, properties=registered_properties\n    )\n    if len(patches) &gt; 0:\n        return self.update_property_on_task(task_id=task_id, patch_payload=patches)\n    else:\n        return self.get_all_task_properties(task_id=task_id)\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.update_or_create_task_properties","title":"update_or_create_task_properties","text":"<pre><code>update_or_create_task_properties(\n    *,\n    inventory_id: InventoryId,\n    task_id: TaskId,\n    block_id: BlockId,\n    lot_id: LotId | None = None,\n    properties: list[TaskPropertyCreate],\n) -&gt; list[TaskPropertyData]\n</code></pre> <p>Update or create task properties for a given task.</p> <p>If a trial number is provided in the TaskPropertyCreate, it must relate to an existing trial. New trials must be added with no trial number provided. Do not try to create multiple new trials in one call as this will lead to unexpected behavior. Build out new trials in a loop if many new trials are needed.</p> <p>Parameters:</p> Name Type Description Default <code>inventory_id</code> <code>InventoryId</code> <p>The ID of the inventory.</p> required <code>task_id</code> <code>TaskId</code> <p>The ID of the task.</p> required <code>block_id</code> <code>BlockId</code> <p>The ID of the block.</p> required <code>lot_id</code> <code>LotId</code> <p>The ID of the lot, by default None.</p> <code>None</code> <code>properties</code> <code>list[TaskPropertyCreate]</code> <p>A list of TaskPropertyCreate objects representing the properties to update or create.</p> required <p>Returns:</p> Type Description <code>list[TaskPropertyData]</code> <p>The updated or newly created task properties.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef update_or_create_task_properties(\n    self,\n    *,\n    inventory_id: InventoryId,\n    task_id: TaskId,\n    block_id: BlockId,\n    lot_id: LotId | None = None,\n    properties: list[TaskPropertyCreate],\n) -&gt; list[TaskPropertyData]:\n    \"\"\"\n    Update or create task properties for a given task.\n\n    If a trial number is provided in the TaskPropertyCreate, it must relate to an existing trial.\n    New trials must be added with no trial number provided. Do not try to create multiple new trials\n    in one call as this will lead to unexpected behavior. Build out new trials in a loop if many new\n    trials are needed.\n\n    Parameters\n    ----------\n    inventory_id : InventoryId\n        The ID of the inventory.\n    task_id : TaskId\n        The ID of the task.\n    block_id : BlockId\n        The ID of the block.\n    lot_id : LotId, optional\n        The ID of the lot, by default None.\n    properties : list[TaskPropertyCreate]\n        A list of TaskPropertyCreate objects representing the properties to update or create.\n\n    Returns\n    -------\n    list[TaskPropertyData]\n        The updated or newly created task properties.\n\n    \"\"\"\n    existing_data_rows = self.get_task_block_properties(\n        inventory_id=inventory_id, task_id=task_id, block_id=block_id, lot_id=lot_id\n    )\n    update_patches, new_values = self._form_existing_row_value_patches(\n        existing_data_rows=existing_data_rows, properties=properties\n    )\n\n    calculated_patches = self._form_calculated_task_property_patches(\n        existing_data_rows=existing_data_rows, properties=properties\n    )\n    all_patches = update_patches + calculated_patches\n    if len(new_values) &gt; 0:\n        self.update_property_on_task(task_id=task_id, patch_payload=all_patches)\n        return self.add_properties_to_task(\n            inventory_id=inventory_id,\n            task_id=task_id,\n            block_id=block_id,\n            lot_id=lot_id,\n            properties=new_values,\n        )\n    else:\n        return self.update_property_on_task(task_id=task_id, patch_payload=all_patches)\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.bulk_load_task_properties","title":"bulk_load_task_properties","text":"<pre><code>bulk_load_task_properties(\n    *,\n    inventory_id: InventoryId,\n    task_id: TaskId,\n    block_id: BlockId,\n    property_data: BulkPropertyData,\n    interval=\"default\",\n    lot_id: LotId = None,\n) -&gt; list[TaskPropertyData]\n</code></pre> <p>Bulk load task properties for a given task. WARNING: This will overwrite any existing properties! BulkPropertyData column names must exactly match the names of the data columns (Case Sensitive).</p> <p>Parameters:</p> Name Type Description Default <code>inventory_id</code> <code>InventoryId</code> <p>The ID of the inventory.</p> required <code>task_id</code> <code>TaskId</code> <p>The ID of the task.</p> required <code>block_id</code> <code>BlockId</code> <p>The ID of the block.</p> required <code>lot_id</code> <code>LotId</code> <p>The ID of the lot, by default None.</p> <code>None</code> <code>interval</code> <code>str</code> <p>The interval to use for the properties, by default \"default\". Can be obtained using Workflow.get_interval_id().</p> <code>'default'</code> <code>property_data</code> <code>BulkPropertyData</code> <p>A list of columnwise data containing all your rows of data for a single interval. Can be created using BulkPropertyData.from_dataframe().</p> required <p>Returns:</p> Type Description <code>list[TaskPropertyData]</code> <p>The updated or newly created task properties.</p> Example <pre><code>from albert.resources.property_data import BulkPropertyData\n\ndata = BulkPropertyData.from_dataframe(df=my_dataframe)\nres = client.property_data.bulk_load_task_properties(\n    block_id=\"BLK1\",\n    inventory_id=\"INVEXP102748-042\",\n    property_data=data,\n    task_id=\"TASFOR291760\",\n)\n\n[TaskPropertyData(id=\"TASFOR291760\", ...)]\n</code></pre> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>def bulk_load_task_properties(\n    self,\n    *,\n    inventory_id: InventoryId,\n    task_id: TaskId,\n    block_id: BlockId,\n    property_data: BulkPropertyData,\n    interval=\"default\",\n    lot_id: LotId = None,\n) -&gt; list[TaskPropertyData]:\n    \"\"\"\n    Bulk load task properties for a given task. WARNING: This will overwrite any existing properties!\n    BulkPropertyData column names must exactly match the names of the data columns (Case Sensitive).\n\n    Parameters\n    ----------\n    inventory_id : InventoryId\n        The ID of the inventory.\n    task_id : TaskId\n        The ID of the task.\n    block_id : BlockId\n        The ID of the block.\n    lot_id : LotId, optional\n        The ID of the lot, by default None.\n    interval : str, optional\n        The interval to use for the properties, by default \"default\". Can be obtained using Workflow.get_interval_id().\n    property_data : BulkPropertyData\n        A list of columnwise data containing all your rows of data for a single interval. Can be created using BulkPropertyData.from_dataframe().\n\n    Returns\n    -------\n    list[TaskPropertyData]\n        The updated or newly created task properties.\n\n    Example\n    -------\n\n    ```python\n    from albert.resources.property_data import BulkPropertyData\n\n    data = BulkPropertyData.from_dataframe(df=my_dataframe)\n    res = client.property_data.bulk_load_task_properties(\n        block_id=\"BLK1\",\n        inventory_id=\"INVEXP102748-042\",\n        property_data=data,\n        task_id=\"TASFOR291760\",\n    )\n\n    [TaskPropertyData(id=\"TASFOR291760\", ...)]\n    ```\n    \"\"\"\n    property_df = pd.DataFrame(\n        {x.data_column_name: x.data_series for x in property_data.columns}\n    )\n\n    def _get_column_map(dataframe: pd.DataFrame, property_data: TaskPropertyData):\n        data_col_info = property_data.data[0].trials[0].data_columns  # PropertyValue\n        column_map = {}\n        for col in dataframe.columns:\n            column = [x for x in data_col_info if x.name == col]\n            if len(column) == 1:\n                column_map[col] = column[0]\n            else:\n                raise ValueError(\n                    f\"Column '{col}' not found in block data columns or multiple matches found.\"\n                )\n        return column_map\n\n    def _df_to_task_prop_create_list(\n        dataframe: pd.DataFrame,\n        column_map: dict[str, PropertyValue],\n        data_template_id: DataTemplateId,\n    ) -&gt; list[TaskPropertyCreate]:\n        task_prop_create_list = []\n        for i, row in dataframe.iterrows():\n            for col_name, col_info in column_map.items():\n                if col_name not in dataframe.columns:\n                    raise ValueError(f\"Column '{col_name}' not found in DataFrame.\")\n\n                task_prop_create = TaskPropertyCreate(\n                    data_column=TaskDataColumn(\n                        data_column_id=col_info.id,\n                        column_sequence=col_info.sequence,\n                    ),\n                    value=str(row[col_name]),\n                    visible_trial_number=i + 1,\n                    interval_combination=interval,\n                    data_template=EntityLink(id=data_template_id),\n                )\n                task_prop_create_list.append(task_prop_create)\n        return task_prop_create_list\n\n    task_prop_data = self.get_task_block_properties(\n        inventory_id=inventory_id, task_id=task_id, block_id=block_id, lot_id=lot_id\n    )\n    column_map = _get_column_map(property_df, task_prop_data)\n    all_task_prop_create = _df_to_task_prop_create_list(\n        dataframe=property_df,\n        column_map=column_map,\n        data_template_id=task_prop_data.data_template.id,\n    )\n    with suppress(NotFoundError):\n        # This is expected if the task is new and has no data yet.\n        self.bulk_delete_task_data(\n            task_id=task_id,\n            block_id=block_id,\n            inventory_id=inventory_id,\n            lot_id=lot_id,\n            interval_id=interval,\n        )\n    return self.add_properties_to_task(\n        inventory_id=inventory_id,\n        task_id=task_id,\n        block_id=block_id,\n        lot_id=lot_id,\n        properties=all_task_prop_create,\n    )\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.bulk_delete_task_data","title":"bulk_delete_task_data","text":"<pre><code>bulk_delete_task_data(\n    *,\n    task_id: TaskId,\n    block_id: BlockId,\n    inventory_id: InventoryId,\n    lot_id: LotId | None = None,\n    interval_id=None,\n) -&gt; None\n</code></pre> <p>Bulk delete task data for a given task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>TaskId</code> <p>The ID of the task.</p> required <code>block_id</code> <code>BlockId</code> <p>The ID of the block.</p> required <code>inventory_id</code> <code>InventoryId</code> <p>The ID of the inventory.</p> required <code>lot_id</code> <code>LotId</code> <p>The ID of the lot, by default None.</p> <code>None</code> <code>interval_id</code> <code>IntervalId</code> <p>The ID of the interval, by default None. If provided, will delete data for this specific interval.</p> <code>None</code> <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>def bulk_delete_task_data(\n    self,\n    *,\n    task_id: TaskId,\n    block_id: BlockId,\n    inventory_id: InventoryId,\n    lot_id: LotId | None = None,\n    interval_id=None,\n) -&gt; None:\n    \"\"\"\n    Bulk delete task data for a given task.\n\n    Parameters\n    ----------\n    task_id : TaskId\n        The ID of the task.\n    block_id : BlockId\n        The ID of the block.\n    inventory_id : InventoryId\n        The ID of the inventory.\n    lot_id : LotId, optional\n        The ID of the lot, by default None.\n    interval_id : IntervalId, optional\n        The ID of the interval, by default None. If provided, will delete data for this specific interval.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    params = {\n        \"inventoryId\": inventory_id,\n        \"blockId\": block_id,\n        \"lotId\": lot_id,\n        \"intervalRow\": interval_id if interval_id != \"default\" else None,\n    }\n    params = {k: v for k, v in params.items() if v is not None}\n    self.session.delete(f\"{self.base_path}/{task_id}\", params=params)\n</code></pre>"},{"location":"collections/property_data/#albert.collections.property_data.PropertyDataCollection.search","title":"search","text":"<pre><code>search(\n    *,\n    limit: int = 100,\n    result: str | None = None,\n    text: str | None = None,\n    order: OrderBy | None = None,\n    sort_by: str | None = None,\n    inventory_ids: list[SearchInventoryId]\n    | SearchInventoryId\n    | None = None,\n    project_ids: list[SearchProjectId]\n    | SearchProjectId\n    | None = None,\n    lot_ids: list[LotId] | LotId | None = None,\n    data_template_ids: DataTemplateId\n    | list[DataTemplateId]\n    | None = None,\n    data_column_ids: DataColumnId\n    | list[DataColumnId]\n    | None = None,\n    category: list[DataEntity] | DataEntity | None = None,\n    data_templates: list[str] | str | None = None,\n    data_columns: list[str] | str | None = None,\n    parameters: list[str] | str | None = None,\n    parameter_group: list[str] | str | None = None,\n    unit: list[str] | str | None = None,\n    created_by: list[UserId] | UserId | None = None,\n    task_created_by: list[UserId] | UserId | None = None,\n    return_fields: list[str] | str | None = None,\n    return_facets: list[str] | str | None = None,\n) -&gt; Iterator[PropertyDataSearchItem]\n</code></pre> <p>Search for property data with various filtering options.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>Maximum number of results to return.</p> <code>100</code> <code>result</code> <code>str</code> <p>Find results using search syntax. e.g. to find all results with viscosity &lt; 200 at a temperature of 25 we would do result=viscosity(&lt;200)@temperature(25)</p> <code>None</code> <code>text</code> <code>str</code> <p>Free text search across all searchable fields.</p> <code>None</code> <code>order</code> <code>OrderBy</code> <p>Sort order (ascending/descending).</p> <code>None</code> <code>sort_by</code> <code>str</code> <p>Field to sort results by.</p> <code>None</code> <code>inventory_ids</code> <code>SearchInventoryIdType or list of SearchInventoryIdType</code> <p>Filter by inventory IDs.</p> <code>None</code> <code>project_ids</code> <code>ProjectIdType or list of ProjectIdType</code> <p>Filter by project IDs.</p> <code>None</code> <code>lot_ids</code> <code>LotIdType or list of LotIdType</code> <p>Filter by lot IDs.</p> <code>None</code> <code>data_template_ids</code> <code>DataTemplateId or list of DataTemplateId</code> <p>Filter by data template IDs.</p> <code>None</code> <code>data_column_ids</code> <code>DataColumnId | list[DataColumnId] | None</code> <p>Filter by data column IDs.</p> <code>None</code> <code>category</code> <code>DataEntity or list of DataEntity</code> <p>Filter by data entity categories.</p> <code>None</code> <code>data_templates</code> <code>str or list of str (exact match)</code> <p>Filter by data template names.</p> <code>None</code> <code>data_columns</code> <code>str or list of str (exact match)</code> <p>Filter by data column names (currently non-functional).</p> <code>None</code> <code>parameters</code> <code>str or list of str (exact match)</code> <p>Filter by parameter names.</p> <code>None</code> <code>parameter_group</code> <code>str or list of str (exact match)</code> <p>Filter by parameter group names.</p> <code>None</code> <code>unit</code> <code>str or list of str (exact match)</code> <p>Filter by unit names.</p> <code>None</code> <code>created_by</code> <code>UserIdType or list of UserIdType</code> <p>Filter by creator user IDs.</p> <code>None</code> <code>task_created_by</code> <code>UserIdType or list of UserIdType</code> <p>Filter by task creator user IDs.</p> <code>None</code> <code>return_fields</code> <code>str or list of str</code> <p>Specific fields to include in results. If None, returns all fields.</p> <code>None</code> <code>return_facets</code> <code>str or list of str</code> <p>Specific facets to include in results.</p> <code>None</code> <p>Returns:</p> Type Description <code>dict</code> <p>Search results matching the specified criteria.</p> Source code in <code>src/albert/collections/property_data.py</code> <pre><code>@validate_call\ndef search(\n    self,\n    *,\n    limit: int = 100,\n    result: str | None = None,\n    text: str | None = None,\n    # Sorting/pagination\n    order: OrderBy | None = None,\n    sort_by: str | None = None,\n    # Core platform identifiers\n    inventory_ids: list[SearchInventoryId] | SearchInventoryId | None = None,\n    project_ids: list[SearchProjectId] | SearchProjectId | None = None,\n    lot_ids: list[LotId] | LotId | None = None,\n    data_template_ids: DataTemplateId | list[DataTemplateId] | None = None,\n    data_column_ids: DataColumnId | list[DataColumnId] | None = None,\n    # Data structure filters\n    category: list[DataEntity] | DataEntity | None = None,\n    data_templates: list[str] | str | None = None,\n    data_columns: list[str] | str | None = None,\n    # Data content filters\n    parameters: list[str] | str | None = None,\n    parameter_group: list[str] | str | None = None,\n    unit: list[str] | str | None = None,\n    # User filters\n    created_by: list[UserId] | UserId | None = None,\n    task_created_by: list[UserId] | UserId | None = None,\n    # Response customization\n    return_fields: list[str] | str | None = None,\n    return_facets: list[str] | str | None = None,\n) -&gt; Iterator[PropertyDataSearchItem]:\n    \"\"\"Search for property data with various filtering options.\n\n    Parameters\n    ----------\n    limit : int, default=100\n        Maximum number of results to return.\n    result : str, optional\n        Find results using search syntax. e.g. to find all results with viscosity &lt; 200 at a temperature of 25 we would do\n        result=viscosity(&lt;200)@temperature(25)\n    text : str, optional\n        Free text search across all searchable fields.\n    order : OrderBy, optional\n        Sort order (ascending/descending).\n    sort_by : str, optional\n        Field to sort results by.\n    inventory_ids : SearchInventoryIdType or list of SearchInventoryIdType, optional\n        Filter by inventory IDs.\n    project_ids : ProjectIdType or list of ProjectIdType, optional\n        Filter by project IDs.\n    lot_ids : LotIdType or list of LotIdType, optional\n        Filter by lot IDs.\n    data_template_ids : DataTemplateId or list of DataTemplateId, optional\n        Filter by data template IDs.\n    data_column_ids: DataColumnId or list of DataColumnId, optional\n        Filter by data column IDs.\n    category : DataEntity or list of DataEntity, optional\n        Filter by data entity categories.\n    data_templates : str or list of str (exact match), optional\n        Filter by data template names.\n    data_columns : str or list of str (exact match), optional\n        Filter by data column names (currently non-functional).\n    parameters : str or list of str (exact match), optional\n        Filter by parameter names.\n    parameter_group : str or list of str (exact match), optional\n        Filter by parameter group names.\n    unit : str or list of str (exact match), optional\n        Filter by unit names.\n    created_by : UserIdType or list of UserIdType, optional\n        Filter by creator user IDs.\n    task_created_by : UserIdType or list of UserIdType, optional\n        Filter by task creator user IDs.\n    return_fields : str or list of str, optional\n        Specific fields to include in results. If None, returns all fields.\n    return_facets : str or list of str, optional\n        Specific facets to include in results.\n\n    Returns\n    -------\n    dict\n        Search results matching the specified criteria.\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; list[PropertyDataSearchItem]:\n        return [PropertyDataSearchItem.model_validate(x) for x in items]\n\n    if isinstance(inventory_ids, str):\n        inventory_ids = [inventory_ids]\n    if isinstance(project_ids, str):\n        project_ids = [project_ids]\n    if isinstance(lot_ids, str):\n        lot_ids = [lot_ids]\n    if isinstance(data_template_ids, str):\n        data_template_ids = [data_template_ids]\n    if isinstance(data_column_ids, str):\n        data_column_ids = [data_column_ids]\n    if isinstance(category, DataEntity):\n        category = [category]\n    if isinstance(data_templates, str):\n        data_templates = [data_templates]\n    if isinstance(data_columns, str):\n        data_columns = [data_columns]\n    if isinstance(parameters, str):\n        parameters = [parameters]\n    if isinstance(parameter_group, str):\n        parameter_group = [parameter_group]\n    if isinstance(unit, str):\n        unit = [unit]\n    if isinstance(created_by, str):\n        created_by = [created_by]\n    if isinstance(task_created_by, str):\n        task_created_by = [task_created_by]\n    if isinstance(return_fields, str):\n        return_fields = [return_fields]\n    if isinstance(return_facets, str):\n        return_facets = [return_facets]\n\n    params = {\n        \"limit\": limit,\n        \"result\": result,\n        \"text\": text,\n        \"order\": order.value if order is not None else None,\n        \"sortBy\": sort_by,\n        \"inventoryIds\": inventory_ids if inventory_ids is not None else None,\n        \"projectIds\": project_ids if project_ids is not None else None,\n        \"lotIds\": lot_ids if lot_ids is not None else None,\n        \"dataTemplateId\": data_template_ids if data_template_ids is not None else None,\n        \"dataColumnId\": data_column_ids if data_column_ids is not None else None,\n        \"category\": [c.value for c in category] if category is not None else None,\n        \"dataTemplates\": data_templates,\n        \"dataColumns\": data_columns,\n        \"parameters\": parameters,\n        \"parameterGroup\": parameter_group,\n        \"unit\": unit,\n        \"createdBy\": created_by if created_by is not None else None,\n        \"taskCreatedBy\": task_created_by if task_created_by is not None else None,\n        \"returnFields\": return_fields,\n        \"returnFacets\": return_facets,\n    }\n\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/search\",\n        params=params,\n        session=self.session,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/reports/","title":"Reports","text":""},{"location":"collections/reports/#albert.collections.reports.ReportCollection","title":"albert.collections.reports.ReportCollection","text":"<pre><code>ReportCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>ReportCollection is a collection class for managing Report entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_datascience_report</code> <p>Get a datascience report by its report type ID.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/reports.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the ReportCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{ReportCollection._api_version}/reports\"\n</code></pre>"},{"location":"collections/reports/#albert.collections.reports.ReportCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/reports'\n</code></pre>"},{"location":"collections/reports/#albert.collections.reports.ReportCollection.get_datascience_report","title":"get_datascience_report","text":"<pre><code>get_datascience_report(\n    *,\n    report_type_id: str,\n    input_data: dict[str, Any] | None = None,\n) -&gt; ReportInfo\n</code></pre> <p>Get a datascience report by its report type ID.</p> <p>Parameters:</p> Name Type Description Default <code>report_type_id</code> <code>str</code> <p>The report type ID for the report.</p> required <code>input_data</code> <code>dict[str, Any] | None</code> <p>Additional input data for generating the report (e.g., project IDs and unique IDs).</p> <code>None</code> <p>Returns:</p> Type Description <code>ReportInfo</code> <p>The info for the report.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; report = client.reports.get_datascience_report(\n...     report_type_id=\"RET51\",\n...     input_data={\n...         \"projectId\": [\"PRO123\"],\n...         \"uniqueId\": [\"DAT123_DAC123\"]\n...     }\n... )\n</code></pre> Source code in <code>src/albert/collections/reports.py</code> <pre><code>def get_datascience_report(\n    self,\n    *,\n    report_type_id: str,\n    input_data: dict[str, Any] | None = None,\n) -&gt; ReportInfo:\n    \"\"\"Get a datascience report by its report type ID.\n\n    Parameters\n    ----------\n    report_type_id : str\n        The report type ID for the report.\n    input_data : dict[str, Any] | None\n        Additional input data for generating the report\n        (e.g., project IDs and unique IDs).\n\n    Returns\n    -------\n    ReportInfo\n        The info for the report.\n\n    Examples\n    --------\n    &gt;&gt;&gt; report = client.reports.get_datascience_report(\n    ...     report_type_id=\"RET51\",\n    ...     input_data={\n    ...         \"projectId\": [\"PRO123\"],\n    ...         \"uniqueId\": [\"DAT123_DAC123\"]\n    ...     }\n    ... )\n    \"\"\"\n    path = f\"{self.base_path}/datascience/{report_type_id}\"\n\n    params = {}\n    input_data = input_data or {}\n    for key, value in input_data.items():\n        params[f\"inputData[{key}]\"] = value\n\n    response = self.session.get(path, params=params)\n    return ReportInfo(**response.json())\n</code></pre>"},{"location":"collections/roles/","title":"Roles","text":""},{"location":"collections/roles/#albert.collections.roles.RoleCollection","title":"albert.collections.roles.RoleCollection","text":"<pre><code>RoleCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>RoleCollection is a collection class for managing Role entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_by_id</code> <p>Retrieve a Role by its ID.</p> <code>create</code> <p>Create a new role.</p> <code>list</code> <p>Lists the available Roles</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/roles.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the RoleCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{RoleCollection._api_version}/acl/roles\"\n</code></pre>"},{"location":"collections/roles/#albert.collections.roles.RoleCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/acl/roles'\n</code></pre>"},{"location":"collections/roles/#albert.collections.roles.RoleCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Role\n</code></pre> <p>Retrieve a Role by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the role.</p> required <p>Returns:</p> Type Description <code>Role</code> <p>The retrieved role.</p> Source code in <code>src/albert/collections/roles.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Role:\n    \"\"\"\n    Retrieve a Role by its ID.\n    Parameters\n    ----------\n    id : str\n        The ID of the role.\n    Returns\n    -------\n    Role\n        The retrieved role.\n    \"\"\"\n    # role IDs have # symbols\n    url = urllib.parse.quote(f\"{self.base_path}/{id}\")\n    response = self.session.get(url=url)\n    return Role(**response.json())\n</code></pre>"},{"location":"collections/roles/#albert.collections.roles.RoleCollection.create","title":"create","text":"<pre><code>create(*, role: Role)\n</code></pre> <p>Create a new role.</p> <p>Parameters:</p> Name Type Description Default <code>role</code> <code>Role</code> <p>The role to create.</p> required Source code in <code>src/albert/collections/roles.py</code> <pre><code>def create(self, *, role: Role):\n    \"\"\"\n    Create a new role.\n    Parameters\n    ----------\n    role : Role\n        The role to create.\n    \"\"\"\n    response = self.session.post(\n        self.base_path,\n        json=role.model_dump(by_alias=True, exclude_none=True, mode=\"json\"),\n    )\n    return Role(**response.json())\n</code></pre>"},{"location":"collections/roles/#albert.collections.roles.RoleCollection.list","title":"list","text":"<pre><code>list(*, params: dict | None = None) -&gt; list[Role]\n</code></pre> <p>Lists the available Roles</p> <p>Parameters:</p> Name Type Description Default <code>params</code> <code>dict</code> <p>description, by default {}</p> <code>None</code> <p>Returns:</p> Type Description <code>List</code> <p>List of available Roles</p> Source code in <code>src/albert/collections/roles.py</code> <pre><code>def list(self, *, params: dict | None = None) -&gt; list[Role]:\n    \"\"\"Lists the available Roles\n\n    Parameters\n    ----------\n    params : dict, optional\n        _description_, by default {}\n\n    Returns\n    -------\n    List\n        List of available Roles\n    \"\"\"\n    if params is None:\n        params = {}\n    response = self.session.get(self.base_path, params=params)\n    role_data = response.json().get(\"Items\", [])\n    return [Role(**r) for r in role_data]\n</code></pre>"},{"location":"collections/storage_locations/","title":"Storage Locations","text":""},{"location":"collections/storage_locations/#albert.collections.storage_locations.StorageLocationsCollection","title":"albert.collections.storage_locations.StorageLocationsCollection","text":"<pre><code>StorageLocationsCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>StorageLocationsCollection is a collection class for managing StorageLoction entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert Session information</p> required <p>Methods:</p> Name Description <code>get_by_id</code> <p>Get a storage location by its ID.</p> <code>list</code> <p>List storage locations with optional filtering.</p> <code>create</code> <p>Create a new storage location.</p> <code>delete</code> <p>Delete a storage location by its ID.</p> <code>update</code> <p>Update a storage location.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/storage_locations.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"Initialize the StorageLocationsCollection.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert Session information\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{StorageLocationsCollection._api_version}/storagelocations\"\n</code></pre>"},{"location":"collections/storage_locations/#albert.collections.storage_locations.StorageLocationsCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/storagelocations'\n</code></pre>"},{"location":"collections/storage_locations/#albert.collections.storage_locations.StorageLocationsCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; StorageLocation\n</code></pre> <p>Get a storage location by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the storage location to retrieve.</p> required <p>Returns:</p> Type Description <code>StorageLocation</code> <p>The retrieved storage location with the given ID.</p> Source code in <code>src/albert/collections/storage_locations.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; StorageLocation:\n    \"\"\"Get a storage location by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the storage location to retrieve.\n\n    Returns\n    -------\n    StorageLocation\n        The retrieved storage location with the given ID.\n    \"\"\"\n    path = f\"{self.base_path}/{id}\"\n    response = self.session.get(path)\n    return StorageLocation(**response.json())\n</code></pre>"},{"location":"collections/storage_locations/#albert.collections.storage_locations.StorageLocationsCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    name: str | list[str] | None = None,\n    exact_match: bool = False,\n    location: str | Location | None = None,\n    start_key: str | None = None,\n    limit: int = 50,\n) -&gt; Generator[StorageLocation, None, None]\n</code></pre> <p>List storage locations with optional filtering.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | list[str] | None</code> <p>The name or names of the storage locations to filter by, by default None</p> <code>None</code> <code>exact_match</code> <code>bool</code> <p>Whether to perform an exact match on the name, by default False</p> <code>False</code> <code>location</code> <code>str | Location | None</code> <p>The location ID or Location object to filter by, by default None</p> <code>None</code> <p>Yields:</p> Type Description <code>Generator[StorageLocation, None, None]</code> <p>description</p> Source code in <code>src/albert/collections/storage_locations.py</code> <pre><code>def list(\n    self,\n    *,\n    name: str | list[str] | None = None,\n    exact_match: bool = False,\n    location: str | Location | None = None,\n    start_key: str | None = None,\n    limit: int = 50,\n) -&gt; Generator[StorageLocation, None, None]:\n    \"\"\"List storage locations with optional filtering.\n\n    Parameters\n    ----------\n    name : str | list[str] | None, optional\n        The name or names of the storage locations to filter by, by default None\n    exact_match : bool, optional\n        Whether to perform an exact match on the name, by default False\n    location : str | Location | None, optional\n        The location ID or Location object to filter by, by default None\n\n    Yields\n    ------\n    Generator[StorageLocation, None, None]\n        _description_\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; Iterator[StorageLocation]:\n        for x in items:\n            id = x[\"albertId\"]\n            try:\n                yield self.get_by_id(id=id)\n            except AlbertHTTPError as e:\n                logger.warning(f\"Error fetching storage location {id}: {e}\")\n\n    params = {\n        \"limit\": limit,\n        \"locationId\": location.id if isinstance(location, Location | EntityLink) else location,\n        \"startKey\": start_key,\n    }\n    if name:\n        params[\"name\"] = [name] if isinstance(name, str) else name\n        params[\"exactMatch\"] = json.dumps(exact_match)\n\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/storage_locations/#albert.collections.storage_locations.StorageLocationsCollection.create","title":"create","text":"<pre><code>create(\n    *, storage_location: StorageLocation\n) -&gt; StorageLocation\n</code></pre> <p>Create a new storage location.</p> <p>Parameters:</p> Name Type Description Default <code>storage_location</code> <code>StorageLocation</code> <p>The storage location to create.</p> required <p>Returns:</p> Type Description <code>StorageLocation</code> <p>The created storage location.</p> Source code in <code>src/albert/collections/storage_locations.py</code> <pre><code>def create(self, *, storage_location: StorageLocation) -&gt; StorageLocation:\n    \"\"\"Create a new storage location.\n\n    Parameters\n    ----------\n    storage_location : StorageLocation\n        The storage location to create.\n\n    Returns\n    -------\n    StorageLocation\n        The created storage location.\n    \"\"\"\n    matching = self.list(\n        name=storage_location.name, location=storage_location.location, exact_match=True\n    )\n    for m in matching:\n        if m.name.lower() == storage_location.name.lower():\n            logging.warning(\n                f\"Storage location with name {storage_location.name} already exists, returning existing.\"\n            )\n            return m\n\n    path = self.base_path\n    response = self.session.post(\n        path, json=storage_location.model_dump(by_alias=True, exclude_none=True, mode=\"json\")\n    )\n    return StorageLocation(**response.json())\n</code></pre>"},{"location":"collections/storage_locations/#albert.collections.storage_locations.StorageLocationsCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Delete a storage location by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the storage location to delete.</p> required Source code in <code>src/albert/collections/storage_locations.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"Delete a storage location by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the storage location to delete.\n    \"\"\"\n    path = f\"{self.base_path}/{id}\"\n    self.session.delete(path)\n</code></pre>"},{"location":"collections/storage_locations/#albert.collections.storage_locations.StorageLocationsCollection.update","title":"update","text":"<pre><code>update(\n    *, storage_location: StorageLocation\n) -&gt; StorageLocation\n</code></pre> <p>Update a storage location.</p> <p>Parameters:</p> Name Type Description Default <code>storage_location</code> <code>StorageLocation</code> <p>The storage location to update.</p> required <p>Returns:</p> Type Description <code>StorageLocation</code> <p>The updated storage location as returned by the server.</p> Source code in <code>src/albert/collections/storage_locations.py</code> <pre><code>def update(self, *, storage_location: StorageLocation) -&gt; StorageLocation:\n    \"\"\"Update a storage location.\n\n    Parameters\n    ----------\n    storage_location : StorageLocation\n        The storage location to update.\n\n    Returns\n    -------\n    StorageLocation\n        The updated storage location as returned by the server.\n    \"\"\"\n    path = f\"{self.base_path}/{storage_location.id}\"\n    payload = self._generate_patch_payload(\n        existing=self.get_by_id(id=storage_location.id),\n        updated=storage_location,\n    )\n    self.session.patch(path, json=payload.model_dump(mode=\"json\", by_alias=True))\n    return self.get_by_id(id=storage_location.id)\n</code></pre>"},{"location":"collections/substances/","title":"Substances","text":""},{"location":"collections/substances/#albert.collections.substance.SubstanceCollection","title":"albert.collections.substance.SubstanceCollection","text":"<pre><code>SubstanceCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>SubstanceCollection is a collection class for managing Substance entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>An instance of the Albert session used for API interactions.</p> required <p>Attributes:</p> Name Type Description <code>base_path</code> <code>str</code> <p>The base URL for making API requests related to substances.</p> <p>Methods:</p> Name Description <code>get_by_ids</code> <p>Retrieves a list of substances by their CAS IDs and optional region.</p> <code>get_by_id</code> <p>Retrieves a single substance by its CAS ID and optional region.</p> Source code in <code>src/albert/collections/substance.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    super().__init__(session=session)\n    self.base_path = f\"/api/{SubstanceCollection._api_version}/substances\"\n</code></pre>"},{"location":"collections/substances/#albert.collections.substance.SubstanceCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/substances'\n</code></pre>"},{"location":"collections/substances/#albert.collections.substance.SubstanceCollection.get_by_ids","title":"get_by_ids","text":"<pre><code>get_by_ids(\n    *,\n    cas_ids: list[str],\n    region: str = \"US\",\n    catch_errors: bool | None = None,\n) -&gt; list[SubstanceInfo]\n</code></pre> <p>Get substances by their CAS IDs.</p> <p>If <code>catch_errors</code> is set to False, the number of substances returned may be less than the number of CAS IDs provided if any of the CAS IDs result in an error.</p> <p>Parameters:</p> Name Type Description Default <code>cas_ids</code> <code>list[str]</code> <p>A list of CAS IDs to retrieve substances for.</p> required <code>region</code> <code>str</code> <p>The region to filter the subastance by, by default \"US\"</p> <code>'US'</code> <code>catch_errors</code> <code>bool</code> <p>Whether to catch errors for unknown CAS, by default True.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[SubstanceInfo]</code> <p>A list of substances with the given CAS IDs.</p> Source code in <code>src/albert/collections/substance.py</code> <pre><code>def get_by_ids(\n    self,\n    *,\n    cas_ids: list[str],\n    region: str = \"US\",\n    catch_errors: bool | None = None,\n) -&gt; list[SubstanceInfo]:\n    \"\"\"Get substances by their CAS IDs.\n\n    If `catch_errors` is set to False, the number of substances returned\n    may be less than the number of CAS IDs provided if any of the CAS IDs result in an error.\n\n    Parameters\n    ----------\n    cas_ids : list[str]\n        A list of CAS IDs to retrieve substances for.\n    region : str, optional\n        The region to filter the subastance by, by default \"US\"\n    catch_errors : bool, optional\n        Whether to catch errors for unknown CAS, by default True.\n\n    Returns\n    -------\n    list[SubstanceInfo]\n        A list of substances with the given CAS IDs.\n    \"\"\"\n    params = {\n        \"casIDs\": \",\".join(cas_ids),\n        \"region\": region,\n        \"catchErrors\": json.dumps(catch_errors) if catch_errors is not None else None,\n    }\n    params = {k: v for k, v in params.items() if v is not None}\n    response = self.session.get(self.base_path, params=params)\n    return SubstanceResponse.model_validate(response.json()).substances\n</code></pre>"},{"location":"collections/substances/#albert.collections.substance.SubstanceCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(\n    *,\n    cas_id: str,\n    region: str = \"US\",\n    catch_errors: bool | None = None,\n) -&gt; SubstanceInfo\n</code></pre> <p>Get a substance by its CAS ID.</p> <p>Parameters:</p> Name Type Description Default <code>cas_id</code> <code>str</code> <p>The CAS ID of the substance to retrieve.</p> required <code>region</code> <code>str</code> <p>The region to filter the substance by, by default \"US\".</p> <code>'US'</code> <code>catch_errors</code> <code>bool</code> <p>Whether to catch errors for unknown CAS, by default False.</p> <code>None</code> <p>Returns:</p> Type Description <code>SubstanceInfo</code> <p>The retrieved substance or raises an error if not found.</p> Source code in <code>src/albert/collections/substance.py</code> <pre><code>def get_by_id(\n    self,\n    *,\n    cas_id: str,\n    region: str = \"US\",\n    catch_errors: bool | None = None,\n) -&gt; SubstanceInfo:\n    \"\"\"\n    Get a substance by its CAS ID.\n\n    Parameters\n    ----------\n    cas_id : str\n        The CAS ID of the substance to retrieve.\n    region : str, optional\n        The region to filter the substance by, by default \"US\".\n    catch_errors : bool, optional\n        Whether to catch errors for unknown CAS, by default False.\n\n    Returns\n    -------\n    SubstanceInfo\n        The retrieved substance or raises an error if not found.\n    \"\"\"\n    return self.get_by_ids(cas_ids=[cas_id], region=region, catch_errors=catch_errors)[0]\n</code></pre>"},{"location":"collections/tags/","title":"Tags","text":""},{"location":"collections/tags/#albert.collections.tags.TagCollection","title":"albert.collections.tags.TagCollection","text":"<pre><code>TagCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>TagCollection is a collection class for managing Tag entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Attributes:</p> Name Type Description <code>base_path</code> <code>str</code> <p>The base URL for tag API requests.</p> <p>Methods:</p> Name Description <code>list</code> <p>Lists tag entities with optional filters.</p> <code>tag_exists</code> <p>Checks if a tag exists by its name.</p> <code>create</code> <p>Creates a new tag entity.</p> <code>get_by_id</code> <p>Retrieves a tag by its ID.</p> <code>get_by_ids</code> <p>Retrieve a list of tags by their IDs.</p> <code>get_by_tag</code> <p>Retrieves a tag by its name.</p> <code>delete</code> <p>Deletes a tag by its ID.</p> <code>rename</code> <p>Renames an existing tag entity.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required Source code in <code>src/albert/collections/tags.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the TagCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{TagCollection._api_version}/tags\"\n</code></pre>"},{"location":"collections/tags/#albert.collections.tags.TagCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/tags'\n</code></pre>"},{"location":"collections/tags/#albert.collections.tags.TagCollection.tag_exists","title":"tag_exists","text":"<pre><code>tag_exists(*, tag: str, exact_match: bool = True) -&gt; bool\n</code></pre> <p>Checks if a tag exists by its name.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>str</code> <p>The name of the tag to check.</p> required <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default True.</p> <code>True</code> <p>Returns:</p> Type Description <code>bool</code> <p>True if the tag exists, False otherwise.</p> Source code in <code>src/albert/collections/tags.py</code> <pre><code>def tag_exists(self, *, tag: str, exact_match: bool = True) -&gt; bool:\n    \"\"\"\n    Checks if a tag exists by its name.\n\n    Parameters\n    ----------\n    tag : str\n        The name of the tag to check.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default True.\n\n    Returns\n    -------\n    bool\n        True if the tag exists, False otherwise.\n    \"\"\"\n\n    return self.get_by_tag(tag=tag, exact_match=exact_match) is not None\n</code></pre>"},{"location":"collections/tags/#albert.collections.tags.TagCollection.create","title":"create","text":"<pre><code>create(*, tag: str | Tag) -&gt; Tag\n</code></pre> <p>Creates a new tag entity if the given tag does not exist.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>Union[str, Tag]</code> <p>The tag name or Tag object to create.</p> required <p>Returns:</p> Type Description <code>Tag</code> <p>The created Tag object or the existing Tag object of it already exists.</p> Source code in <code>src/albert/collections/tags.py</code> <pre><code>def create(self, *, tag: str | Tag) -&gt; Tag:\n    \"\"\"\n    Creates a new tag entity if the given tag does not exist.\n\n    Parameters\n    ----------\n    tag : Union[str, Tag]\n        The tag name or Tag object to create.\n\n    Returns\n    -------\n    Tag\n        The created Tag object or the existing Tag object of it already exists.\n    \"\"\"\n    if isinstance(tag, str):\n        tag = Tag(tag=tag)\n    hit = self.get_by_tag(tag=tag.tag, exact_match=True)\n    if hit is not None:\n        logging.warning(f\"Tag {hit.tag} already exists with id {hit.id}\")\n        return hit\n    payload = {\"name\": tag.tag}\n    response = self.session.post(self.base_path, json=payload)\n    tag = Tag(**response.json())\n    return tag\n</code></pre>"},{"location":"collections/tags/#albert.collections.tags.TagCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Tag\n</code></pre> <p>Get a tag by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the tag to get.</p> required <p>Returns:</p> Type Description <code>Tag</code> <p>The Tag object.</p> Source code in <code>src/albert/collections/tags.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Tag:\n    \"\"\"\n    Get a tag by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the tag to get.\n\n    Returns\n    -------\n    Tag\n        The Tag object.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    return Tag(**response.json())\n</code></pre>"},{"location":"collections/tags/#albert.collections.tags.TagCollection.get_by_ids","title":"get_by_ids","text":"<pre><code>get_by_ids(*, ids: list[str]) -&gt; list[Tag]\n</code></pre> Source code in <code>src/albert/collections/tags.py</code> <pre><code>def get_by_ids(self, *, ids: list[str]) -&gt; list[Tag]:\n    url = f\"{self.base_path}/ids\"\n    batches = [ids[i : i + 100] for i in range(0, len(ids), 100)]\n    return [\n        Tag(**item)\n        for batch in batches\n        for item in self.session.get(url, params={\"id\": batch}).json()\n    ]\n</code></pre>"},{"location":"collections/tags/#albert.collections.tags.TagCollection.get_by_tag","title":"get_by_tag","text":"<pre><code>get_by_tag(\n    *, tag: str, exact_match: bool = True\n) -&gt; Tag | None\n</code></pre> <p>Retrieves a tag by its name of None if not found.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>str</code> <p>The name of the tag to retrieve.</p> required <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default True.</p> <code>True</code> <p>Returns:</p> Type Description <code>Tag</code> <p>The Tag object if found, None otherwise.</p> Source code in <code>src/albert/collections/tags.py</code> <pre><code>def get_by_tag(self, *, tag: str, exact_match: bool = True) -&gt; Tag | None:\n    \"\"\"\n    Retrieves a tag by its name of None if not found.\n\n    Parameters\n    ----------\n    tag : str\n        The name of the tag to retrieve.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default True.\n\n    Returns\n    -------\n    Tag\n        The Tag object if found, None otherwise.\n    \"\"\"\n    found = self.list(name=tag, exact_match=exact_match)\n    return next(found, None)\n</code></pre>"},{"location":"collections/tags/#albert.collections.tags.TagCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes a tag by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the tag to delete.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/tags.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Deletes a tag by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the tag to delete.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/tags/#albert.collections.tags.TagCollection.rename","title":"rename","text":"<pre><code>rename(*, old_name: str, new_name: str) -&gt; Tag\n</code></pre> <p>Renames an existing tag entity.</p> <p>Parameters:</p> Name Type Description Default <code>old_name</code> <code>str</code> <p>The current name of the tag.</p> required <code>new_name</code> <code>str</code> <p>The new name of the tag.</p> required <p>Returns:</p> Type Description <code>Tag</code> <p>The renamed Tag.</p> Source code in <code>src/albert/collections/tags.py</code> <pre><code>def rename(self, *, old_name: str, new_name: str) -&gt; Tag:\n    \"\"\"\n    Renames an existing tag entity.\n\n    Parameters\n    ----------\n    old_name : str\n        The current name of the tag.\n    new_name : str\n        The new name of the tag.\n\n    Returns\n    -------\n    Tag\n        The renamed Tag.\n    \"\"\"\n    found_tag = self.get_by_tag(tag=old_name, exact_match=True)\n    if not found_tag:\n        msg = f'Tag \"{old_name}\" not found.'\n        logger.error(msg)\n        raise AlbertException(msg)\n    tag_id = found_tag.id\n    payload = [\n        {\n            \"data\": [\n                {\n                    \"operation\": \"update\",\n                    \"attribute\": \"name\",\n                    \"oldValue\": old_name,\n                    \"newValue\": new_name,\n                }\n            ],\n            \"id\": tag_id,\n        }\n    ]\n    self.session.patch(self.base_path, json=payload)\n    return self.get_by_id(id=tag_id)\n</code></pre>"},{"location":"collections/tags/#albert.collections.tags.TagCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    limit: int = 50,\n    order_by: OrderBy = DESCENDING,\n    name: str | list[str] | None = None,\n    exact_match: bool = True,\n    start_key: str | None = None,\n) -&gt; Iterator[Tag]\n</code></pre> <p>Lists Tag entities with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The maximum number of tags to return, by default 50.</p> <code>50</code> <code>order_by</code> <code>OrderBy</code> <p>The order by which to sort the results, by default OrderBy.DESCENDING.</p> <code>DESCENDING</code> <code>name</code> <code>Union[str, None]</code> <p>The name of the tag to filter by, by default None.</p> <code>None</code> <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default True.</p> <code>True</code> <code>start_key</code> <code>Optional[str]</code> <p>The starting point for the next set of results, by default None.</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[Tag]</code> <p>An iterator of Tag objects.</p> Source code in <code>src/albert/collections/tags.py</code> <pre><code>def list(\n    self,\n    *,\n    limit: int = 50,\n    order_by: OrderBy = OrderBy.DESCENDING,\n    name: str | list[str] | None = None,\n    exact_match: bool = True,\n    start_key: str | None = None,\n) -&gt; Iterator[Tag]:\n    \"\"\"\n    Lists Tag entities with optional filters.\n\n    Parameters\n    ----------\n    limit : int, optional\n        The maximum number of tags to return, by default 50.\n    order_by : OrderBy, optional\n        The order by which to sort the results, by default OrderBy.DESCENDING.\n    name : Union[str, None], optional\n        The name of the tag to filter by, by default None.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default True.\n    start_key : Optional[str], optional\n        The starting point for the next set of results, by default None.\n\n    Returns\n    -------\n    Iterator[Tag]\n        An iterator of Tag objects.\n    \"\"\"\n    params = {\"limit\": limit, \"orderBy\": order_by.value, \"startKey\": start_key}\n    if name:\n        params[\"name\"] = [name] if isinstance(name, str) else name\n        params[\"exactMatch\"] = json.dumps(exact_match)\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [Tag(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/tasks/","title":"Tasks","text":""},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection","title":"albert.collections.tasks.TaskCollection","text":"<pre><code>TaskCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>TaskCollection is a collection class for managing Task entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert Session information</p> required <p>Methods:</p> Name Description <code>create</code> <p>Create a new task. Tasks can be of different types, such as PropertyTask, and are created using the provided task object.</p> <code>add_block</code> <p>Add a block to a Property task.</p> <code>update_block_workflow</code> <p>Update the workflow of a specific block within a task.</p> <code>remove_block</code> <p>Remove a block from a Property task.</p> <code>delete</code> <p>Delete a task.</p> <code>get_by_id</code> <p>Retrieve a task by its ID.</p> <code>list</code> <p>Search for tasks matching the given criteria.</p> <code>update</code> <p>Update a task.</p> <code>get_history</code> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/tasks.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"Initialize the TaskCollection.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert Session information\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{TaskCollection._api_version}/tasks\"\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/tasks'\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.create","title":"create","text":"<pre><code>create(*, task: BaseTask) -&gt; BaseTask\n</code></pre> <p>Create a new task. Tasks can be of different types, such as PropertyTask, and are created using the provided task object.</p> <p>Parameters:</p> Name Type Description Default <code>task</code> <code>BaseTask</code> <p>The task object to create.</p> required <p>Returns:</p> Type Description <code>BaseTask</code> <p>The registered task object.</p> Source code in <code>src/albert/collections/tasks.py</code> <pre><code>def create(self, *, task: BaseTask) -&gt; BaseTask:\n    \"\"\"Create a new task. Tasks can be of different types, such as PropertyTask, and are created using the provided task object.\n\n    Parameters\n    ----------\n    task : BaseTask\n        The task object to create.\n\n    Returns\n    -------\n    BaseTask\n        The registered task object.\n    \"\"\"\n    payload = [task.model_dump(mode=\"json\", by_alias=True, exclude_none=True)]\n    url = f\"{self.base_path}/multi?category={task.category.value}\"\n    if task.parent_id is not None:\n        url = f\"{url}&amp;parentId={task.parent_id}\"\n    response = self.session.post(url=url, json=payload)\n    task_data = response.json()[0]\n    return TaskAdapter.validate_python(task_data)\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.add_block","title":"add_block","text":"<pre><code>add_block(\n    *,\n    task_id: TaskId,\n    data_template_id: DataTemplateId,\n    workflow_id: WorkflowId,\n) -&gt; None\n</code></pre> <p>Add a block to a Property task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>TaskId</code> <p>The ID of the task to add the block to.</p> required <code>data_template_id</code> <code>DataTemplateId</code> <p>The ID of the data template to use for the block.</p> required <code>workflow_id</code> <code>WorkflowId</code> <p>The ID of the workflow to assign to the block.</p> required <p>Returns:</p> Type Description <code>None</code> <p>This method does not return any value.</p> Source code in <code>src/albert/collections/tasks.py</code> <pre><code>@validate_call\ndef add_block(\n    self, *, task_id: TaskId, data_template_id: DataTemplateId, workflow_id: WorkflowId\n) -&gt; None:\n    \"\"\"Add a block to a Property task.\n\n    Parameters\n    ----------\n    task_id : TaskId\n        The ID of the task to add the block to.\n    data_template_id : DataTemplateId\n        The ID of the data template to use for the block.\n    workflow_id : WorkflowId\n        The ID of the workflow to assign to the block.\n\n    Returns\n    -------\n    None\n        This method does not return any value.\n\n    \"\"\"\n    url = f\"{self.base_path}/{task_id}\"\n    payload = [\n        {\n            \"id\": task_id,\n            \"data\": [\n                {\n                    \"operation\": \"add\",\n                    \"attribute\": \"Block\",\n                    \"newValue\": [{\"datId\": data_template_id, \"Workflow\": {\"id\": workflow_id}}],\n                }\n            ],\n        }\n    ]\n    self.session.patch(url=url, json=payload)\n    return None\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.update_block_workflow","title":"update_block_workflow","text":"<pre><code>update_block_workflow(\n    *,\n    task_id: TaskId,\n    block_id: BlockId,\n    workflow_id: WorkflowId,\n) -&gt; None\n</code></pre> <p>Update the workflow of a specific block within a task.</p> <p>This method updates the workflow of a specified block within a task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> <p>The ID of the task.</p> required <code>block_id</code> <code>str</code> <p>The ID of the block within the task.</p> required <code>workflow_id</code> <code>str</code> <p>The ID of the new workflow to be assigned to the block.</p> required <p>Returns:</p> Type Description <code>None</code> <p>This method does not return any value.</p> Notes <ul> <li>The method asserts that the retrieved task is an instance of <code>PropertyTask</code>.</li> <li>If the block's current workflow matches the new workflow ID, no update is performed.</li> <li>The method handles the case where the block has a default workflow named \"No Parameter Group\".</li> </ul> Source code in <code>src/albert/collections/tasks.py</code> <pre><code>@validate_call\ndef update_block_workflow(\n    self, *, task_id: TaskId, block_id: BlockId, workflow_id: WorkflowId\n) -&gt; None:\n    \"\"\"\n    Update the workflow of a specific block within a task.\n\n    This method updates the workflow of a specified block within a task.\n    Parameters\n    ----------\n    task_id : str\n        The ID of the task.\n    block_id : str\n        The ID of the block within the task.\n    workflow_id : str\n        The ID of the new workflow to be assigned to the block.\n\n    Returns\n    -------\n    None\n        This method does not return any value.\n\n    Notes\n    -----\n    - The method asserts that the retrieved task is an instance of `PropertyTask`.\n    - If the block's current workflow matches the new workflow ID, no update is performed.\n    - The method handles the case where the block has a default workflow named \"No Parameter Group\".\n    \"\"\"\n    url = f\"{self.base_path}/{task_id}\"\n    task = self.get_by_id(id=task_id)\n    if not isinstance(task, PropertyTask):\n        logger.error(f\"Task {task_id} is not an instance of PropertyTask\")\n        raise TypeError(f\"Task {task_id} is not an instance of PropertyTask\")\n    for b in task.blocks:\n        if b.id != block_id:\n            continue\n        for w in b.workflow:\n            if w.name == \"No Parameter Group\" and len(b.workflow) &gt; 1:\n                # hardcoded default workflow\n                continue\n            existing_workflow_id = w.id\n    if existing_workflow_id == workflow_id:\n        logger.info(f\"Block {block_id} already has workflow {workflow_id}\")\n        return None\n    patch = [\n        {\n            \"data\": [\n                {\n                    \"operation\": \"update\",\n                    \"attribute\": \"workflow\",\n                    \"oldValue\": existing_workflow_id,\n                    \"newValue\": workflow_id,\n                    \"blockId\": block_id,\n                }\n            ],\n            \"id\": task_id,\n        }\n    ]\n    self.session.patch(url=url, json=patch)\n    return None\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.remove_block","title":"remove_block","text":"<pre><code>remove_block(*, task_id: TaskId, block_id: BlockId) -&gt; None\n</code></pre> <p>Remove a block from a Property task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> <p>ID of the Task to remove the block from (e.g., TASFOR1234)</p> required <code>block_id</code> <code>str</code> <p>ID of the Block to remove (e.g., BLK1)</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/tasks.py</code> <pre><code>@validate_call\ndef remove_block(self, *, task_id: TaskId, block_id: BlockId) -&gt; None:\n    \"\"\"Remove a block from a Property task.\n\n    Parameters\n    ----------\n    task_id : str\n        ID of the Task to remove the block from (e.g., TASFOR1234)\n    block_id : str\n        ID of the Block to remove (e.g., BLK1)\n\n    Returns\n    -------\n    None\n    \"\"\"\n    url = f\"{self.base_path}/{task_id}\"\n    payload = [\n        {\n            \"id\": task_id,\n            \"data\": [\n                {\n                    \"operation\": \"delete\",\n                    \"attribute\": \"Block\",\n                    \"oldValue\": [block_id],\n                }\n            ],\n        }\n    ]\n    self.session.patch(url=url, json=payload)\n    return None\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.delete","title":"delete","text":"<pre><code>delete(*, id: TaskId) -&gt; None\n</code></pre> <p>Delete a task.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>TaskId</code> <p>The ID of the task to delete.</p> required Source code in <code>src/albert/collections/tasks.py</code> <pre><code>@validate_call\ndef delete(self, *, id: TaskId) -&gt; None:\n    \"\"\"Delete a task.\n\n    Parameters\n    ----------\n    id : TaskId\n        The ID of the task to delete.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: TaskId) -&gt; BaseTask\n</code></pre> <p>Retrieve a task by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>TaskId</code> <p>The ID of the task to retrieve.</p> required <p>Returns:</p> Type Description <code>BaseTask</code> <p>The task object with the provided ID.</p> Source code in <code>src/albert/collections/tasks.py</code> <pre><code>@validate_call\ndef get_by_id(self, *, id: TaskId) -&gt; BaseTask:\n    \"\"\"Retrieve a task by its ID.\n\n    Parameters\n    ----------\n    id : TaskId\n        The ID of the task to retrieve.\n\n    Returns\n    -------\n    BaseTask\n        The task object with the provided ID.\n    \"\"\"\n    url = f\"{self.base_path}/multi/{id}\"\n    response = self.session.get(url)\n    return TaskAdapter.validate_python(response.json())\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    order: OrderBy = DESCENDING,\n    text: str | None = None,\n    sort_by: str | None = None,\n    tags: list[str] | None = None,\n    task_id: list[str] | None = None,\n    linked_task: list[str] | None = None,\n    category: TaskCategory | None = None,\n    albert_id: list[str] | None = None,\n    data_template: list[str] | None = None,\n    assigned_to: list[str] | None = None,\n    location: list[str] | None = None,\n    priority: list[str] | None = None,\n    status: list[str] | None = None,\n    parameter_group: list[str] | None = None,\n    created_by: list[str] | None = None,\n    project_id: str | None = None,\n    limit: int = 100,\n    offset: int = 0,\n) -&gt; Iterator[BaseTask]\n</code></pre> <p>Search for tasks matching the given criteria.</p> <p>Parameters:</p> Name Type Description Default <code>order</code> <code>OrderBy</code> <p>The order in which to return results, by default OrderBy.DESCENDING</p> <code>DESCENDING</code> <code>text</code> <code>str | None</code> <p>The text to search for, by default None</p> <code>None</code> <code>sort_by</code> <code>str | None</code> <p>The attribute to sort by, by default None</p> <code>None</code> <code>tags</code> <code>list[str] | None</code> <p>The tags to search for, by default None</p> <code>None</code> <code>task_id</code> <code>list[str] | None</code> <p>The related task IDs to search for, by default None</p> <code>None</code> <code>linked_task</code> <code>list[str] | None</code> <p>The Linked Task IDs to search for, by default None</p> <code>None</code> <code>category</code> <code>TaskCategory | None</code> <p>The category of the task to search for, by default None</p> <code>None</code> <code>albert_id</code> <code>list[str] | None</code> <p>The Albert IDs to search for, by default None</p> <code>None</code> <code>data_template</code> <code>list[str] | None</code> <p>The data template IDs to search for, by default None</p> <code>None</code> <code>assigned_to</code> <code>list[str] | None</code> <p>The User IDs to search for, by default None</p> <code>None</code> <code>location</code> <code>list[str] | None</code> <p>The Locations names to search for, by default None</p> <code>None</code> <code>priority</code> <code>list[str] | None</code> <p>The Priority levels to search for, by default None</p> <code>None</code> <code>status</code> <code>list[str] | None</code> <p>The Task Statuses to search for, by default None</p> <code>None</code> <code>parameter_group</code> <code>list[str] | None</code> <p>The related Parameter Group IDs to search for, by default None</p> <code>None</code> <code>created_by</code> <code>list[str] | None</code> <p>The User IDs of the task creators to search for, by default None</p> <code>None</code> <code>project_id</code> <code>str | None</code> <p>The Project ID to search for, by default None</p> <code>None</code> <p>Yields:</p> Type Description <code>Iterator[BaseTask]</code> <p>An iterator of matching Task objects.</p> Source code in <code>src/albert/collections/tasks.py</code> <pre><code>def list(\n    self,\n    *,\n    order: OrderBy = OrderBy.DESCENDING,\n    text: str | None = None,\n    sort_by: str | None = None,\n    tags: list[str] | None = None,\n    task_id: list[str] | None = None,\n    linked_task: list[str] | None = None,\n    category: TaskCategory | None = None,\n    albert_id: list[str] | None = None,\n    data_template: list[str] | None = None,\n    assigned_to: list[str] | None = None,\n    location: list[str] | None = None,\n    priority: list[str] | None = None,\n    status: list[str] | None = None,\n    parameter_group: list[str] | None = None,\n    created_by: list[str] | None = None,\n    project_id: str | None = None,\n    limit: int = 100,\n    offset: int = 0,\n) -&gt; Iterator[BaseTask]:\n    \"\"\"Search for tasks matching the given criteria.\n\n    Parameters\n    ----------\n    order : OrderBy, optional\n        The order in which to return results, by default OrderBy.DESCENDING\n    text : str | None, optional\n        The text to search for, by default None\n    sort_by : str | None, optional\n        The attribute to sort by, by default None\n    tags : list[str] | None, optional\n        The tags to search for, by default None\n    task_id : list[str] | None, optional\n        The related task IDs to search for, by default None\n    linked_task : list[str] | None, optional\n        The Linked Task IDs to search for, by default None\n    category : TaskCategory | None, optional\n        The category of the task to search for, by default None\n    albert_id : list[str] | None, optional\n        The Albert IDs to search for, by default None\n    data_template : list[str] | None, optional\n        The data template IDs to search for, by default None\n    assigned_to : list[str] | None, optional\n        The User IDs to search for, by default None\n    location : list[str] | None, optional\n        The Locations names to search for, by default None\n    priority : list[str] | None, optional\n        The Priority levels to search for, by default None\n    status : list[str] | None, optional\n        The Task Statuses to search for, by default None\n    parameter_group : list[str] | None, optional\n        The related Parameter Group IDs to search for, by default None\n    created_by : list[str] | None, optional\n        The User IDs of the task creators to search for, by default None\n    project_id : str | None, optional\n        The Project ID to search for, by default None\n\n    Yields\n    ------\n    Iterator[BaseTask]\n        An iterator of matching Task objects.\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; Iterator[BaseTask]:\n        for item in items:\n            id = item[\"albertId\"]\n            try:\n                yield self.get_by_id(id=id)\n            except (\n                AlbertHTTPError,\n                RetryError,\n            ) as e:  # some legacy poorly formed Tasks raise 500s. The allowance on Retry error to also ignore these.\n                logger.warning(f\"Error fetching task '{id}': {e}\")\n\n    params = {\n        \"limit\": limit,\n        \"offset\": offset,\n        \"order\": OrderBy(order).value if order else None,\n        \"text\": text,\n        \"sortBy\": sort_by,\n        \"tags\": tags,\n        \"taskId\": task_id,\n        \"linkedTask\": linked_task,\n        \"category\": category,\n        \"albertId\": albert_id,\n        \"dataTemplate\": data_template,\n        \"assignedTo\": assigned_to,\n        \"location\": location,\n        \"priority\": priority,\n        \"status\": status,\n        \"parameterGroup\": parameter_group,\n        \"createdBy\": created_by,\n        \"projectId\": project_id,\n    }\n\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/search\",\n        session=self.session,\n        deserialize=deserialize,\n        params=params,\n    )\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.update","title":"update","text":"<pre><code>update(*, task: BaseTask) -&gt; BaseTask\n</code></pre> <p>Update a task.</p> <p>Parameters:</p> Name Type Description Default <code>task</code> <code>BaseTask</code> <p>The updated Task object.</p> required <p>Returns:</p> Type Description <code>BaseTask</code> <p>The updated Task object as it exists in the Albert platform.</p> Source code in <code>src/albert/collections/tasks.py</code> <pre><code>def update(self, *, task: BaseTask) -&gt; BaseTask:\n    \"\"\"Update a task.\n\n    Parameters\n    ----------\n    task : BaseTask\n        The updated Task object.\n\n    Returns\n    -------\n    BaseTask\n        The updated Task object as it exists in the Albert platform.\n    \"\"\"\n    existing = self.get_by_id(id=task.id)\n    patch_payload, list_metadata_updates = self._generate_adv_patch_payload(\n        updated=task, existing=existing\n    )\n    patch_operations = patch_payload.get(\"data\", [])\n\n    if len(patch_operations) == 0 and len(list_metadata_updates) == 0:\n        logger.info(f\"Task {task.id} is already up to date\")\n        return task\n    path = f\"{self.base_path}/{task.id}\"\n\n    for datum in patch_operations:\n        patch_payload = TaskPatchPayload(data=[datum], id=task.id)\n        self.session.patch(\n            url=path,\n            json=[patch_payload.model_dump(mode=\"json\", by_alias=True, exclude_none=True)],\n        )\n\n    # For metadata list field updates, we clear, then update\n    # since duplicate attribute values are not allowed in single patch request.\n    for attribute, values in list_metadata_updates.items():\n        entity_links = existing.metadata.get(attribute.split(\".\")[1])\n        old_values = [item.id if hasattr(item, \"id\") else item for item in entity_links]\n        clear_datum = PatchDatum(\n            operation=PatchOperation.DELETE, attribute=attribute, oldValue=old_values\n        )\n        clear_payload = TaskPatchPayload(data=[clear_datum], id=task.id)\n        self.session.patch(\n            url=path,\n            json=[clear_payload.model_dump(mode=\"json\", by_alias=True, exclude_none=True)],\n        )\n        if values:\n            update_datum = PatchDatum(\n                operation=PatchOperation.UPDATE,\n                attribute=attribute,\n                newValue=values,\n                oldValue=[],\n            )\n\n            update_payload = TaskPatchPayload(data=[update_datum], id=task.id)\n            self.session.patch(\n                url=path,\n                json=[\n                    update_payload.model_dump(mode=\"json\", by_alias=True, exclude_none=False)\n                ],\n            )\n    return self.get_by_id(id=task.id)\n</code></pre>"},{"location":"collections/tasks/#albert.collections.tasks.TaskCollection.get_history","title":"get_history","text":"<pre><code>get_history(\n    *,\n    id: TaskId,\n    order: OrderBy = DESCENDING,\n    limit: int = 1000,\n    entity: HistoryEntity | None = None,\n    blockId: str | None = None,\n    startKey: str | None = None,\n) -&gt; TaskHistory\n</code></pre> Source code in <code>src/albert/collections/tasks.py</code> <pre><code>def get_history(\n    self,\n    *,\n    id: TaskId,\n    order: OrderBy = OrderBy.DESCENDING,\n    limit: int = 1000,\n    entity: HistoryEntity | None = None,\n    blockId: str | None = None,\n    startKey: str | None = None,\n) -&gt; TaskHistory:\n    params = {\n        \"limit\": limit,\n        \"orderBy\": OrderBy(order).value if order else None,\n        \"entity\": entity,\n        \"blockId\": blockId,\n        \"startKey\": startKey,\n    }\n    url = f\"{self.base_path}/{id}/history\"\n    response = self.session.get(url, params=params)\n    return TaskHistory(**response.json())\n</code></pre>"},{"location":"collections/un_numbers/","title":"UN Numbers","text":""},{"location":"collections/un_numbers/#albert.collections.un_numbers.UnNumberCollection","title":"albert.collections.un_numbers.UnNumberCollection","text":"<pre><code>UnNumberCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>UnNumberCollection is a collection class for managing UnNumber entities in the Albert platform.</p> Note <p>Creating UN Numbers is not supported via the SDK, as UN Numbers are highly controlled by Albert.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <p>This method is not implemented as UN Numbers cannot be created through the SDK.</p> <code>get_by_id</code> <p>Retrieve a UN Number by its ID.</p> <code>get_by_name</code> <p>Retrieve a UN Number by its name.</p> <code>list</code> <p>List UN Numbers matching the provided criteria.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/un_numbers.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"Initializes the UnNumberCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{UnNumberCollection._api_version}/unnumbers\"\n</code></pre>"},{"location":"collections/un_numbers/#albert.collections.un_numbers.UnNumberCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/unnumbers'\n</code></pre>"},{"location":"collections/un_numbers/#albert.collections.un_numbers.UnNumberCollection.create","title":"create","text":"<pre><code>create() -&gt; None\n</code></pre> <p>This method is not implemented as UN Numbers cannot be created through the SDK.</p> Source code in <code>src/albert/collections/un_numbers.py</code> <pre><code>def create(self) -&gt; None:\n    \"\"\"\n    This method is not implemented as UN Numbers cannot be created through the SDK.\n    \"\"\"\n    raise NotImplementedError()\n</code></pre>"},{"location":"collections/un_numbers/#albert.collections.un_numbers.UnNumberCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; UnNumber\n</code></pre> <p>Retrieve a UN Number by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the UN Number to retrieve.</p> required <p>Returns:</p> Type Description <code>UnNumber</code> <p>The corresponding UN Number</p> Source code in <code>src/albert/collections/un_numbers.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; UnNumber:\n    \"\"\"Retrieve a UN Number by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the UN Number to retrieve.\n\n    Returns\n    -------\n    UnNumber\n        The corresponding UN Number\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    return UnNumber(**response.json())\n</code></pre>"},{"location":"collections/un_numbers/#albert.collections.un_numbers.UnNumberCollection.get_by_name","title":"get_by_name","text":"<pre><code>get_by_name(*, name: str) -&gt; UnNumber | None\n</code></pre> <p>Retrieve a UN Number by its name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the UN Number to retrieve</p> required <p>Returns:</p> Type Description <code>UnNumber | None</code> <p>The corresponding UN Number or None if not found</p> Source code in <code>src/albert/collections/un_numbers.py</code> <pre><code>def get_by_name(self, *, name: str) -&gt; UnNumber | None:\n    \"\"\"Retrieve a UN Number by its name.\n\n    Parameters\n    ----------\n    name : str\n        The name of the UN Number to retrieve\n\n    Returns\n    -------\n    UnNumber | None\n        The corresponding UN Number or None if not found\n    \"\"\"\n    found = self.list(exact_match=True, name=name)\n    return next(found, None)\n</code></pre>"},{"location":"collections/un_numbers/#albert.collections.un_numbers.UnNumberCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    name: str | None = None,\n    exact_match: bool = False,\n    limit: int = 50,\n    start_key: str | None = None,\n) -&gt; Iterator[UnNumber]\n</code></pre> <p>List UN Numbers matching the provided criteria.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the UN Number to search for, by default None</p> <code>None</code> <code>exact_match</code> <code>bool</code> <p>Weather to return exact matches only, by default False</p> <code>False</code> <p>Yields:</p> Type Description <code>Iterator[UnNumber]</code> <p>The UN Numbers matching the search criteria</p> Source code in <code>src/albert/collections/un_numbers.py</code> <pre><code>def list(\n    self,\n    *,\n    name: str | None = None,\n    exact_match: bool = False,\n    limit: int = 50,\n    start_key: str | None = None,\n) -&gt; Iterator[UnNumber]:\n    \"\"\"List UN Numbers matching the provided criteria.\n\n    Parameters\n    ----------\n    name : str | None, optional\n        The name of the UN Number to search for, by default None\n    exact_match : bool, optional\n        Weather to return exact matches only, by default False\n\n    Yields\n    ------\n    Iterator[UnNumber]\n        The UN Numbers matching the search criteria\n    \"\"\"\n    params = {\"limit\": limit, \"startKey\": start_key}\n    if name:\n        params[\"name\"] = name\n        params[\"exactMatch\"] = json.dumps(exact_match)\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [UnNumber(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/units/","title":"Units","text":""},{"location":"collections/units/#albert.collections.units.UnitCollection","title":"albert.collections.units.UnitCollection","text":"<pre><code>UnitCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>UnitCollection is a collection class for managing Unit entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <p>Creates a new unit entity.</p> <code>get_by_id</code> <p>Retrieves a unit by its ID.</p> <code>get_by_ids</code> <p>Retrieves a set of units by their IDs</p> <code>update</code> <p>Updates a unit entity by its ID.</p> <code>delete</code> <p>Deletes a unit by its ID.</p> <code>list</code> <p>Lists unit entities with optional filters.</p> <code>get_by_name</code> <p>Retrieves a unit by its name.</p> <code>unit_exists</code> <p>Checks if a unit exists by its name.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/units.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the UnitCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{UnitCollection._api_version}/units\"\n</code></pre>"},{"location":"collections/units/#albert.collections.units.UnitCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/units'\n</code></pre>"},{"location":"collections/units/#albert.collections.units.UnitCollection.create","title":"create","text":"<pre><code>create(*, unit: Unit) -&gt; Unit\n</code></pre> <p>Creates a new unit entity.</p> <p>Parameters:</p> Name Type Description Default <code>unit</code> <code>Unit</code> <p>The unit object to create.</p> required <p>Returns:</p> Type Description <code>Unit</code> <p>The created Unit object.</p> Source code in <code>src/albert/collections/units.py</code> <pre><code>def create(self, *, unit: Unit) -&gt; Unit:\n    \"\"\"\n    Creates a new unit entity.\n\n    Parameters\n    ----------\n    unit : Unit\n        The unit object to create.\n\n    Returns\n    -------\n    Unit\n        The created Unit object.\n    \"\"\"\n    hit = self.get_by_name(name=unit.name, exact_match=True)\n    if hit is not None:\n        logging.warning(\n            f\"Unit with the name {hit.name} already exists. Returning the existing unit.\"\n        )\n        return hit\n    response = self.session.post(\n        self.base_path, json=unit.model_dump(by_alias=True, exclude_unset=True, mode=\"json\")\n    )\n    this_unit = Unit(**response.json())\n    return this_unit\n</code></pre>"},{"location":"collections/units/#albert.collections.units.UnitCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Unit\n</code></pre> <p>Retrieves a unit by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the unit to retrieve.</p> required <p>Returns:</p> Type Description <code>Unit</code> <p>The Unit object if found.</p> Source code in <code>src/albert/collections/units.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Unit:\n    \"\"\"\n    Retrieves a unit by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the unit to retrieve.\n\n    Returns\n    -------\n    Unit\n        The Unit object if found.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    this_unit = Unit(**response.json())\n    return this_unit\n</code></pre>"},{"location":"collections/units/#albert.collections.units.UnitCollection.get_by_ids","title":"get_by_ids","text":"<pre><code>get_by_ids(*, ids: list[str]) -&gt; list[Unit]\n</code></pre> <p>Retrieves a set of units by their IDs</p> <p>Parameters:</p> Name Type Description Default <code>ids</code> <code>list[str]</code> <p>The IDs of the units to retrieve.</p> required <p>Returns:</p> Type Description <code>list[Unit]</code> <p>The Unit objects</p> Source code in <code>src/albert/collections/units.py</code> <pre><code>def get_by_ids(self, *, ids: list[str]) -&gt; list[Unit]:\n    \"\"\"\n    Retrieves a set of units by their IDs\n\n    Parameters\n    ----------\n    ids : list[str]\n        The IDs of the units to retrieve.\n\n    Returns\n    -------\n    list[Unit]\n        The Unit objects\n    \"\"\"\n    url = f\"{self.base_path}/ids\"\n    batches = [ids[i : i + 500] for i in range(0, len(ids), 500)]\n    return [\n        Unit(**item)\n        for batch in batches\n        for item in self.session.get(url, params={\"id\": batch}).json()[\"Items\"]\n    ]\n</code></pre>"},{"location":"collections/units/#albert.collections.units.UnitCollection.update","title":"update","text":"<pre><code>update(*, unit: Unit) -&gt; Unit\n</code></pre> <p>Updates a unit entity by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>unit</code> <code>Unit</code> <p>The updated Unit object.</p> required <p>Returns:</p> Type Description <code>Unit</code> <p>The updated Unit</p> Source code in <code>src/albert/collections/units.py</code> <pre><code>def update(self, *, unit: Unit) -&gt; Unit:\n    \"\"\"\n    Updates a unit entity by its ID.\n\n    Parameters\n    ----------\n    unit : Unit\n        The updated Unit object.\n\n    Returns\n    -------\n    Unit\n        The updated Unit\n    \"\"\"\n    unit_id = unit.id\n    original_unit = self.get_by_id(id=unit_id)\n    payload = self._generate_patch_payload(existing=original_unit, updated=unit)\n    url = f\"{self.base_path}/{unit_id}\"\n    self.session.patch(url, json=payload.model_dump(mode=\"json\", by_alias=True))\n    unit = self.get_by_id(id=unit_id)\n    return unit\n</code></pre>"},{"location":"collections/units/#albert.collections.units.UnitCollection.delete","title":"delete","text":"<pre><code>delete(*, id: str) -&gt; None\n</code></pre> <p>Deletes a unit by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the unit to delete.</p> required <p>Returns:</p> Type Description <code>None</code> Source code in <code>src/albert/collections/units.py</code> <pre><code>def delete(self, *, id: str) -&gt; None:\n    \"\"\"\n    Deletes a unit by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the unit to delete.\n\n    Returns\n    -------\n    None\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    self.session.delete(url)\n</code></pre>"},{"location":"collections/units/#albert.collections.units.UnitCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    limit: int = 100,\n    name: str | list[str] | None = None,\n    category: UnitCategory | None = None,\n    order_by: OrderBy = DESCENDING,\n    exact_match: bool = False,\n    start_key: str | None = None,\n    verified: bool | None = None,\n) -&gt; Iterator[Unit]\n</code></pre> <p>Lists unit entities with optional filters.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The maximum number of units to return, by default 50.</p> <code>100</code> <code>name</code> <code>Optional[str]</code> <p>The name of the unit to filter by, by default None.</p> <code>None</code> <code>category</code> <code>Optional[UnitCategory]</code> <p>The category of the unit to filter by, by default None.</p> <code>None</code> <code>order_by</code> <code>OrderBy</code> <p>The order by which to sort the results, by default OrderBy.DESCENDING.</p> <code>DESCENDING</code> <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default False.</p> <code>False</code> <code>start_key</code> <code>Optional[str]</code> <p>The starting point for the next set of results, by default None.</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[Unit]</code> <p>An iterator of Unit objects.</p> Source code in <code>src/albert/collections/units.py</code> <pre><code>def list(\n    self,\n    *,\n    limit: int = 100,\n    name: str | list[str] | None = None,\n    category: UnitCategory | None = None,\n    order_by: OrderBy = OrderBy.DESCENDING,\n    exact_match: bool = False,\n    start_key: str | None = None,\n    verified: bool | None = None,\n) -&gt; Iterator[Unit]:\n    \"\"\"\n    Lists unit entities with optional filters.\n\n    Parameters\n    ----------\n    limit : int, optional\n        The maximum number of units to return, by default 50.\n    name : Optional[str], optional\n        The name of the unit to filter by, by default None.\n    category : Optional[UnitCategory], optional\n        The category of the unit to filter by, by default None.\n    order_by : OrderBy, optional\n        The order by which to sort the results, by default OrderBy.DESCENDING.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default False.\n    start_key : Optional[str], optional\n        The starting point for the next set of results, by default None.\n\n    Returns\n    -------\n    Iterator[Unit]\n        An iterator of Unit objects.\n    \"\"\"\n    params = {\n        \"limit\": limit,\n        \"startKey\": start_key,\n        \"orderBy\": order_by.value,\n        \"name\": [name] if isinstance(name, str) else name,\n        \"exactMatch\": json.dumps(exact_match),\n        \"verified\": json.dumps(verified) if verified is not None else None,\n        \"category\": category.value if isinstance(category, UnitCategory) else category,\n    }\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        session=self.session,\n        params=params,\n        deserialize=lambda items: [Unit(**item) for item in items],\n    )\n</code></pre>"},{"location":"collections/units/#albert.collections.units.UnitCollection.get_by_name","title":"get_by_name","text":"<pre><code>get_by_name(\n    *, name: str, exact_match: bool = False\n) -&gt; Unit | None\n</code></pre> <p>Retrieves a unit by its name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the unit to retrieve.</p> required <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default False.</p> <code>False</code> <p>Returns:</p> Type Description <code>Optional[Unit]</code> <p>The Unit object if found, None otherwise.</p> Source code in <code>src/albert/collections/units.py</code> <pre><code>def get_by_name(self, *, name: str, exact_match: bool = False) -&gt; Unit | None:\n    \"\"\"\n    Retrieves a unit by its name.\n\n    Parameters\n    ----------\n    name : str\n        The name of the unit to retrieve.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default False.\n\n    Returns\n    -------\n    Optional[Unit]\n        The Unit object if found, None otherwise.\n    \"\"\"\n    found = self.list(name=name, exact_match=exact_match)\n    return next(found, None)\n</code></pre>"},{"location":"collections/units/#albert.collections.units.UnitCollection.unit_exists","title":"unit_exists","text":"<pre><code>unit_exists(*, name: str, exact_match: bool = True) -&gt; bool\n</code></pre> <p>Checks if a unit exists by its name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the unit to check.</p> required <code>exact_match</code> <code>bool</code> <p>Whether to match the name exactly, by default True.</p> <code>True</code> <p>Returns:</p> Type Description <code>bool</code> <p>True if the unit exists, False otherwise.</p> Source code in <code>src/albert/collections/units.py</code> <pre><code>def unit_exists(self, *, name: str, exact_match: bool = True) -&gt; bool:\n    \"\"\"\n    Checks if a unit exists by its name.\n\n    Parameters\n    ----------\n    name : str\n        The name of the unit to check.\n    exact_match : bool, optional\n        Whether to match the name exactly, by default True.\n\n    Returns\n    -------\n    bool\n        True if the unit exists, False otherwise.\n    \"\"\"\n    return self.get_by_name(name=name, exact_match=exact_match) is not None\n</code></pre>"},{"location":"collections/users/","title":"Users","text":""},{"location":"collections/users/#albert.collections.users.UserCollection","title":"albert.collections.users.UserCollection","text":"<pre><code>UserCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>UserCollection is a collection class for managing User entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>get_current_user</code> <p>Retrieves the current authenticated user.</p> <code>get_by_id</code> <p>Retrieves a User by its ID.</p> <code>list</code> <p>Lists Users based on criteria</p> <code>create</code> <p>Create a new User</p> <code>update</code> <p>Update a User entity.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/users.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the UserCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{UserCollection._api_version}/users\"\n</code></pre>"},{"location":"collections/users/#albert.collections.users.UserCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/users'\n</code></pre>"},{"location":"collections/users/#albert.collections.users.UserCollection.get_current_user","title":"get_current_user","text":"<pre><code>get_current_user() -&gt; User\n</code></pre> <p>Retrieves the current authenticated user.</p> <p>Returns:</p> Type Description <code>User</code> <p>The current User object.</p> Source code in <code>src/albert/collections/users.py</code> <pre><code>def get_current_user(self) -&gt; User:\n    \"\"\"\n    Retrieves the current authenticated user.\n\n    Returns\n    -------\n    User\n        The current User object.\n    \"\"\"\n    claims = jwt.decode(self.session._access_token, options={\"verify_signature\": False})\n    return self.get_by_id(id=claims[\"id\"])\n</code></pre>"},{"location":"collections/users/#albert.collections.users.UserCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; User\n</code></pre> <p>Retrieves a User by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the user to retrieve.</p> required <p>Returns:</p> Type Description <code>User</code> <p>The User object.</p> Source code in <code>src/albert/collections/users.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; User:\n    \"\"\"\n    Retrieves a User by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the user to retrieve.\n\n    Returns\n    -------\n    User\n        The User object.\n    \"\"\"\n    url = f\"{self.base_path}/{id}\"\n    response = self.session.get(url)\n    return User(**response.json())\n</code></pre>"},{"location":"collections/users/#albert.collections.users.UserCollection.list","title":"list","text":"<pre><code>list(\n    *,\n    limit: int = 50,\n    offset: int | None = None,\n    text: str | None = None,\n    status: Status | None = None,\n    search_fields: str | None = None,\n) -&gt; Iterator[User]\n</code></pre> <p>Lists Users based on criteria</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>Optional[str]</code> <p>text to search against, by default None</p> <code>None</code> <p>Returns:</p> Type Description <code>Generator</code> <p>Generator of matching Users or None</p> Source code in <code>src/albert/collections/users.py</code> <pre><code>def list(\n    self,\n    *,\n    limit: int = 50,\n    offset: int | None = None,\n    text: str | None = None,\n    status: Status | None = None,\n    search_fields: str | None = None,\n) -&gt; Iterator[User]:\n    \"\"\"Lists Users based on criteria\n\n    Parameters\n    ----------\n    text : Optional[str], optional\n        text to search against, by default None\n\n    Returns\n    -------\n    Generator\n        Generator of matching Users or None\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; Iterator[User]:\n        for item in items:\n            id = item[\"albertId\"]\n            try:\n                yield self.get_by_id(id=id)\n            except AlbertHTTPError as e:\n                logger.warning(f\"Error fetching user '{id}': {e}\")\n\n    params = {\n        \"limit\": limit,\n        \"offset\": offset,\n        \"status\": status,\n        \"text\": text,\n        \"searchFields\": search_fields,\n    }\n\n    return AlbertPaginator(\n        mode=PaginationMode.OFFSET,\n        path=f\"{self.base_path}/search\",\n        session=self.session,\n        params=params,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/users/#albert.collections.users.UserCollection.create","title":"create","text":"<pre><code>create(*, user: User) -&gt; User\n</code></pre> <p>Create a new User</p> <p>Parameters:</p> Name Type Description Default <code>user</code> <code>User</code> <p>The user to create</p> required <p>Returns:</p> Type Description <code>User</code> <p>The created User</p> Source code in <code>src/albert/collections/users.py</code> <pre><code>def create(self, *, user: User) -&gt; User:  # pragma: no cover\n    \"\"\"Create a new User\n\n    Parameters\n    ----------\n    user : User\n        The user to create\n\n    Returns\n    -------\n    User\n        The created User\n    \"\"\"\n\n    response = self.session.post(\n        self.base_path,\n        json=user.model_dump(by_alias=True, exclude_none=True, mode=\"json\"),\n    )\n    return User(**response.json())\n</code></pre>"},{"location":"collections/users/#albert.collections.users.UserCollection.update","title":"update","text":"<pre><code>update(*, user: User) -&gt; User\n</code></pre> <p>Update a User entity.</p> <p>Parameters:</p> Name Type Description Default <code>user</code> <code>User</code> <p>The updated User entity.</p> required <p>Returns:</p> Type Description <code>User</code> <p>The updated User entity as returned by the server.</p> Source code in <code>src/albert/collections/users.py</code> <pre><code>def update(self, *, user: User) -&gt; User:\n    \"\"\"Update a User entity.\n\n    Parameters\n    ----------\n    user : User\n        The updated User entity.\n\n    Returns\n    -------\n    User\n        The updated User entity as returned by the server.\n    \"\"\"\n    # Fetch the current object state from the server or database\n    current_object = self.get_by_id(id=user.id)\n\n    # Generate the PATCH payload\n    payload = self._generate_patch_payload(existing=current_object, updated=user)\n\n    url = f\"{self.base_path}/{user.id}\"\n    self.session.patch(url, json=payload.model_dump(mode=\"json\", by_alias=True))\n\n    updated_user = self.get_by_id(id=user.id)\n    return updated_user\n</code></pre>"},{"location":"collections/workflows/","title":"Workflows","text":""},{"location":"collections/workflows/#albert.collections.workflows.WorkflowCollection","title":"albert.collections.workflows.WorkflowCollection","text":"<pre><code>WorkflowCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>WorkflowCollection is a collection class for managing Workflow entities in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AlbertSession</code> <p>The Albert session instance.</p> required <p>Methods:</p> Name Description <code>create</code> <p>Create or return matching workflows for the provided list of workflows.</p> <code>get_by_id</code> <p>Retrieve a Workflow by its ID.</p> <code>get_by_ids</code> <p>Returns a list of Workflow objects by their IDs.</p> <code>list</code> <p>List all workflows. Unlikly to be used in production.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/workflows.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    \"\"\"\n    Initializes the WorkflowCollection with the provided session.\n\n    Parameters\n    ----------\n    session : AlbertSession\n        The Albert session instance.\n    \"\"\"\n    super().__init__(session=session)\n    self.base_path = f\"/api/{WorkflowCollection._api_version}/workflows\"\n</code></pre>"},{"location":"collections/workflows/#albert.collections.workflows.WorkflowCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/workflows'\n</code></pre>"},{"location":"collections/workflows/#albert.collections.workflows.WorkflowCollection.create","title":"create","text":"<pre><code>create(*, workflows: list[Workflow]) -&gt; list[Workflow]\n</code></pre> <p>Create or return matching workflows for the provided list of workflows. This endpoint automatically tries to find an existing workflow with the same parameter setpoints, and will either return the existing workflow or create a new one.</p> <p>Parameters:</p> Name Type Description Default <code>workflows</code> <code>list[Workflow]</code> <p>A list of Workflow objects to find or create.</p> required <p>Returns:</p> Type Description <code>list[Workflow]</code> <p>A list of created or found Workflow objects.</p> Source code in <code>src/albert/collections/workflows.py</code> <pre><code>def create(self, *, workflows: list[Workflow]) -&gt; list[Workflow]:\n    \"\"\"Create or return matching workflows for the provided list of workflows.\n    This endpoint automatically tries to find an existing workflow with the same parameter setpoints, and will either return the existing workflow or create a new one.\n\n    Parameters\n    ----------\n    workflows : list[Workflow]\n        A list of Workflow objects to find or create.\n\n    Returns\n    -------\n    list[Workflow]\n        A list of created or found Workflow objects.\n    \"\"\"\n    if isinstance(workflows, Workflow):\n        # in case the user forgets this should be a list\n        workflows = [workflows]\n    response = self.session.post(\n        url=f\"{self.base_path}/bulk\",\n        json=[x.model_dump(mode=\"json\", by_alias=True, exclude_none=True) for x in workflows],\n    )\n    return [Workflow(**x) for x in response.json()]\n</code></pre>"},{"location":"collections/workflows/#albert.collections.workflows.WorkflowCollection.get_by_id","title":"get_by_id","text":"<pre><code>get_by_id(*, id: str) -&gt; Workflow\n</code></pre> <p>Retrieve a Workflow by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The ID of the Workflow to retrieve.</p> required <p>Returns:</p> Type Description <code>Workflow</code> <p>The Workflow object.</p> Source code in <code>src/albert/collections/workflows.py</code> <pre><code>def get_by_id(self, *, id: str) -&gt; Workflow:\n    \"\"\"Retrieve a Workflow by its ID.\n\n    Parameters\n    ----------\n    id : str\n        The ID of the Workflow to retrieve.\n\n    Returns\n    -------\n    Workflow\n        The Workflow object.\n    \"\"\"\n    response = self.session.get(f\"{self.base_path}/{id}\")\n    return Workflow(**response.json())\n</code></pre>"},{"location":"collections/workflows/#albert.collections.workflows.WorkflowCollection.get_by_ids","title":"get_by_ids","text":"<pre><code>get_by_ids(*, ids: list[str]) -&gt; list[Workflow]\n</code></pre> <p>Returns a list of Workflow objects by their IDs.</p> <p>Parameters:</p> Name Type Description Default <code>ids</code> <code>list[str]</code> <p>The list of Workflow IDs to retrieve.</p> required <p>Returns:</p> Type Description <code>list[Workflow]</code> <p>The list of Workflow objects matching the provided IDs.</p> Source code in <code>src/albert/collections/workflows.py</code> <pre><code>def get_by_ids(self, *, ids: list[str]) -&gt; list[Workflow]:\n    \"\"\"Returns a list of Workflow objects by their IDs.\n\n    Parameters\n    ----------\n    ids : list[str]\n        The list of Workflow IDs to retrieve.\n\n    Returns\n    -------\n    list[Workflow]\n        The list of Workflow objects matching the provided IDs.\n    \"\"\"\n    url = f\"{self.base_path}/ids\"\n    batches = [ids[i : i + 100] for i in range(0, len(ids), 100)]\n    return [\n        Workflow(**item)\n        for batch in batches\n        for item in self.session.get(url, params={\"id\": batch}).json()[\"Items\"]\n    ]\n</code></pre>"},{"location":"collections/workflows/#albert.collections.workflows.WorkflowCollection.list","title":"list","text":"<pre><code>list(limit: int = 50) -&gt; Iterator[Workflow]\n</code></pre> <p>List all workflows. Unlikly to be used in production.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The number of workflows to return, by default 50.</p> <code>50</code> <p>Yields:</p> Type Description <code>Iterator[Workflow]</code> <p>An iterator of Workflow objects.</p> Source code in <code>src/albert/collections/workflows.py</code> <pre><code>def list(self, limit: int = 50) -&gt; Iterator[Workflow]:\n    \"\"\"List all workflows. Unlikly to be used in production.\n\n    Parameters\n    ----------\n    limit : int, optional\n        The number of workflows to return, by default 50.\n\n    Yields\n    ------\n    Iterator[Workflow]\n        An iterator of Workflow objects.\n    \"\"\"\n\n    def deserialize(items: list[dict]) -&gt; list[Workflow]:\n        return self.get_by_ids(ids=[x[\"albertId\"] for x in items])\n\n    params = {\"limit\": limit}\n    return AlbertPaginator(\n        mode=PaginationMode.KEY,\n        path=self.base_path,\n        params=params,\n        session=self.session,\n        deserialize=deserialize,\n    )\n</code></pre>"},{"location":"collections/worksheets/","title":"Worksheets","text":""},{"location":"collections/worksheets/#albert.collections.worksheets.WorksheetCollection","title":"albert.collections.worksheets.WorksheetCollection","text":"<pre><code>WorksheetCollection(*, session: AlbertSession)\n</code></pre> <p>               Bases: <code>BaseCollection</code></p> <p>WorksheetCollection is a collection class for managing Worksheet entities in the Albert platform.</p> <p>Methods:</p> Name Description <code>get_by_project_id</code> <p>Retrieve a worksheet by its project ID. Projects and Worksheets are 1:1 in the Albert platform.</p> <code>setup_worksheet</code> <p>Setup a new worksheet for a project.</p> <code>setup_new_sheet_from_template</code> <p>Create a new sheet in the Worksheet related to the specified Project from a template.</p> <code>add_sheet</code> <p>Create a new blank sheet in the Worksheet with the specified name.</p> <p>Attributes:</p> Name Type Description <code>base_path</code> Source code in <code>src/albert/collections/worksheets.py</code> <pre><code>def __init__(self, *, session: AlbertSession):\n    super().__init__(session=session)\n    self.base_path = f\"/api/{WorksheetCollection._api_version}/worksheet\"\n</code></pre>"},{"location":"collections/worksheets/#albert.collections.worksheets.WorksheetCollection.base_path","title":"base_path","text":"<pre><code>base_path = f'/api/{_api_version}/worksheet'\n</code></pre>"},{"location":"collections/worksheets/#albert.collections.worksheets.WorksheetCollection.get_by_project_id","title":"get_by_project_id","text":"<pre><code>get_by_project_id(*, project_id: ProjectId) -&gt; Worksheet\n</code></pre> <p>Retrieve a worksheet by its project ID. Projects and Worksheets are 1:1 in the Albert platform.</p> <p>Parameters:</p> Name Type Description Default <code>project_id</code> <code>str</code> <p>The project ID to retrieve the worksheet for.</p> required <p>Returns:</p> Type Description <code>Worksheet</code> <p>The Worksheet object for that project.</p> Source code in <code>src/albert/collections/worksheets.py</code> <pre><code>def get_by_project_id(self, *, project_id: ProjectId) -&gt; Worksheet:\n    \"\"\"Retrieve a worksheet by its project ID. Projects and Worksheets are 1:1 in the Albert platform.\n\n    Parameters\n    ----------\n    project_id : str\n        The project ID to retrieve the worksheet for.\n\n    Returns\n    -------\n    Worksheet\n        The Worksheet object for that project.\n    \"\"\"\n\n    params = {\"type\": \"project\", \"id\": project_id}\n    response = self.session.get(self.base_path, params=params)\n\n    response_json = response.json()\n\n    # Sheets are themselves collections, and therefore need access to the session\n    response_json = self._add_session_to_sheets(response_json)\n\n    return Worksheet(**response_json)\n</code></pre>"},{"location":"collections/worksheets/#albert.collections.worksheets.WorksheetCollection.setup_worksheet","title":"setup_worksheet","text":"<pre><code>setup_worksheet(\n    *, project_id: ProjectId, add_sheet=False\n) -&gt; Worksheet\n</code></pre> <p>Setup a new worksheet for a project.</p> <p>Parameters:</p> Name Type Description Default <code>project_id</code> <code>str</code> <p>The project ID to setup the worksheet for.</p> required <code>add_sheet</code> <code>bool</code> <p>Whether to add a blank sheet to the worksheet, by default False</p> <code>False</code> <p>Returns:</p> Type Description <code>Worksheet</code> <p>The Worksheet object for the project.</p> Source code in <code>src/albert/collections/worksheets.py</code> <pre><code>def setup_worksheet(self, *, project_id: ProjectId, add_sheet=False) -&gt; Worksheet:\n    \"\"\"Setup a new worksheet for a project.\n\n    Parameters\n    ----------\n    project_id : str\n        The project ID to setup the worksheet for.\n    add_sheet : bool, optional\n        Whether to add a blank sheet to the worksheet, by default False\n\n    Returns\n    -------\n    Worksheet\n        The Worksheet object for the project.\n    \"\"\"\n\n    params = {\"sheets\": str(add_sheet).lower()}\n    path = f\"{self.base_path}/{project_id}/setup\"\n    self.session.post(path, json=params)\n    return self.get_by_project_id(project_id=project_id)\n</code></pre>"},{"location":"collections/worksheets/#albert.collections.worksheets.WorksheetCollection.setup_new_sheet_from_template","title":"setup_new_sheet_from_template","text":"<pre><code>setup_new_sheet_from_template(\n    *,\n    project_id: ProjectId,\n    sheet_template_id: str,\n    sheet_name: str,\n) -&gt; Worksheet\n</code></pre> <p>Create a new sheet in the Worksheet related to the specified Project from a template.</p> <p>Parameters:</p> Name Type Description Default <code>project_id</code> <code>str</code> <p>description</p> required <code>sheet_template_id</code> <code>str</code> <p>description</p> required <code>sheet_name</code> <code>str</code> <p>description</p> required <p>Returns:</p> Type Description <code>Worksheet</code> <p>The Worksheet object for the project.</p> Source code in <code>src/albert/collections/worksheets.py</code> <pre><code>def setup_new_sheet_from_template(\n    self, *, project_id: ProjectId, sheet_template_id: str, sheet_name: str\n) -&gt; Worksheet:\n    \"\"\"Create a new sheet in the Worksheet related to the specified Project from a template.\n\n    Parameters\n    ----------\n    project_id : str\n        _description_\n    sheet_template_id : str\n        _description_\n    sheet_name : str\n        _description_\n\n    Returns\n    -------\n    Worksheet\n        The Worksheet object for the project.\n    \"\"\"\n    payload = {\"name\": sheet_name}\n    params = {\"templateId\": sheet_template_id}\n    path = f\"{self.base_path}/project/{project_id}/sheets\"\n    self.session.post(path, json=payload, params=params)\n    return self.get_by_project_id(project_id=project_id)\n</code></pre>"},{"location":"collections/worksheets/#albert.collections.worksheets.WorksheetCollection.add_sheet","title":"add_sheet","text":"<pre><code>add_sheet(\n    *, project_id: ProjectId, sheet_name: str\n) -&gt; Worksheet\n</code></pre> <p>Create a new blank sheet in the Worksheet with the specified name.</p> <p>Parameters:</p> Name Type Description Default <code>project_id</code> <code>str</code> <p>The project ID for the Worksheet to add the sheet to.</p> required <code>sheet_name</code> <code>str</code> <p>The name of the new sheet.</p> required <p>Returns:</p> Type Description <code>Worksheet</code> <p>The Worksheet object for the project.</p> Source code in <code>src/albert/collections/worksheets.py</code> <pre><code>def add_sheet(self, *, project_id: ProjectId, sheet_name: str) -&gt; Worksheet:\n    \"\"\"Create a new blank sheet in the Worksheet with the specified name.\n\n    Parameters\n    ----------\n    project_id : str\n        The project ID for the Worksheet to add the sheet to.\n    sheet_name : str\n        The name of the new sheet.\n\n    Returns\n    -------\n    Worksheet\n        The Worksheet object for the project.\n    \"\"\"\n    payload = {\"name\": sheet_name}\n    url = f\"{self.base_path}/project/{project_id}/sheets\"\n    self.session.put(url=url, json=payload)\n    return self.get_by_project_id(project_id=project_id)\n</code></pre>"},{"location":"resources/attachments/","title":"Attachments","text":""},{"location":"resources/attachments/#albert.resources.attachments","title":"albert.resources.attachments","text":""},{"location":"resources/attachments/#albert.resources.attachments.AttachmentCategory","title":"AttachmentCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>OTHER</code> <code>SDS</code> <code>LABEL</code> <code>SCRIPT</code>"},{"location":"resources/attachments/#albert.resources.attachments.AttachmentCategory.OTHER","title":"OTHER","text":"<pre><code>OTHER = 'Other'\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.AttachmentCategory.SDS","title":"SDS","text":"<pre><code>SDS = 'SDS'\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.AttachmentCategory.LABEL","title":"LABEL","text":"<pre><code>LABEL = 'Label'\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.AttachmentCategory.SCRIPT","title":"SCRIPT","text":"<pre><code>SCRIPT = 'Script'\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment","title":"Attachment","text":"<p>               Bases: <code>BaseResource</code></p> <p>Used for attching files to Notes on Tasks, Projects, Inventory, etc. Key should match File.name</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Used for attching files to Notes on Tasks, Projects, Inventory, etc.\\nKey should match File.name\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"key\": {\n      \"title\": \"Key\",\n      \"type\": \"string\"\n    },\n    \"nameSpace\": {\n      \"default\": \"result\",\n      \"title\": \"Namespace\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"const\": \"Other\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Category\"\n    },\n    \"fileSize\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Filesize\"\n    },\n    \"mimeType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Mimetype\"\n    },\n    \"signedURL\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Signedurl\"\n    },\n    \"signedURLV2\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Signedurlv2\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    }\n  },\n  \"required\": [\n    \"parentId\",\n    \"name\",\n    \"key\"\n  ],\n  \"title\": \"Attachment\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>parent_id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>key</code>                 (<code>str</code>)             </li> <li> <code>namespace</code>                 (<code>str</code>)             </li> <li> <code>category</code>                 (<code>Literal[OTHER] | None</code>)             </li> <li> <code>file_size</code>                 (<code>int | None</code>)             </li> <li> <code>mime_type</code>                 (<code>str | None</code>)             </li> <li> <code>signed_url</code>                 (<code>str | None</code>)             </li> <li> <code>signed_url_v2</code>                 (<code>str | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, str] | None</code>)             </li> </ul>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.parent_id","title":"parent_id","text":"<pre><code>parent_id: str\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.key","title":"key","text":"<pre><code>key: str\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.namespace","title":"namespace","text":"<pre><code>namespace: str = 'result'\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.category","title":"category","text":"<pre><code>category: Literal[OTHER] | None = None\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.file_size","title":"file_size","text":"<pre><code>file_size: int | None = None\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.mime_type","title":"mime_type","text":"<pre><code>mime_type: str | None = None\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.signed_url","title":"signed_url","text":"<pre><code>signed_url: str | None = None\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.signed_url_v2","title":"signed_url_v2","text":"<pre><code>signed_url_v2: str | None = None\n</code></pre>"},{"location":"resources/attachments/#albert.resources.attachments.Attachment.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, str] | None = None\n</code></pre>"},{"location":"resources/batch_data/","title":"Batch Data","text":""},{"location":"resources/batch_data/#albert.resources.batch_data","title":"albert.resources.batch_data","text":""},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchDatum","title":"BatchValuePatchDatum","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"attribute\": {\n      \"default\": \"lotId\",\n      \"title\": \"Attribute\",\n      \"type\": \"string\"\n    },\n    \"lotId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lotid\"\n    },\n    \"newValue\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Newvalue\"\n    },\n    \"oldValue\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Oldvalue\"\n    },\n    \"operation\": {\n      \"title\": \"Operation\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"operation\"\n  ],\n  \"title\": \"BatchValuePatchDatum\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>attribute</code>                 (<code>str</code>)             </li> <li> <code>lot_id</code>                 (<code>str | None</code>)             </li> <li> <code>new_value</code>                 (<code>str | None</code>)             </li> <li> <code>old_value</code>                 (<code>str | None</code>)             </li> <li> <code>operation</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchDatum.attribute","title":"attribute","text":"<pre><code>attribute: str = 'lotId'\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchDatum.lot_id","title":"lot_id","text":"<pre><code>lot_id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchDatum.new_value","title":"new_value","text":"<pre><code>new_value: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchDatum.old_value","title":"old_value","text":"<pre><code>old_value: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchDatum.operation","title":"operation","text":"<pre><code>operation: str\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValueId","title":"BatchValueId","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"colId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Colid\"\n    },\n    \"rowId\": {\n      \"title\": \"Rowid\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"rowId\"\n  ],\n  \"title\": \"BatchValueId\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>col_id</code>                 (<code>str | None</code>)             </li> <li> <code>row_id</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValueId.col_id","title":"col_id","text":"<pre><code>col_id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValueId.row_id","title":"row_id","text":"<pre><code>row_id: str\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchPayload","title":"BatchValuePatchPayload","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BatchValueId\": {\n      \"properties\": {\n        \"colId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Colid\"\n        },\n        \"rowId\": {\n          \"title\": \"Rowid\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"rowId\"\n      ],\n      \"title\": \"BatchValueId\",\n      \"type\": \"object\"\n    },\n    \"BatchValuePatchDatum\": {\n      \"properties\": {\n        \"attribute\": {\n          \"default\": \"lotId\",\n          \"title\": \"Attribute\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"newValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Newvalue\"\n        },\n        \"oldValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Oldvalue\"\n        },\n        \"operation\": {\n          \"title\": \"Operation\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"operation\"\n      ],\n      \"title\": \"BatchValuePatchDatum\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"Id\": {\n      \"$ref\": \"#/$defs/BatchValueId\"\n    },\n    \"data\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/BatchValuePatchDatum\"\n      },\n      \"title\": \"Data\",\n      \"type\": \"array\"\n    },\n    \"lotId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lotid\"\n    }\n  },\n  \"required\": [\n    \"Id\"\n  ],\n  \"title\": \"BatchValuePatchPayload\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>BatchValueId</code>)             </li> <li> <code>data</code>                 (<code>list[BatchValuePatchDatum]</code>)             </li> <li> <code>lot_id</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchPayload.id","title":"id","text":"<pre><code>id: BatchValueId\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchPayload.data","title":"data","text":"<pre><code>data: list[BatchValuePatchDatum]\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchValuePatchPayload.lot_id","title":"lot_id","text":"<pre><code>lot_id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataType","title":"BatchDataType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>TASK_ID</code>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataType.TASK_ID","title":"TASK_ID","text":"<pre><code>TASK_ID = 'taskId'\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataValue","title":"BatchDataValue","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"colId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Colid\"\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Type\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"isEditable\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Iseditable\"\n    },\n    \"unitCategory\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unitcategory\"\n    },\n    \"referenceValue\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Referencevalue\"\n    }\n  },\n  \"title\": \"BatchDataValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>col_id</code>                 (<code>str | None</code>)             </li> <li> <code>type</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> <li> <code>is_editable</code>                 (<code>bool | None</code>)             </li> <li> <code>unit_category</code>                 (<code>str | None</code>)             </li> <li> <code>reference_value</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataValue.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataValue.col_id","title":"col_id","text":"<pre><code>col_id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataValue.type","title":"type","text":"<pre><code>type: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataValue.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataValue.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataValue.is_editable","title":"is_editable","text":"<pre><code>is_editable: bool | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataValue.unit_category","title":"unit_category","text":"<pre><code>unit_category: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataValue.reference_value","title":"reference_value","text":"<pre><code>reference_value: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow","title":"BatchDataRow","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BatchDataRow\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"manufacturer\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Manufacturer\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unitcategory\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Category\"\n        },\n        \"isFormula\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Isformula\"\n        },\n        \"isLotParent\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Islotparent\"\n        },\n        \"Values\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/BatchDataValue\"\n          },\n          \"title\": \"Values\",\n          \"type\": \"array\"\n        },\n        \"ChildRows\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/BatchDataRow\"\n          },\n          \"title\": \"Childrows\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"BatchDataRow\",\n      \"type\": \"object\"\n    },\n    \"BatchDataValue\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"colId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Colid\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"isEditable\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Iseditable\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unitcategory\"\n        },\n        \"referenceValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Referencevalue\"\n        }\n      },\n      \"title\": \"BatchDataValue\",\n      \"type\": \"object\"\n    }\n  },\n  \"$ref\": \"#/$defs/BatchDataRow\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>row_id</code>                 (<code>str | None</code>)             </li> <li> <code>type</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>manufacturer</code>                 (<code>str | None</code>)             </li> <li> <code>unit_category</code>                 (<code>str | None</code>)             </li> <li> <code>category</code>                 (<code>str | None</code>)             </li> <li> <code>is_formula</code>                 (<code>bool | None</code>)             </li> <li> <code>is_lot_parent</code>                 (<code>bool | None</code>)             </li> <li> <code>values</code>                 (<code>list[BatchDataValue]</code>)             </li> <li> <code>child_rows</code>                 (<code>list[BatchDataRow]</code>)             </li> </ul>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.row_id","title":"row_id","text":"<pre><code>row_id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.type","title":"type","text":"<pre><code>type: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.manufacturer","title":"manufacturer","text":"<pre><code>manufacturer: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.unit_category","title":"unit_category","text":"<pre><code>unit_category: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.category","title":"category","text":"<pre><code>category: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.is_formula","title":"is_formula","text":"<pre><code>is_formula: bool | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.is_lot_parent","title":"is_lot_parent","text":"<pre><code>is_lot_parent: bool | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.values","title":"values","text":"<pre><code>values: list[BatchDataValue]\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataRow.child_rows","title":"child_rows","text":"<pre><code>child_rows: list[BatchDataRow]\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn","title":"BatchDataColumn","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BatchDataColumn\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"colId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Colid\"\n        },\n        \"batchTotal\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchtotal\"\n        },\n        \"referenceTotal\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Referencetotal\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"productTotal\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Producttotal\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"designColId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Designcolid\"\n        },\n        \"Lots\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/BatchDataColumn\"\n          },\n          \"title\": \"Lots\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"BatchDataColumn\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"$ref\": \"#/$defs/BatchDataColumn\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>col_id</code>                 (<code>str | None</code>)             </li> <li> <code>batch_total</code>                 (<code>str | None</code>)             </li> <li> <code>reference_total</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>product_total</code>                 (<code>float | None</code>)             </li> <li> <code>parent_id</code>                 (<code>str | None</code>)             </li> <li> <code>design_col_id</code>                 (<code>str | None</code>)             </li> <li> <code>lots</code>                 (<code>list[BatchDataColumn]</code>)             </li> </ul>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.col_id","title":"col_id","text":"<pre><code>col_id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.batch_total","title":"batch_total","text":"<pre><code>batch_total: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.reference_total","title":"reference_total","text":"<pre><code>reference_total: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.status","title":"status","text":"<pre><code>status: Status | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.product_total","title":"product_total","text":"<pre><code>product_total: float | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.parent_id","title":"parent_id","text":"<pre><code>parent_id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.design_col_id","title":"design_col_id","text":"<pre><code>design_col_id: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchDataColumn.lots","title":"lots","text":"<pre><code>lots: list[BatchDataColumn]\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchData","title":"BatchData","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BatchDataColumn\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"colId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Colid\"\n        },\n        \"batchTotal\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchtotal\"\n        },\n        \"referenceTotal\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Referencetotal\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"productTotal\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Producttotal\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"designColId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Designcolid\"\n        },\n        \"Lots\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/BatchDataColumn\"\n          },\n          \"title\": \"Lots\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"BatchDataColumn\",\n      \"type\": \"object\"\n    },\n    \"BatchDataRow\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"manufacturer\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Manufacturer\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unitcategory\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Category\"\n        },\n        \"isFormula\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Isformula\"\n        },\n        \"isLotParent\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Islotparent\"\n        },\n        \"Values\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/BatchDataValue\"\n          },\n          \"title\": \"Values\",\n          \"type\": \"array\"\n        },\n        \"ChildRows\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/BatchDataRow\"\n          },\n          \"title\": \"Childrows\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"BatchDataRow\",\n      \"type\": \"object\"\n    },\n    \"BatchDataValue\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"colId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Colid\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"isEditable\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Iseditable\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unitcategory\"\n        },\n        \"referenceValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Referencevalue\"\n        }\n      },\n      \"title\": \"BatchDataValue\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"size\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Size\"\n    },\n    \"lastKey\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lastkey\"\n    },\n    \"Product\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/BatchDataColumn\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Product\"\n    },\n    \"Rows\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/BatchDataRow\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rows\"\n    }\n  },\n  \"title\": \"BatchData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>id</code>                 (<code>TaskId | None</code>)             </li> <li> <code>size</code>                 (<code>int | None</code>)             </li> <li> <code>last_key</code>                 (<code>str | None</code>)             </li> <li> <code>product</code>                 (<code>list[BatchDataColumn] | None</code>)             </li> <li> <code>rows</code>                 (<code>list[BatchDataRow] | None</code>)             </li> </ul>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchData.id","title":"id","text":"<pre><code>id: TaskId | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchData.size","title":"size","text":"<pre><code>size: int | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchData.last_key","title":"last_key","text":"<pre><code>last_key: str | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchData.product","title":"product","text":"<pre><code>product: list[BatchDataColumn] | None = None\n</code></pre>"},{"location":"resources/batch_data/#albert.resources.batch_data.BatchData.rows","title":"rows","text":"<pre><code>rows: list[BatchDataRow] | None = None\n</code></pre>"},{"location":"resources/btdataset/","title":"Breakthrough Datasets","text":""},{"location":"resources/btdataset/#albert.resources.btdataset","title":"albert.resources.btdataset","text":""},{"location":"resources/btdataset/#albert.resources.btdataset.BTDatasetReferences","title":"BTDatasetReferences","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"project_ids\": {\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"title\": \"Project Ids\",\n      \"type\": \"array\"\n    },\n    \"data_column_ids\": {\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"title\": \"Data Column Ids\",\n      \"type\": \"array\"\n    },\n    \"sheet_ids\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sheet Ids\"\n    },\n    \"filter\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Filter\"\n    }\n  },\n  \"required\": [\n    \"project_ids\",\n    \"data_column_ids\"\n  ],\n  \"title\": \"BTDatasetReferences\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>project_ids</code>                 (<code>list[str]</code>)             </li> <li> <code>data_column_ids</code>                 (<code>list[str]</code>)             </li> <li> <code>sheet_ids</code>                 (<code>list[str] | None</code>)             </li> <li> <code>filter</code>                 (<code>dict[str, Any] | None</code>)             </li> </ul>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDatasetReferences.project_ids","title":"project_ids","text":"<pre><code>project_ids: list[str]\n</code></pre>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDatasetReferences.data_column_ids","title":"data_column_ids","text":"<pre><code>data_column_ids: list[str]\n</code></pre>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDatasetReferences.sheet_ids","title":"sheet_ids","text":"<pre><code>sheet_ids: list[str] | None = None\n</code></pre>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDatasetReferences.filter","title":"filter","text":"<pre><code>filter: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDataset","title":"BTDataset","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BTDatasetReferences\": {\n      \"properties\": {\n        \"project_ids\": {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"title\": \"Project Ids\",\n          \"type\": \"array\"\n        },\n        \"data_column_ids\": {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"title\": \"Data Column Ids\",\n          \"type\": \"array\"\n        },\n        \"sheet_ids\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sheet Ids\"\n        },\n        \"filter\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filter\"\n        }\n      },\n      \"required\": [\n        \"project_ids\",\n        \"data_column_ids\"\n      ],\n      \"title\": \"BTDatasetReferences\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"key\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Key\"\n    },\n    \"fileName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Filename\"\n    },\n    \"Report\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"References\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/BTDatasetReferences\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"BTDataset\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>BTDatasetId | None</code>)             </li> <li> <code>key</code>                 (<code>str | None</code>)             </li> <li> <code>file_name</code>                 (<code>str | None</code>)             </li> <li> <code>report</code>                 (<code>EntityLink | None</code>)             </li> <li> <code>references</code>                 (<code>BTDatasetReferences | None</code>)             </li> </ul>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDataset.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDataset.id","title":"id","text":"<pre><code>id: BTDatasetId | None = None\n</code></pre>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDataset.key","title":"key","text":"<pre><code>key: str | None = None\n</code></pre>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDataset.file_name","title":"file_name","text":"<pre><code>file_name: str | None = None\n</code></pre>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDataset.report","title":"report","text":"<pre><code>report: EntityLink | None = None\n</code></pre>"},{"location":"resources/btdataset/#albert.resources.btdataset.BTDataset.references","title":"references","text":"<pre><code>references: BTDatasetReferences | None = None\n</code></pre>"},{"location":"resources/btinsight/","title":"Breakthrough Insights","text":""},{"location":"resources/btinsight/#albert.resources.btinsight","title":"albert.resources.btinsight","text":""},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightCategory","title":"BTInsightCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>OPTIMIZER</code> <code>CUSTOM_OPTIMIZER</code> <code>IMPACT_CHART</code> <code>MOLECULE</code> <code>SMART_DOE</code> <code>GENERATE</code>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightCategory.OPTIMIZER","title":"OPTIMIZER","text":"<pre><code>OPTIMIZER = 'Optimizer'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightCategory.CUSTOM_OPTIMIZER","title":"CUSTOM_OPTIMIZER","text":"<pre><code>CUSTOM_OPTIMIZER = 'Custom Optimizer'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightCategory.IMPACT_CHART","title":"IMPACT_CHART","text":"<pre><code>IMPACT_CHART = 'Impact Chart'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightCategory.MOLECULE","title":"MOLECULE","text":"<pre><code>MOLECULE = 'Molecule'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightCategory.SMART_DOE","title":"SMART_DOE","text":"<pre><code>SMART_DOE = 'Smart DOE'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightCategory.GENERATE","title":"GENERATE","text":"<pre><code>GENERATE = 'Generate'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightState","title":"BTInsightState","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>QUEUED</code> <code>BUILDING_MODELS</code> <code>GENERATING_CANDIDATES</code> <code>COMPLETE</code> <code>ERROR</code>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightState.QUEUED","title":"QUEUED","text":"<pre><code>QUEUED = 'Queued'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightState.BUILDING_MODELS","title":"BUILDING_MODELS","text":"<pre><code>BUILDING_MODELS = 'Building Models'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightState.GENERATING_CANDIDATES","title":"GENERATING_CANDIDATES","text":"<pre><code>GENERATING_CANDIDATES = 'Generating Candidates'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightState.COMPLETE","title":"COMPLETE","text":"<pre><code>COMPLETE = 'Complete'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightState.ERROR","title":"ERROR","text":"<pre><code>ERROR = 'Error'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightPayloadType","title":"BTInsightPayloadType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>BREAKTHROUGH</code> <code>ALBERTO</code>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightPayloadType.BREAKTHROUGH","title":"BREAKTHROUGH","text":"<pre><code>BREAKTHROUGH = 'Breakthrough'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightPayloadType.ALBERTO","title":"ALBERTO","text":"<pre><code>ALBERTO = 'Alberto'\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightRegistry","title":"BTInsightRegistry","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>Registry for the BTInsight.</p> <p>Registry contains result metadata for the BTInsight. Additional attributes can be added to the registry as needed.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Registry for the BTInsight.\\n\\nRegistry contains result metadata for the BTInsight.\\nAdditional attributes can be added to the registry as needed.\",\n  \"properties\": {\n    \"BuildLogs\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Buildlogs\"\n    },\n    \"Metrics\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metrics\"\n    },\n    \"Settings\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Settings\"\n    }\n  },\n  \"title\": \"BTInsightRegistry\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>build_logs</code>                 (<code>dict[str, Any] | None</code>)             </li> <li> <code>metrics</code>                 (<code>dict[str, Any] | None</code>)             </li> <li> <code>settings</code>                 (<code>dict[str, Any] | None</code>)             </li> </ul>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightRegistry.build_logs","title":"build_logs","text":"<pre><code>build_logs: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightRegistry.metrics","title":"metrics","text":"<pre><code>metrics: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsightRegistry.settings","title":"settings","text":"<pre><code>settings: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight","title":"BTInsight","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BTInsightCategory\": {\n      \"enum\": [\n        \"Optimizer\",\n        \"Custom Optimizer\",\n        \"Impact Chart\",\n        \"Molecule\",\n        \"Smart DOE\",\n        \"Generate\"\n      ],\n      \"title\": \"BTInsightCategory\",\n      \"type\": \"string\"\n    },\n    \"BTInsightPayloadType\": {\n      \"enum\": [\n        \"Breakthrough\",\n        \"Alberto\"\n      ],\n      \"title\": \"BTInsightPayloadType\",\n      \"type\": \"string\"\n    },\n    \"BTInsightRegistry\": {\n      \"description\": \"Registry for the BTInsight.\\n\\nRegistry contains result metadata for the BTInsight.\\nAdditional attributes can be added to the registry as needed.\",\n      \"properties\": {\n        \"BuildLogs\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Buildlogs\"\n        },\n        \"Metrics\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metrics\"\n        },\n        \"Settings\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Settings\"\n        }\n      },\n      \"title\": \"BTInsightRegistry\",\n      \"type\": \"object\"\n    },\n    \"BTInsightState\": {\n      \"enum\": [\n        \"Queued\",\n        \"Building Models\",\n        \"Generating Candidates\",\n        \"Complete\",\n        \"Error\"\n      ],\n      \"title\": \"BTInsightState\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"$ref\": \"#/$defs/BTInsightCategory\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    },\n    \"state\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/BTInsightState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"datasetId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datasetid\"\n    },\n    \"modelSessionId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Modelsessionid\"\n    },\n    \"modelId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Modelid\"\n    },\n    \"outputKey\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Outputkey\"\n    },\n    \"startTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Starttime\"\n    },\n    \"endTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Endtime\"\n    },\n    \"totalTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Totaltime\"\n    },\n    \"RawPayload\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rawpayload\"\n    },\n    \"payloadType\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/BTInsightPayloadType\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Registry\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/BTInsightRegistry\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"contentEdited\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Contentedited\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"category\"\n  ],\n  \"title\": \"BTInsight\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>category</code>                 (<code>BTInsightCategory</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, Any] | None</code>)             </li> <li> <code>state</code>                 (<code>BTInsightState | None</code>)             </li> <li> <code>id</code>                 (<code>BTInsightId | None</code>)             </li> <li> <code>dataset_id</code>                 (<code>BTDatasetId | None</code>)             </li> <li> <code>model_session_id</code>                 (<code>BTModelSessionId | None</code>)             </li> <li> <code>model_id</code>                 (<code>BTModelId | None</code>)             </li> <li> <code>output_key</code>                 (<code>str | None</code>)             </li> <li> <code>start_time</code>                 (<code>str | None</code>)             </li> <li> <code>end_time</code>                 (<code>str | None</code>)             </li> <li> <code>total_time</code>                 (<code>str | None</code>)             </li> <li> <code>raw_payload</code>                 (<code>dict[str, Any] | None</code>)             </li> <li> <code>payload_type</code>                 (<code>BTInsightPayloadType | None</code>)             </li> <li> <code>registry</code>                 (<code>BTInsightRegistry | None</code>)             </li> <li> <code>content_edited</code>                 (<code>bool | None</code>)             </li> </ul>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.category","title":"category","text":"<pre><code>category: BTInsightCategory\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.state","title":"state","text":"<pre><code>state: BTInsightState | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.id","title":"id","text":"<pre><code>id: BTInsightId | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.dataset_id","title":"dataset_id","text":"<pre><code>dataset_id: BTDatasetId | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.model_session_id","title":"model_session_id","text":"<pre><code>model_session_id: BTModelSessionId | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.model_id","title":"model_id","text":"<pre><code>model_id: BTModelId | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.output_key","title":"output_key","text":"<pre><code>output_key: str | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.start_time","title":"start_time","text":"<pre><code>start_time: str | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.end_time","title":"end_time","text":"<pre><code>end_time: str | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.total_time","title":"total_time","text":"<pre><code>total_time: str | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.raw_payload","title":"raw_payload","text":"<pre><code>raw_payload: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.payload_type","title":"payload_type","text":"<pre><code>payload_type: BTInsightPayloadType | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.registry","title":"registry","text":"<pre><code>registry: BTInsightRegistry | None = None\n</code></pre>"},{"location":"resources/btinsight/#albert.resources.btinsight.BTInsight.content_edited","title":"content_edited","text":"<pre><code>content_edited: bool | None = None\n</code></pre>"},{"location":"resources/btmodel/","title":"Breakthrough Model","text":""},{"location":"resources/btmodel/#albert.resources.btmodel","title":"albert.resources.btmodel","text":""},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSessionCategory","title":"BTModelSessionCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Enumeration for BTModelSession categories.</p> <p>Attributes:</p> Name Type Description <code>USER_MODEL</code> <code>ALBERT_MODEL</code>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSessionCategory.USER_MODEL","title":"USER_MODEL","text":"<pre><code>USER_MODEL = 'userModel'\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSessionCategory.ALBERT_MODEL","title":"ALBERT_MODEL","text":"<pre><code>ALBERT_MODEL = 'albertModel'\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelRegistry","title":"BTModelRegistry","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>Registry for BTModelSession.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Registry for BTModelSession.\",\n  \"properties\": {\n    \"BuildLogs\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Buildlogs\"\n    },\n    \"Metrics\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metrics\"\n    }\n  },\n  \"title\": \"BTModelRegistry\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>build_logs</code>                 (<code>dict[str, Any] | None</code>)             </li> <li> <code>metrics</code>                 (<code>dict[str, Any] | None</code>)             </li> </ul>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelRegistry.build_logs","title":"build_logs","text":"<pre><code>build_logs: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelRegistry.metrics","title":"metrics","text":"<pre><code>metrics: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession","title":"BTModelSession","text":"<p>               Bases: <code>BaseResource</code></p> <p>Parent session for a set of BTModels.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the model session.</p> <code>category</code> <code>BTModelSessionCategory</code> <p>The category of the model session (e.g., userModel, albertModel).</p> <code>id</code> <code>BTModelSessionId | None</code> <p>The unique identifier for the model session.</p> <code>dataset_id</code> <code>BTDatasetId</code> <p>The identifier for the dataset associated with the model session.</p> <code>default_model</code> <code>str | None</code> <p>The default model name for the session, if applicable.</p> <code>total_time</code> <code>str | None</code> <p>The total time taken for the session, if applicable.</p> <code>model_count</code> <code>int | None</code> <p>The number of models in the session, if applicable.</p> <code>target</code> <code>list[str] | None</code> <p>The target variables for the models in the session, if applicable.</p> <code>registry</code> <code>BTModelRegistry | None</code> <p>The registry containing build logs and metrics for the session, if applicable.</p> <code>albert_model_details</code> <code>dict[str, Any] | None</code> <p>Details specific to the Albert model, if applicable.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BTModelRegistry\": {\n      \"description\": \"Registry for BTModelSession.\",\n      \"properties\": {\n        \"BuildLogs\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Buildlogs\"\n        },\n        \"Metrics\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metrics\"\n        }\n      },\n      \"title\": \"BTModelRegistry\",\n      \"type\": \"object\"\n    },\n    \"BTModelSessionCategory\": {\n      \"description\": \"Enumeration for BTModelSession categories.\",\n      \"enum\": [\n        \"userModel\",\n        \"albertModel\"\n      ],\n      \"title\": \"BTModelSessionCategory\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Parent session for a set of BTModels.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the model session.\\ncategory : BTModelSessionCategory\\n    The category of the model session (e.g., userModel, albertModel).\\nid : BTModelSessionId | None\\n    The unique identifier for the model session.\\ndataset_id : BTDatasetId\\n    The identifier for the dataset associated with the model session.\\ndefault_model : str | None\\n    The default model name for the session, if applicable.\\ntotal_time : str | None\\n    The total time taken for the session, if applicable.\\nmodel_count : int | None\\n    The number of models in the session, if applicable.\\ntarget : list[str] | None\\n    The target variables for the models in the session, if applicable.\\nregistry : BTModelRegistry | None\\n    The registry containing build logs and metrics for the session, if applicable.\\nalbert_model_details : dict[str, Any] | None\\n    Details specific to the Albert model, if applicable.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"$ref\": \"#/$defs/BTModelSessionCategory\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"datasetId\": {\n      \"title\": \"Datasetid\",\n      \"type\": \"string\"\n    },\n    \"defaultModel\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Defaultmodel\"\n    },\n    \"totalTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Totaltime\"\n    },\n    \"modelCount\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Modelcount\"\n    },\n    \"target\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Target\"\n    },\n    \"Registry\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/BTModelRegistry\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertModelDetails\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertmodeldetails\"\n    },\n    \"flag\": {\n      \"default\": false,\n      \"title\": \"Flag\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"category\",\n    \"datasetId\"\n  ],\n  \"title\": \"BTModelSession\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>category</code>                 (<code>BTModelSessionCategory</code>)             </li> <li> <code>id</code>                 (<code>BTModelSessionId | None</code>)             </li> <li> <code>dataset_id</code>                 (<code>BTDatasetId</code>)             </li> <li> <code>default_model</code>                 (<code>str | None</code>)             </li> <li> <code>total_time</code>                 (<code>str | None</code>)             </li> <li> <code>model_count</code>                 (<code>int | None</code>)             </li> <li> <code>target</code>                 (<code>list[str] | None</code>)             </li> <li> <code>registry</code>                 (<code>BTModelRegistry | None</code>)             </li> <li> <code>albert_model_details</code>                 (<code>dict[str, Any] | None</code>)             </li> <li> <code>flag</code>                 (<code>bool</code>)             </li> </ul>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.category","title":"category","text":"<pre><code>category: BTModelSessionCategory\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.id","title":"id","text":"<pre><code>id: BTModelSessionId | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.dataset_id","title":"dataset_id","text":"<pre><code>dataset_id: BTDatasetId\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.default_model","title":"default_model","text":"<pre><code>default_model: str | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.total_time","title":"total_time","text":"<pre><code>total_time: str | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.model_count","title":"model_count","text":"<pre><code>model_count: int | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.target","title":"target","text":"<pre><code>target: list[str] | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.registry","title":"registry","text":"<pre><code>registry: BTModelRegistry | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.albert_model_details","title":"albert_model_details","text":"<pre><code>albert_model_details: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelSession.flag","title":"flag","text":"<pre><code>flag: bool = False\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelType","title":"BTModelType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Enumeration for BTModel types.</p> <p>Attributes:</p> Name Type Description <code>SESSION</code> <code>DETACHED</code>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelType.SESSION","title":"SESSION","text":"<pre><code>SESSION = 'Session'\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelType.DETACHED","title":"DETACHED","text":"<pre><code>DETACHED = 'Detached'\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelState","title":"BTModelState","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Enumeration for BTModel states.</p> <p>Attributes:</p> Name Type Description <code>QUEUED</code> <code>BUILDING_MODELS</code> <code>GENERATING_CANDIDATES</code> <code>COMPLETE</code> <code>ERROR</code>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelState.QUEUED","title":"QUEUED","text":"<pre><code>QUEUED = 'Queued'\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelState.BUILDING_MODELS","title":"BUILDING_MODELS","text":"<pre><code>BUILDING_MODELS = 'Building Models'\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelState.GENERATING_CANDIDATES","title":"GENERATING_CANDIDATES","text":"<pre><code>GENERATING_CANDIDATES = 'Generating Candidates'\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelState.COMPLETE","title":"COMPLETE","text":"<pre><code>COMPLETE = 'Complete'\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModelState.ERROR","title":"ERROR","text":"<pre><code>ERROR = 'Error'\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel","title":"BTModel","text":"<p>               Bases: <code>BaseResource</code></p> <p>A single Breakthrough model.</p> <p>A BTModel may have a <code>parent_id</code> or be a detached, standalone model.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the model.</p> <code>id</code> <code>BTModelId | None</code> <p>The unique identifier for the model.</p> <code>dataset_id</code> <code>BTDatasetId | None</code> <p>The identifier for the dataset associated with the model.</p> <code>parent_id</code> <code>BTModelSessionId | None</code> <p>The identifier for the parent model session, if applicable.</p> <code>metadata</code> <code>dict[str, Any] | None</code> <p>Metadata associated with the model, if applicable.</p> <code>type</code> <code>BTModelType | None</code> <p>The type of the model (e.g., Session, Detached).</p> <code>state</code> <code>BTModelState | None</code> <p>The current state of the model (e.g., Queued, Building Models, Complete).</p> <code>target</code> <code>list[str] | None</code> <p>The target variables for the model, if applicable.</p> <code>start_time</code> <code>str | None</code> <p>The start time of the model creation, if applicable.</p> <code>end_time</code> <code>str | None</code> <p>The end time of the model creation, if applicable.</p> <code>total_time</code> <code>str | None</code> <p>The total time taken for the model creation, if applicable.</p> <code>model_binary_key</code> <code>str | None</code> <p>The storage key for the model data, if applicable.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BTModelState\": {\n      \"description\": \"Enumeration for BTModel states.\",\n      \"enum\": [\n        \"Queued\",\n        \"Building Models\",\n        \"Generating Candidates\",\n        \"Complete\",\n        \"Error\"\n      ],\n      \"title\": \"BTModelState\",\n      \"type\": \"string\"\n    },\n    \"BTModelType\": {\n      \"description\": \"Enumeration for BTModel types.\",\n      \"enum\": [\n        \"Session\",\n        \"Detached\"\n      ],\n      \"title\": \"BTModelType\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A single Breakthrough model.\\n\\nA BTModel may have a `parent_id` or be a detached, standalone model.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the model.\\nid : BTModelId | None\\n    The unique identifier for the model.\\ndataset_id : BTDatasetId | None\\n    The identifier for the dataset associated with the model.\\nparent_id : BTModelSessionId | None\\n    The identifier for the parent model session, if applicable.\\nmetadata : dict[str, Any] | None\\n    Metadata associated with the model, if applicable.\\ntype : BTModelType | None\\n    The type of the model (e.g., Session, Detached).\\nstate : BTModelState | None\\n    The current state of the model (e.g., Queued, Building Models, Complete).\\ntarget : list[str] | None\\n    The target variables for the model, if applicable.\\nstart_time : str | None\\n    The start time of the model creation, if applicable.\\nend_time : str | None\\n    The end time of the model creation, if applicable.\\ntotal_time : str | None\\n    The total time taken for the model creation, if applicable.\\nmodel_binary_key : str | None\\n    The storage key for the model data, if applicable.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"datasetId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datasetid\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/BTModelType\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"state\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/BTModelState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"target\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Target\"\n    },\n    \"startTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Starttime\"\n    },\n    \"endTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Endtime\"\n    },\n    \"totalTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Totaltime\"\n    },\n    \"modelBinaryKey\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Modelbinarykey\"\n    },\n    \"flag\": {\n      \"default\": false,\n      \"title\": \"Flag\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"BTModel\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>BTModelId | None</code>)             </li> <li> <code>dataset_id</code>                 (<code>BTDatasetId | None</code>)             </li> <li> <code>parent_id</code>                 (<code>BTModelSessionId | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, Any] | None</code>)             </li> <li> <code>type</code>                 (<code>BTModelType | None</code>)             </li> <li> <code>state</code>                 (<code>BTModelState | None</code>)             </li> <li> <code>target</code>                 (<code>list[str] | None</code>)             </li> <li> <code>start_time</code>                 (<code>str | None</code>)             </li> <li> <code>end_time</code>                 (<code>str | None</code>)             </li> <li> <code>total_time</code>                 (<code>str | None</code>)             </li> <li> <code>model_binary_key</code>                 (<code>str | None</code>)             </li> <li> <code>flag</code>                 (<code>bool</code>)             </li> </ul>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.id","title":"id","text":"<pre><code>id: BTModelId | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.dataset_id","title":"dataset_id","text":"<pre><code>dataset_id: BTDatasetId | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.parent_id","title":"parent_id","text":"<pre><code>parent_id: BTModelSessionId | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, Any] | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.type","title":"type","text":"<pre><code>type: BTModelType | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.state","title":"state","text":"<pre><code>state: BTModelState | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.target","title":"target","text":"<pre><code>target: list[str] | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.start_time","title":"start_time","text":"<pre><code>start_time: str | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.end_time","title":"end_time","text":"<pre><code>end_time: str | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.total_time","title":"total_time","text":"<pre><code>total_time: str | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.model_binary_key","title":"model_binary_key","text":"<pre><code>model_binary_key: str | None = None\n</code></pre>"},{"location":"resources/btmodel/#albert.resources.btmodel.BTModel.flag","title":"flag","text":"<pre><code>flag: bool = False\n</code></pre>"},{"location":"resources/cas/","title":"Cas","text":""},{"location":"resources/cas/#albert.resources.cas","title":"albert.resources.cas","text":""},{"location":"resources/cas/#albert.resources.cas.CasCategory","title":"CasCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>USER</code> <code>VERISK</code> <code>TSCA_PUBLIC</code> <code>TSCA_PRIVATE</code> <code>NOT_TSCA</code> <code>EXTERNAL</code> <code>UNKNOWN</code> <code>CL_INVENTORY_UPLOAD</code>"},{"location":"resources/cas/#albert.resources.cas.CasCategory.USER","title":"USER","text":"<pre><code>USER = 'User'\n</code></pre>"},{"location":"resources/cas/#albert.resources.cas.CasCategory.VERISK","title":"VERISK","text":"<pre><code>VERISK = 'Verisk'\n</code></pre>"},{"location":"resources/cas/#albert.resources.cas.CasCategory.TSCA_PUBLIC","title":"TSCA_PUBLIC","text":"<pre><code>TSCA_PUBLIC = 'TSCA - Public'\n</code></pre>"},{"location":"resources/cas/#albert.resources.cas.CasCategory.TSCA_PRIVATE","title":"TSCA_PRIVATE","text":"<pre><code>TSCA_PRIVATE = 'TSCA - Private'\n</code></pre>"},{"location":"resources/cas/#albert.resources.cas.CasCategory.NOT_TSCA","title":"NOT_TSCA","text":"<pre><code>NOT_TSCA = 'not TSCA'\n</code></pre>"},{"location":"resources/cas/#albert.resources.cas.CasCategory.EXTERNAL","title":"EXTERNAL","text":"<pre><code>EXTERNAL = 'CAS linked to External Database'\n</code></pre>"},{"location":"resources/cas/#albert.resources.cas.CasCategory.UNKNOWN","title":"UNKNOWN","text":"<pre><code>UNKNOWN = 'Unknown (Trade Secret)'\n</code></pre>"},{"location":"resources/cas/#albert.resources.cas.CasCategory.CL_INVENTORY_UPLOAD","title":"CL_INVENTORY_UPLOAD","text":"<pre><code>CL_INVENTORY_UPLOAD = 'CL_Inventory Upload'\n</code></pre>"},{"location":"resources/cas/#albert.resources.cas.Hazard","title":"Hazard","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a chemical hazard.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a chemical hazard.\",\n  \"properties\": {\n    \"subCategory\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Hazard subcategory\",\n      \"title\": \"Subcategory\"\n    },\n    \"hCode\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Hazard code\",\n      \"title\": \"Hcode\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Hazard category\",\n      \"title\": \"Category\"\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Hazard classification\",\n      \"title\": \"Class\"\n    },\n    \"hCodeText\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Hazard code text\",\n      \"title\": \"Hcodetext\"\n    }\n  },\n  \"title\": \"Hazard\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>sub_category</code>                 (<code>str | None</code>)             </li> <li> <code>h_code</code>                 (<code>str | None</code>)             </li> <li> <code>category</code>                 (<code>str | float | None</code>)             </li> <li> <code>hazard_class</code>                 (<code>str | None</code>)             </li> <li> <code>h_code_text</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/cas/#albert.resources.cas.Hazard.sub_category","title":"sub_category","text":"<pre><code>sub_category: str | None = None\n</code></pre> <p>Hazard subcategory</p>"},{"location":"resources/cas/#albert.resources.cas.Hazard.h_code","title":"h_code","text":"<pre><code>h_code: str | None = None\n</code></pre> <p>Hazard code</p>"},{"location":"resources/cas/#albert.resources.cas.Hazard.category","title":"category","text":"<pre><code>category: str | float | None = None\n</code></pre> <p>Hazard category</p>"},{"location":"resources/cas/#albert.resources.cas.Hazard.hazard_class","title":"hazard_class","text":"<pre><code>hazard_class: str | None = None\n</code></pre> <p>Hazard classification</p>"},{"location":"resources/cas/#albert.resources.cas.Hazard.h_code_text","title":"h_code_text","text":"<pre><code>h_code_text: str | None = None\n</code></pre> <p>Hazard code text</p>"},{"location":"resources/cas/#albert.resources.cas.Cas","title":"Cas","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a CAS entity.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents a CAS entity.\",\n  \"properties\": {\n    \"number\": {\n      \"description\": \"The CAS number.\",\n      \"title\": \"Number\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Name of the CAS.\",\n      \"title\": \"Name\"\n    },\n    \"description\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The description or name of the CAS.\",\n      \"title\": \"Description\"\n    },\n    \"notes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Notes related to the CAS.\",\n      \"title\": \"Notes\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/CasCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The category of the CAS.\"\n    },\n    \"casSmiles\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"CAS SMILES notation.\",\n      \"title\": \"Cassmiles\"\n    },\n    \"inchiKey\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"InChIKey of the CAS.\",\n      \"title\": \"Inchikey\"\n    },\n    \"iUpacName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"IUPAC name of the CAS.\",\n      \"title\": \"Iupacname\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The AlbertID of the CAS.\",\n      \"title\": \"Albertid\"\n    },\n    \"hazards\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/Hazard\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Hazards associated with the CAS.\",\n      \"title\": \"Hazards\"\n    },\n    \"wgk\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"German Water Hazard Class (WGK) number.\",\n      \"title\": \"Wgk\"\n    },\n    \"ecListNo\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"European Community (EC) number.\",\n      \"title\": \"Eclistno\"\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Type of the CAS.\",\n      \"title\": \"Type\"\n    },\n    \"classificationType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Classification type of the CAS.\",\n      \"title\": \"Classificationtype\"\n    },\n    \"order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"CAS order.\",\n      \"title\": \"Order\"\n    }\n  },\n  \"required\": [\n    \"number\"\n  ],\n  \"title\": \"Cas\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>number</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>description</code>                 (<code>str | None</code>)             </li> <li> <code>notes</code>                 (<code>str | None</code>)             </li> <li> <code>category</code>                 (<code>CasCategory | None</code>)             </li> <li> <code>smiles</code>                 (<code>str | None</code>)             </li> <li> <code>inchi_key</code>                 (<code>str | None</code>)             </li> <li> <code>iupac_name</code>                 (<code>str | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>hazards</code>                 (<code>list[Hazard] | None</code>)             </li> <li> <code>wgk</code>                 (<code>str | None</code>)             </li> <li> <code>ec_number</code>                 (<code>str | None</code>)             </li> <li> <code>type</code>                 (<code>str | None</code>)             </li> <li> <code>classification_type</code>                 (<code>str | None</code>)             </li> <li> <code>order</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/cas/#albert.resources.cas.Cas.number","title":"number","text":"<pre><code>number: str\n</code></pre> <p>The CAS number.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre> <p>Name of the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.description","title":"description","text":"<pre><code>description: str | None = None\n</code></pre> <p>The description or name of the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.notes","title":"notes","text":"<pre><code>notes: str | None = None\n</code></pre> <p>Notes related to the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.category","title":"category","text":"<pre><code>category: CasCategory | None = None\n</code></pre> <p>The category of the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.smiles","title":"smiles","text":"<pre><code>smiles: str | None = None\n</code></pre> <p>CAS SMILES notation.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.inchi_key","title":"inchi_key","text":"<pre><code>inchi_key: str | None = None\n</code></pre> <p>InChIKey of the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.iupac_name","title":"iupac_name","text":"<pre><code>iupac_name: str | None = None\n</code></pre> <p>IUPAC name of the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre> <p>The AlbertID of the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.hazards","title":"hazards","text":"<pre><code>hazards: list[Hazard] | None = None\n</code></pre> <p>Hazards associated with the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.wgk","title":"wgk","text":"<pre><code>wgk: str | None = None\n</code></pre> <p>German Water Hazard Class (WGK) number.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.ec_number","title":"ec_number","text":"<pre><code>ec_number: str | None = None\n</code></pre> <p>European Community (EC) number.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.type","title":"type","text":"<pre><code>type: str | None = None\n</code></pre> <p>Type of the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.classification_type","title":"classification_type","text":"<pre><code>classification_type: str | None = None\n</code></pre> <p>Classification type of the CAS.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.order","title":"order","text":"<pre><code>order: str | None = None\n</code></pre> <p>CAS order.</p>"},{"location":"resources/cas/#albert.resources.cas.Cas.from_string","title":"from_string","text":"<pre><code>from_string(*, number: str) -&gt; Cas\n</code></pre> <p>Creates a Cas object from a string.</p> <p>Parameters:</p> Name Type Description Default <code>number</code> <code>str</code> <p>The CAS number.</p> required <p>Returns:</p> Type Description <code>Cas</code> <p>The Cas object created from the string.</p> Source code in <code>src/albert/resources/cas.py</code> <pre><code>@classmethod\ndef from_string(cls, *, number: str) -&gt; \"Cas\":\n    \"\"\"\n    Creates a Cas object from a string.\n\n    Parameters\n    ----------\n    number : str\n        The CAS number.\n\n    Returns\n    -------\n    Cas\n        The Cas object created from the string.\n    \"\"\"\n    return cls(number=number)\n</code></pre>"},{"location":"resources/companies/","title":"Companies","text":""},{"location":"resources/companies/#albert.resources.companies","title":"albert.resources.companies","text":""},{"location":"resources/companies/#albert.resources.companies.Company","title":"Company","text":"<p>               Bases: <code>BaseResource</code></p> <p>Company is a Pydantic model representing a company entity.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the company.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the company. Set when the company is retrieved from Albert.</p> <code>distance</code> <code>float | None</code> <p>The scores of a company in a search result, optional. Read-only.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"distance\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Distance\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"Company\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>distance</code>                 (<code>float | None</code>)             </li> </ul>"},{"location":"resources/companies/#albert.resources.companies.Company.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/companies/#albert.resources.companies.Company.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/companies/#albert.resources.companies.Company.distance","title":"distance","text":"<pre><code>distance: float | None = None\n</code></pre>"},{"location":"resources/custom_fields/","title":"Custom Fields","text":""},{"location":"resources/custom_fields/#albert.resources.custom_fields","title":"albert.resources.custom_fields","text":""},{"location":"resources/custom_fields/#albert.resources.custom_fields.FieldType","title":"FieldType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The type (list or string) of the custom field</p> <p>Attributes:</p> Name Type Description <code>LIST</code> <code>STRING</code> <code>NUMBER</code>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.FieldType.LIST","title":"LIST","text":"<pre><code>LIST = 'list'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.FieldType.STRING","title":"STRING","text":"<pre><code>STRING = 'string'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.FieldType.NUMBER","title":"NUMBER","text":"<pre><code>NUMBER = 'number'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType","title":"ServiceType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The service type the custom field is associated with</p> <p>Attributes:</p> Name Type Description <code>INVENTORIES</code> <code>LOTS</code> <code>PROJECTS</code> <code>TASKS</code> <code>USERS</code> <code>PARAMETERS</code> <code>DATA_COLUMNS</code> <code>DATA_TEMPLATES</code> <code>PARAMETER_GROUPS</code>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType.INVENTORIES","title":"INVENTORIES","text":"<pre><code>INVENTORIES = 'inventories'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType.LOTS","title":"LOTS","text":"<pre><code>LOTS = 'lots'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType.PROJECTS","title":"PROJECTS","text":"<pre><code>PROJECTS = 'projects'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType.TASKS","title":"TASKS","text":"<pre><code>TASKS = 'tasks'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType.USERS","title":"USERS","text":"<pre><code>USERS = 'users'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType.PARAMETERS","title":"PARAMETERS","text":"<pre><code>PARAMETERS = 'parameters'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType.DATA_COLUMNS","title":"DATA_COLUMNS","text":"<pre><code>DATA_COLUMNS = 'datacolumns'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType.DATA_TEMPLATES","title":"DATA_TEMPLATES","text":"<pre><code>DATA_TEMPLATES = 'datatemplates'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.ServiceType.PARAMETER_GROUPS","title":"PARAMETER_GROUPS","text":"<pre><code>PARAMETER_GROUPS = 'parametergroups'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.FieldCategory","title":"FieldCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The ACL level of the custom field</p> <p>Attributes:</p> Name Type Description <code>BUSINESS_DEFINED</code> <code>USER_DEFINED</code>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.FieldCategory.BUSINESS_DEFINED","title":"BUSINESS_DEFINED","text":"<pre><code>BUSINESS_DEFINED = 'businessDefined'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.FieldCategory.USER_DEFINED","title":"USER_DEFINED","text":"<pre><code>USER_DEFINED = 'userDefined'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.EntityCategory","title":"EntityCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The entity category of the custom field. Only some categories are allowed for certain services</p> <p>Attributes:</p> Name Type Description <code>FORMULAS</code> <code>RAW_MATERIALS</code> <code>CONSUMABLES</code> <code>EQUIPMENT</code> <code>PROPERTY</code> <code>BATCH</code> <code>GENERAL</code>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.EntityCategory.FORMULAS","title":"FORMULAS","text":"<pre><code>FORMULAS = 'Formulas'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.EntityCategory.RAW_MATERIALS","title":"RAW_MATERIALS","text":"<pre><code>RAW_MATERIALS = 'RawMaterials'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.EntityCategory.CONSUMABLES","title":"CONSUMABLES","text":"<pre><code>CONSUMABLES = 'Consumables'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.EntityCategory.EQUIPMENT","title":"EQUIPMENT","text":"<pre><code>EQUIPMENT = 'Equipment'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.EntityCategory.PROPERTY","title":"PROPERTY","text":"<pre><code>PROPERTY = 'Property'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.EntityCategory.BATCH","title":"BATCH","text":"<pre><code>BATCH = 'Batch'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.EntityCategory.GENERAL","title":"GENERAL","text":"<pre><code>GENERAL = 'General'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.UIComponent","title":"UIComponent","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The UI component available to the custom field</p> <p>Attributes:</p> Name Type Description <code>CREATE</code> <code>DETAILS</code>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.UIComponent.CREATE","title":"CREATE","text":"<pre><code>CREATE = 'create'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.UIComponent.DETAILS","title":"DETAILS","text":"<pre><code>DETAILS = 'details'\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField","title":"CustomField","text":"<p>               Bases: <code>BaseResource</code></p> <p>A custom field for an entity in Albert.</p> <p>Returns:</p> Type Description <code>CustomField</code> <p>A CustomField that can be used to attach Metadata to an entity in Albert.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the custom field. Cannot contain spaces.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the custom field.</p> <code>field_type</code> <code>FieldType</code> <p>The type of the custom field. Allowed values are <code>list</code> and <code>string</code>. String fields cannot be searchable and are used to set uncontrolled metadata. List fields can be searchable and are used to set controlled metadata.</p> <code>display_name</code> <code>str</code> <p>The display name of the custom field. Can contain spaces.</p> <code>searchable</code> <code>bool | None</code> <p>Whether the custom field is searchable, optional. Defaults to False.</p> <code>service</code> <code>ServiceType</code> <p>The service type the custom field is associated with.</p> <code>hidden</code> <code>bool | None</code> <p>Whether the custom field is hidden, optional. Defaults to False.</p> <code>lookup_column</code> <code>bool | None</code> <p>Whether the custom field is a lookup column, optional. Defaults to False. Only allowed for inventories.</p> <code>lookup_row</code> <code>bool | None</code> <p>Whether the custom field is a lookup row, optional. Defaults to False. Only allowed for formulas in inventories.</p> <code>category</code> <code>FieldCategory | None</code> <p>The category of the custom field, optional. Defaults to None. Required for list fields. Allowed values are <code>businessDefined</code> and <code>userDefined</code>.</p> <code>min</code> <code>int | None</code> <p>The minimum value of the custom field, optional. Defaults to None.</p> <code>max</code> <code>int | None</code> <p>The maximum value of the custom field, optional. Defaults to None.</p> <code>entity_categories</code> <code>list[EntityCategory] | None</code> <p>The entity categories of the custom field, optional. Defaults to None. Required for lookup row fields. Allowed values are <code>Formulas</code>, <code>RawMaterials</code>, <code>Consumables</code>, <code>Equipment</code>, <code>Property</code>, <code>Batch</code>, and <code>General</code>.</p> <code>ui_components</code> <code>list[UIComponent] | None</code> <p>The UI components available to the custom field, optional. Defaults to None. Allowed values are <code>create</code> and <code>details</code>.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityCategory\": {\n      \"description\": \"The entity category of the custom field. Only some categories are allowed for certain services\",\n      \"enum\": [\n        \"Formulas\",\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Property\",\n        \"Batch\",\n        \"General\"\n      ],\n      \"title\": \"EntityCategory\",\n      \"type\": \"string\"\n    },\n    \"FieldCategory\": {\n      \"description\": \"The ACL level of the custom field\",\n      \"enum\": [\n        \"businessDefined\",\n        \"userDefined\"\n      ],\n      \"title\": \"FieldCategory\",\n      \"type\": \"string\"\n    },\n    \"FieldType\": {\n      \"description\": \"The type (list or string) of the custom field\",\n      \"enum\": [\n        \"list\",\n        \"string\",\n        \"number\"\n      ],\n      \"title\": \"FieldType\",\n      \"type\": \"string\"\n    },\n    \"ServiceType\": {\n      \"description\": \"The service type the custom field is associated with\",\n      \"enum\": [\n        \"inventories\",\n        \"lots\",\n        \"projects\",\n        \"tasks\",\n        \"users\",\n        \"parameters\",\n        \"datacolumns\",\n        \"datatemplates\",\n        \"parametergroups\"\n      ],\n      \"title\": \"ServiceType\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"UIComponent\": {\n      \"description\": \"The UI component available to the custom field\",\n      \"enum\": [\n        \"create\",\n        \"details\"\n      ],\n      \"title\": \"UIComponent\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A custom field for an entity in Albert.\\n\\nReturns\\n-------\\nCustomField\\n    A CustomField that can be used to attach Metadata to an entity in Albert.\\nAttributes\\n------\\nname : str\\n    The name of the custom field. Cannot contain spaces.\\nid : str | None\\n    The Albert ID of the custom field.\\nfield_type : FieldType\\n    The type of the custom field. Allowed values are `list` and `string`. String fields cannot be searchable and are used to set uncontrolled metadata. List fields can be searchable and are used to set controlled metadata.\\ndisplay_name : str\\n    The display name of the custom field. Can contain spaces.\\nsearchable : bool | None\\n    Whether the custom field is searchable, optional. Defaults to False.\\nservice : ServiceType\\n    The service type the custom field is associated with.\\nhidden : bool | None\\n    Whether the custom field is hidden, optional. Defaults to False.\\nlookup_column : bool | None\\n    Whether the custom field is a lookup column, optional. Defaults to False. Only allowed for inventories.\\nlookup_row : bool | None\\n    Whether the custom field is a lookup row, optional. Defaults to False. Only allowed for formulas in inventories.\\ncategory : FieldCategory | None\\n    The category of the custom field, optional. Defaults to None. Required for list fields. Allowed values are `businessDefined` and `userDefined`.\\nmin : int | None\\n    The minimum value of the custom field, optional. Defaults to None.\\nmax : int | None\\n    The maximum value of the custom field, optional. Defaults to None.\\nentity_categories : list[EntityCategory] | None\\n    The entity categories of the custom field, optional. Defaults to None. Required for lookup row fields. Allowed values are `Formulas`, `RawMaterials`, `Consumables`, `Equipment`, `Property`, `Batch`, and `General`.\\nui_components : list[UIComponent] | None\\n    The UI components available to the custom field, optional. Defaults to None. Allowed values are `create` and `details`.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"type\": {\n      \"$ref\": \"#/$defs/FieldType\"\n    },\n    \"labelName\": {\n      \"default\": null,\n      \"title\": \"Labelname\",\n      \"type\": \"string\"\n    },\n    \"search\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Search\"\n    },\n    \"service\": {\n      \"$ref\": \"#/$defs/ServiceType\"\n    },\n    \"hidden\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Hidden\"\n    },\n    \"lkpColumn\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lkpcolumn\"\n    },\n    \"lkpRow\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lkprow\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/FieldCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"min\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Min\"\n    },\n    \"max\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Max\"\n    },\n    \"entityCategory\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityCategory\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Entitycategory\"\n    },\n    \"ui_components\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/UIComponent\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Ui Components\"\n    },\n    \"required\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Required\"\n    },\n    \"multiselect\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Multiselect\"\n    },\n    \"pattern\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Pattern\"\n    },\n    \"default\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Default\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"type\",\n    \"service\"\n  ],\n  \"title\": \"CustomField\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>field_type</code>                 (<code>FieldType</code>)             </li> <li> <code>display_name</code>                 (<code>str</code>)             </li> <li> <code>searchable</code>                 (<code>bool | None</code>)             </li> <li> <code>service</code>                 (<code>ServiceType</code>)             </li> <li> <code>hidden</code>                 (<code>bool | None</code>)             </li> <li> <code>lookup_column</code>                 (<code>bool | None</code>)             </li> <li> <code>lookup_row</code>                 (<code>bool | None</code>)             </li> <li> <code>category</code>                 (<code>FieldCategory | None</code>)             </li> <li> <code>min</code>                 (<code>int | None</code>)             </li> <li> <code>max</code>                 (<code>int | None</code>)             </li> <li> <code>entity_categories</code>                 (<code>list[EntityCategory] | None</code>)             </li> <li> <code>ui_components</code>                 (<code>list[UIComponent] | None</code>)             </li> <li> <code>required</code>                 (<code>bool | None</code>)             </li> <li> <code>multiselect</code>                 (<code>bool | None</code>)             </li> <li> <code>pattern</code>                 (<code>str | None</code>)             </li> <li> <code>default</code>                 (<code>str | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>confirm_field_compatability</code> </li> </ul>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.field_type","title":"field_type","text":"<pre><code>field_type: FieldType\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.display_name","title":"display_name","text":"<pre><code>display_name: str = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.searchable","title":"searchable","text":"<pre><code>searchable: bool | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.service","title":"service","text":"<pre><code>service: ServiceType\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.hidden","title":"hidden","text":"<pre><code>hidden: bool | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.lookup_column","title":"lookup_column","text":"<pre><code>lookup_column: bool | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.lookup_row","title":"lookup_row","text":"<pre><code>lookup_row: bool | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.category","title":"category","text":"<pre><code>category: FieldCategory | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.min","title":"min","text":"<pre><code>min: int | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.max","title":"max","text":"<pre><code>max: int | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.entity_categories","title":"entity_categories","text":"<pre><code>entity_categories: list[EntityCategory] | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.ui_components","title":"ui_components","text":"<pre><code>ui_components: list[UIComponent] | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.required","title":"required","text":"<pre><code>required: bool | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.multiselect","title":"multiselect","text":"<pre><code>multiselect: bool | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.pattern","title":"pattern","text":"<pre><code>pattern: str | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.default","title":"default","text":"<pre><code>default: str | None = None\n</code></pre>"},{"location":"resources/custom_fields/#albert.resources.custom_fields.CustomField.confirm_field_compatability","title":"confirm_field_compatability","text":"<pre><code>confirm_field_compatability() -&gt; CustomField\n</code></pre> Source code in <code>src/albert/resources/custom_fields.py</code> <pre><code>@model_validator(mode=\"after\")\ndef confirm_field_compatability(self) -&gt; \"CustomField\":\n    if self.field_type == FieldType.LIST and self.category is None:\n        raise ValueError(\"Category must be set for list fields\")\n    return self\n</code></pre>"},{"location":"resources/custom_templates/","title":"Custom Templates","text":""},{"location":"resources/custom_templates/#albert.resources.custom_templates","title":"albert.resources.custom_templates","text":"<p>Attributes:</p> Name Type Description <code>CustomTemplateData</code> <code>ACLEntry</code>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplateData","title":"CustomTemplateData","text":"<pre><code>CustomTemplateData = Annotated[\n    _CustomTemplateDataUnion,\n    Field(discriminator=\"category\"),\n]\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.ACLEntry","title":"ACLEntry","text":"<pre><code>ACLEntry = Annotated[\n    TeamACL | OwnerACL | MemberACL,\n    Field(discriminator=\"type\"),\n]\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.DataTemplateInventory","title":"DataTemplateInventory","text":"<p>               Bases: <code>EntityLink</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Design\": {\n      \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DesignState\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"designType\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"designType\"\n      ],\n      \"title\": \"Design\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"Sheet\": {\n      \"description\": \"A Sheet in Albert\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the sheet.\\nname : str\\n    The name of the sheet.\\nhidden : bool\\n    Whether the sheet is hidden.\\ndesigns : list[Design]\\n    The designs of the sheet.\\nproject_id : str\\n    The Albert ID of the project the sheet is in.\\ngrid : pd.DataFrame | None\\n    The grid of the sheet. Optional. Default is None. Read-only.\\ncolumns : list[Column]\\n    The columns of the sheet. Read-only.\\nrows : list[Row]\\n    The rows of the sheet. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"Formulas\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/SheetFormulationRef\"\n          },\n          \"title\": \"Formulas\",\n          \"type\": \"array\"\n        },\n        \"hidden\": {\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Designs\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Design\"\n          },\n          \"title\": \"Designs\",\n          \"type\": \"array\"\n        },\n        \"project_id\": {\n          \"title\": \"Project Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"name\",\n        \"hidden\",\n        \"Designs\",\n        \"project_id\"\n      ],\n      \"title\": \"Sheet\",\n      \"type\": \"object\"\n    },\n    \"SheetFormulationRef\": {\n      \"description\": \"A reference to a formulation in a sheet\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The Albert ID of the inventory item that is the formulation\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"The name of the formulation\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"hidden\": {\n          \"description\": \"Whether the formulation is hidden\",\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"hidden\"\n      ],\n      \"title\": \"SheetFormulationRef\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"batchSize\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Batchsize\"\n    },\n    \"sheet\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Sheet\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sheet\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"DataTemplateInventory\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>batch_size</code>                 (<code>float | None</code>)             </li> <li> <code>sheet</code>                 (<code>list[Sheet | EntityLink] | None</code>)             </li> <li> <code>category</code>                 (<code>InventoryCategory | None</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.DataTemplateInventory.batch_size","title":"batch_size","text":"<pre><code>batch_size: float | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.DataTemplateInventory.sheet","title":"sheet","text":"<pre><code>sheet: list[Sheet | EntityLink] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.DataTemplateInventory.category","title":"category","text":"<pre><code>category: InventoryCategory | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.DesignLink","title":"DesignLink","text":"<p>               Bases: <code>EntityLink</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"type\": {\n      \"$ref\": \"#/$defs/DesignType\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"type\"\n  ],\n  \"title\": \"DesignLink\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>type</code>                 (<code>DesignType</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.DesignLink.type","title":"type","text":"<pre><code>type: DesignType\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateCategory","title":"TemplateCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>PROPERTY_LIST</code> <code>PROPERTY</code> <code>BATCH</code> <code>SHEET</code> <code>NOTEBOOK</code> <code>GENERAL</code> <code>QC_BATCH</code>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateCategory.PROPERTY_LIST","title":"PROPERTY_LIST","text":"<pre><code>PROPERTY_LIST = 'Property Task'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateCategory.PROPERTY","title":"PROPERTY","text":"<pre><code>PROPERTY = 'Property'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateCategory.BATCH","title":"BATCH","text":"<pre><code>BATCH = 'Batch'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateCategory.SHEET","title":"SHEET","text":"<pre><code>SHEET = 'Sheet'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateCategory.NOTEBOOK","title":"NOTEBOOK","text":"<pre><code>NOTEBOOK = 'Notebook'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateCategory.GENERAL","title":"GENERAL","text":"<pre><code>GENERAL = 'General'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateCategory.QC_BATCH","title":"QC_BATCH","text":"<pre><code>QC_BATCH = 'BatchWithQC'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Priority","title":"Priority","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>LOW</code> <code>HIGH</code>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Priority.LOW","title":"LOW","text":"<pre><code>LOW = 'Low'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Priority.HIGH","title":"HIGH","text":"<pre><code>HIGH = 'High'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData","title":"GeneralData","text":"<p>               Bases: <code>BaseTaggedResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Priority\": {\n      \"enum\": [\n        \"Low\",\n        \"High\"\n      ],\n      \"title\": \"Priority\",\n      \"type\": \"string\"\n    },\n    \"Project\": {\n      \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"description\": {\n          \"maxLength\": 2000,\n          \"minLength\": 1,\n          \"title\": \"Description\",\n          \"type\": \"string\"\n        },\n        \"Locations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Location\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"maxItems\": 20,\n              \"minItems\": 1,\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Locations\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"private\"\n        },\n        \"prefix\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prefix\"\n        },\n        \"appEngg\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Inventory Ids to be added as application engineering\",\n          \"title\": \"Appengg\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ACL\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Acl\"\n        },\n        \"old_api_params\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Old Api Params\"\n        },\n        \"task_config\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Task Config\"\n        },\n        \"grid\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/GridDefault\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/State\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"description\"\n      ],\n      \"title\": \"Project\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    },\n    \"TaskSource\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"$ref\": \"#/$defs/TaskSourceType\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"type\"\n      ],\n      \"title\": \"TaskSource\",\n      \"type\": \"object\"\n    },\n    \"TaskSourceType\": {\n      \"enum\": [\n        \"task\",\n        \"template\"\n      ],\n      \"title\": \"TaskSourceType\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"category\": {\n      \"const\": \"General\",\n      \"default\": \"General\",\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"Project\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Project\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Project\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"AssignedTo\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/User\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignedto\"\n    },\n    \"notebookId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Notebookid\"\n    },\n    \"priority\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Priority\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Sources\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/TaskSource\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sources\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    }\n  },\n  \"title\": \"GeneralData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>category</code>                 (<code>Literal[GENERAL]</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>project</code>                 (<code>SerializeAsEntityLink[Project] | None</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>assigned_to</code>                 (<code>SerializeAsEntityLink[User] | None</code>)             </li> <li> <code>notebook_id</code>                 (<code>NotebookId | None</code>)             </li> <li> <code>priority</code>                 (<code>Priority | None</code>)             </li> <li> <code>sources</code>                 (<code>list[TaskSource] | None</code>)             </li> <li> <code>parent_id</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData.category","title":"category","text":"<pre><code>category: Literal[GENERAL] = GENERAL\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData.project","title":"project","text":"<pre><code>project: SerializeAsEntityLink[Project] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData.location","title":"location","text":"<pre><code>location: SerializeAsEntityLink[Location] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData.assigned_to","title":"assigned_to","text":"<pre><code>assigned_to: SerializeAsEntityLink[User] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData.notebook_id","title":"notebook_id","text":"<pre><code>notebook_id: NotebookId | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData.priority","title":"priority","text":"<pre><code>priority: Priority | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData.sources","title":"sources","text":"<pre><code>sources: list[TaskSource] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.GeneralData.parent_id","title":"parent_id","text":"<pre><code>parent_id: str | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.JobStatus","title":"JobStatus","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>ACTIVE</code> <code>INACTIVE</code> <code>QUEUED</code>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.JobStatus.ACTIVE","title":"ACTIVE","text":"<pre><code>ACTIVE = 'active'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.JobStatus.INACTIVE","title":"INACTIVE","text":"<pre><code>INACTIVE = 'inactive'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.JobStatus.QUEUED","title":"QUEUED","text":"<pre><code>QUEUED = 'queued'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamInput","title":"SamInput","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"Unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"Name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"Name\"\n  ],\n  \"title\": \"SamInput\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamInput.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamInput.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamInput.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamConfig","title":"SamConfig","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"JobStatus\": {\n      \"enum\": [\n        \"active\",\n        \"inactive\",\n        \"queued\"\n      ],\n      \"title\": \"JobStatus\",\n      \"type\": \"string\"\n    },\n    \"SamInput\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"Name\"\n      ],\n      \"title\": \"SamInput\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/JobStatus\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"configurationName\": {\n      \"title\": \"Configurationname\",\n      \"type\": \"string\"\n    },\n    \"configurationId\": {\n      \"title\": \"Configurationid\",\n      \"type\": \"string\"\n    },\n    \"machineId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Machineid\"\n    },\n    \"input\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/SamInput\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Input\"\n    }\n  },\n  \"required\": [\n    \"configurationName\",\n    \"configurationId\"\n  ],\n  \"title\": \"SamConfig\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>configuration_name</code>                 (<code>str</code>)             </li> <li> <code>configurationId</code>                 (<code>str</code>)             </li> <li> <code>machineId</code>                 (<code>str | None</code>)             </li> <li> <code>input</code>                 (<code>list[SamInput] | None</code>)             </li> <li> <code>job_status</code>                 (<code>JobStatus | None</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamConfig.configuration_name","title":"configuration_name","text":"<pre><code>configuration_name: str\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamConfig.configurationId","title":"configurationId","text":"<pre><code>configurationId: str\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamConfig.machineId","title":"machineId","text":"<pre><code>machineId: str | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamConfig.input","title":"input","text":"<pre><code>input: list[SamInput] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SamConfig.job_status","title":"job_status","text":"<pre><code>job_status: JobStatus | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Workflow","title":"Workflow","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"JobStatus\": {\n      \"enum\": [\n        \"active\",\n        \"inactive\",\n        \"queued\"\n      ],\n      \"title\": \"JobStatus\",\n      \"type\": \"string\"\n    },\n    \"SamConfig\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/JobStatus\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"configurationName\": {\n          \"title\": \"Configurationname\",\n          \"type\": \"string\"\n        },\n        \"configurationId\": {\n          \"title\": \"Configurationid\",\n          \"type\": \"string\"\n        },\n        \"machineId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Machineid\"\n        },\n        \"input\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SamInput\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Input\"\n        }\n      },\n      \"required\": [\n        \"configurationName\",\n        \"configurationId\"\n      ],\n      \"title\": \"SamConfig\",\n      \"type\": \"object\"\n    },\n    \"SamInput\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"Name\"\n      ],\n      \"title\": \"SamInput\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"SamConfig\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/SamConfig\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Samconfig\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"name\"\n  ],\n  \"title\": \"Workflow\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>sam_config</code>                 (<code>list[SamConfig] | None</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Workflow.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Workflow.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Workflow.sam_config","title":"sam_config","text":"<pre><code>sam_config: list[SamConfig] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Block","title":"Block","text":"<p>               Bases: <code>BaseTaggedResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"JobStatus\": {\n      \"enum\": [\n        \"active\",\n        \"inactive\",\n        \"queued\"\n      ],\n      \"title\": \"JobStatus\",\n      \"type\": \"string\"\n    },\n    \"SamConfig\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/JobStatus\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"configurationName\": {\n          \"title\": \"Configurationname\",\n          \"type\": \"string\"\n        },\n        \"configurationId\": {\n          \"title\": \"Configurationid\",\n          \"type\": \"string\"\n        },\n        \"machineId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Machineid\"\n        },\n        \"input\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SamInput\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Input\"\n        }\n      },\n      \"required\": [\n        \"configurationName\",\n        \"configurationId\"\n      ],\n      \"title\": \"SamConfig\",\n      \"type\": \"object\"\n    },\n    \"SamInput\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"Name\"\n      ],\n      \"title\": \"SamInput\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Workflow\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"SamConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SamConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Samconfig\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"title\": \"Workflow\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"Workflow\": {\n      \"default\": null,\n      \"items\": {\n        \"$ref\": \"#/$defs/Workflow\"\n      },\n      \"title\": \"Workflow\",\n      \"type\": \"array\"\n    },\n    \"Datatemplate\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datatemplate\"\n    }\n  },\n  \"title\": \"Block\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>workflow</code>                 (<code>list[Workflow]</code>)             </li> <li> <code>datatemplate</code>                 (<code>list[EntityLink] | None</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Block.workflow","title":"workflow","text":"<pre><code>workflow: list[Workflow] = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.Block.datatemplate","title":"datatemplate","text":"<pre><code>datatemplate: list[EntityLink] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.QCBatchData","title":"QCBatchData","text":"<p>               Bases: <code>BaseTaggedResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"DataTemplateInventory\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"batchSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchsize\"\n        },\n        \"sheet\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Sheet\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sheet\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"DataTemplateInventory\",\n      \"type\": \"object\"\n    },\n    \"Design\": {\n      \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DesignState\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"designType\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"designType\"\n      ],\n      \"title\": \"Design\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Priority\": {\n      \"enum\": [\n        \"Low\",\n        \"High\"\n      ],\n      \"title\": \"Priority\",\n      \"type\": \"string\"\n    },\n    \"Project\": {\n      \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"description\": {\n          \"maxLength\": 2000,\n          \"minLength\": 1,\n          \"title\": \"Description\",\n          \"type\": \"string\"\n        },\n        \"Locations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Location\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"maxItems\": 20,\n              \"minItems\": 1,\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Locations\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"private\"\n        },\n        \"prefix\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prefix\"\n        },\n        \"appEngg\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Inventory Ids to be added as application engineering\",\n          \"title\": \"Appengg\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ACL\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Acl\"\n        },\n        \"old_api_params\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Old Api Params\"\n        },\n        \"task_config\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Task Config\"\n        },\n        \"grid\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/GridDefault\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/State\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"description\"\n      ],\n      \"title\": \"Project\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"Sheet\": {\n      \"description\": \"A Sheet in Albert\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the sheet.\\nname : str\\n    The name of the sheet.\\nhidden : bool\\n    Whether the sheet is hidden.\\ndesigns : list[Design]\\n    The designs of the sheet.\\nproject_id : str\\n    The Albert ID of the project the sheet is in.\\ngrid : pd.DataFrame | None\\n    The grid of the sheet. Optional. Default is None. Read-only.\\ncolumns : list[Column]\\n    The columns of the sheet. Read-only.\\nrows : list[Row]\\n    The rows of the sheet. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"Formulas\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/SheetFormulationRef\"\n          },\n          \"title\": \"Formulas\",\n          \"type\": \"array\"\n        },\n        \"hidden\": {\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Designs\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Design\"\n          },\n          \"title\": \"Designs\",\n          \"type\": \"array\"\n        },\n        \"project_id\": {\n          \"title\": \"Project Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"name\",\n        \"hidden\",\n        \"Designs\",\n        \"project_id\"\n      ],\n      \"title\": \"Sheet\",\n      \"type\": \"object\"\n    },\n    \"SheetFormulationRef\": {\n      \"description\": \"A reference to a formulation in a sheet\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The Albert ID of the inventory item that is the formulation\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"The name of the formulation\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"hidden\": {\n          \"description\": \"Whether the formulation is hidden\",\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"hidden\"\n      ],\n      \"title\": \"SheetFormulationRef\",\n      \"type\": \"object\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"category\": {\n      \"const\": \"BatchWithQC\",\n      \"default\": \"BatchWithQC\",\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"Project\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Project\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Project\"\n    },\n    \"Inventories\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/DataTemplateInventory\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventories\"\n    },\n    \"Workflow\": {\n      \"default\": null,\n      \"items\": {\n        \"$ref\": \"#/$defs/EntityLink\"\n      },\n      \"title\": \"Workflow\",\n      \"type\": \"array\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"batchSizeUnit\": {\n      \"default\": null,\n      \"title\": \"Batchsizeunit\",\n      \"type\": \"string\"\n    },\n    \"priority\": {\n      \"$ref\": \"#/$defs/Priority\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    }\n  },\n  \"required\": [\n    \"priority\"\n  ],\n  \"title\": \"QCBatchData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>category</code>                 (<code>Literal[QC_BATCH]</code>)             </li> <li> <code>project</code>                 (<code>SerializeAsEntityLink[Project] | None</code>)             </li> <li> <code>inventories</code>                 (<code>list[DataTemplateInventory] | None</code>)             </li> <li> <code>workflow</code>                 (<code>list[EntityLink]</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>batch_size_unit</code>                 (<code>str</code>)             </li> <li> <code>priority</code>                 (<code>Priority</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.QCBatchData.category","title":"category","text":"<pre><code>category: Literal[QC_BATCH] = QC_BATCH\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.QCBatchData.project","title":"project","text":"<pre><code>project: SerializeAsEntityLink[Project] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.QCBatchData.inventories","title":"inventories","text":"<pre><code>inventories: list[DataTemplateInventory] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.QCBatchData.workflow","title":"workflow","text":"<pre><code>workflow: list[EntityLink] = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.QCBatchData.location","title":"location","text":"<pre><code>location: SerializeAsEntityLink[Location] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.QCBatchData.batch_size_unit","title":"batch_size_unit","text":"<pre><code>batch_size_unit: str = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.QCBatchData.priority","title":"priority","text":"<pre><code>priority: Priority\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.QCBatchData.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData","title":"BatchData","text":"<p>               Bases: <code>BaseTaggedResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"DataTemplateInventory\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"batchSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchsize\"\n        },\n        \"sheet\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Sheet\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sheet\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"DataTemplateInventory\",\n      \"type\": \"object\"\n    },\n    \"Design\": {\n      \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DesignState\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"designType\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"designType\"\n      ],\n      \"title\": \"Design\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Priority\": {\n      \"enum\": [\n        \"Low\",\n        \"High\"\n      ],\n      \"title\": \"Priority\",\n      \"type\": \"string\"\n    },\n    \"Project\": {\n      \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"description\": {\n          \"maxLength\": 2000,\n          \"minLength\": 1,\n          \"title\": \"Description\",\n          \"type\": \"string\"\n        },\n        \"Locations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Location\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"maxItems\": 20,\n              \"minItems\": 1,\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Locations\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"private\"\n        },\n        \"prefix\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prefix\"\n        },\n        \"appEngg\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Inventory Ids to be added as application engineering\",\n          \"title\": \"Appengg\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ACL\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Acl\"\n        },\n        \"old_api_params\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Old Api Params\"\n        },\n        \"task_config\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Task Config\"\n        },\n        \"grid\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/GridDefault\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/State\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"description\"\n      ],\n      \"title\": \"Project\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"Sheet\": {\n      \"description\": \"A Sheet in Albert\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the sheet.\\nname : str\\n    The name of the sheet.\\nhidden : bool\\n    Whether the sheet is hidden.\\ndesigns : list[Design]\\n    The designs of the sheet.\\nproject_id : str\\n    The Albert ID of the project the sheet is in.\\ngrid : pd.DataFrame | None\\n    The grid of the sheet. Optional. Default is None. Read-only.\\ncolumns : list[Column]\\n    The columns of the sheet. Read-only.\\nrows : list[Row]\\n    The rows of the sheet. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"Formulas\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/SheetFormulationRef\"\n          },\n          \"title\": \"Formulas\",\n          \"type\": \"array\"\n        },\n        \"hidden\": {\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Designs\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Design\"\n          },\n          \"title\": \"Designs\",\n          \"type\": \"array\"\n        },\n        \"project_id\": {\n          \"title\": \"Project Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"name\",\n        \"hidden\",\n        \"Designs\",\n        \"project_id\"\n      ],\n      \"title\": \"Sheet\",\n      \"type\": \"object\"\n    },\n    \"SheetFormulationRef\": {\n      \"description\": \"A reference to a formulation in a sheet\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The Albert ID of the inventory item that is the formulation\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"The name of the formulation\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"hidden\": {\n          \"description\": \"Whether the formulation is hidden\",\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"hidden\"\n      ],\n      \"title\": \"SheetFormulationRef\",\n      \"type\": \"object\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"category\": {\n      \"const\": \"Batch\",\n      \"default\": \"Batch\",\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"AssignedTo\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/User\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignedto\"\n    },\n    \"Project\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Project\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Project\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"batchSizeUnit\": {\n      \"default\": null,\n      \"title\": \"Batchsizeunit\",\n      \"type\": \"string\"\n    },\n    \"Inventories\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/DataTemplateInventory\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventories\"\n    },\n    \"priority\": {\n      \"$ref\": \"#/$defs/Priority\"\n    },\n    \"Workflow\": {\n      \"default\": null,\n      \"items\": {\n        \"$ref\": \"#/$defs/EntityLink\"\n      },\n      \"title\": \"Workflow\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"priority\"\n  ],\n  \"title\": \"BatchData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>category</code>                 (<code>Literal[BATCH]</code>)             </li> <li> <code>assigned_to</code>                 (<code>SerializeAsEntityLink[User] | None</code>)             </li> <li> <code>project</code>                 (<code>SerializeAsEntityLink[Project] | None</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>batch_size_unit</code>                 (<code>str</code>)             </li> <li> <code>inventories</code>                 (<code>list[DataTemplateInventory] | None</code>)             </li> <li> <code>priority</code>                 (<code>Priority</code>)             </li> <li> <code>workflow</code>                 (<code>list[EntityLink]</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData.category","title":"category","text":"<pre><code>category: Literal[BATCH] = BATCH\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData.assigned_to","title":"assigned_to","text":"<pre><code>assigned_to: SerializeAsEntityLink[User] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData.project","title":"project","text":"<pre><code>project: SerializeAsEntityLink[Project] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData.location","title":"location","text":"<pre><code>location: SerializeAsEntityLink[Location] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData.batch_size_unit","title":"batch_size_unit","text":"<pre><code>batch_size_unit: str = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData.inventories","title":"inventories","text":"<pre><code>inventories: list[DataTemplateInventory] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData.priority","title":"priority","text":"<pre><code>priority: Priority\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.BatchData.workflow","title":"workflow","text":"<pre><code>workflow: list[EntityLink] = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData","title":"PropertyData","text":"<p>               Bases: <code>BaseTaggedResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Block\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"Workflow\": {\n          \"default\": null,\n          \"items\": {\n            \"$ref\": \"#/$defs/Workflow\"\n          },\n          \"title\": \"Workflow\",\n          \"type\": \"array\"\n        },\n        \"Datatemplate\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplate\"\n        }\n      },\n      \"title\": \"Block\",\n      \"type\": \"object\"\n    },\n    \"DataTemplateInventory\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"batchSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchsize\"\n        },\n        \"sheet\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Sheet\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sheet\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"DataTemplateInventory\",\n      \"type\": \"object\"\n    },\n    \"Design\": {\n      \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DesignState\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"designType\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"designType\"\n      ],\n      \"title\": \"Design\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"JobStatus\": {\n      \"enum\": [\n        \"active\",\n        \"inactive\",\n        \"queued\"\n      ],\n      \"title\": \"JobStatus\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Priority\": {\n      \"enum\": [\n        \"Low\",\n        \"High\"\n      ],\n      \"title\": \"Priority\",\n      \"type\": \"string\"\n    },\n    \"Project\": {\n      \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"description\": {\n          \"maxLength\": 2000,\n          \"minLength\": 1,\n          \"title\": \"Description\",\n          \"type\": \"string\"\n        },\n        \"Locations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Location\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"maxItems\": 20,\n              \"minItems\": 1,\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Locations\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"private\"\n        },\n        \"prefix\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prefix\"\n        },\n        \"appEngg\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Inventory Ids to be added as application engineering\",\n          \"title\": \"Appengg\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ACL\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Acl\"\n        },\n        \"old_api_params\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Old Api Params\"\n        },\n        \"task_config\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Task Config\"\n        },\n        \"grid\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/GridDefault\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/State\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"description\"\n      ],\n      \"title\": \"Project\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SamConfig\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/JobStatus\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"configurationName\": {\n          \"title\": \"Configurationname\",\n          \"type\": \"string\"\n        },\n        \"configurationId\": {\n          \"title\": \"Configurationid\",\n          \"type\": \"string\"\n        },\n        \"machineId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Machineid\"\n        },\n        \"input\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SamInput\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Input\"\n        }\n      },\n      \"required\": [\n        \"configurationName\",\n        \"configurationId\"\n      ],\n      \"title\": \"SamConfig\",\n      \"type\": \"object\"\n    },\n    \"SamInput\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"Name\"\n      ],\n      \"title\": \"SamInput\",\n      \"type\": \"object\"\n    },\n    \"Sheet\": {\n      \"description\": \"A Sheet in Albert\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the sheet.\\nname : str\\n    The name of the sheet.\\nhidden : bool\\n    Whether the sheet is hidden.\\ndesigns : list[Design]\\n    The designs of the sheet.\\nproject_id : str\\n    The Albert ID of the project the sheet is in.\\ngrid : pd.DataFrame | None\\n    The grid of the sheet. Optional. Default is None. Read-only.\\ncolumns : list[Column]\\n    The columns of the sheet. Read-only.\\nrows : list[Row]\\n    The rows of the sheet. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"Formulas\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/SheetFormulationRef\"\n          },\n          \"title\": \"Formulas\",\n          \"type\": \"array\"\n        },\n        \"hidden\": {\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Designs\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Design\"\n          },\n          \"title\": \"Designs\",\n          \"type\": \"array\"\n        },\n        \"project_id\": {\n          \"title\": \"Project Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"name\",\n        \"hidden\",\n        \"Designs\",\n        \"project_id\"\n      ],\n      \"title\": \"Sheet\",\n      \"type\": \"object\"\n    },\n    \"SheetFormulationRef\": {\n      \"description\": \"A reference to a formulation in a sheet\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The Albert ID of the inventory item that is the formulation\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"The name of the formulation\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"hidden\": {\n          \"description\": \"Whether the formulation is hidden\",\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"hidden\"\n      ],\n      \"title\": \"SheetFormulationRef\",\n      \"type\": \"object\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"Workflow\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"SamConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SamConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Samconfig\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"title\": \"Workflow\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"category\": {\n      \"const\": \"Property\",\n      \"default\": \"Property\",\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"Blocks\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/Block\"\n      },\n      \"title\": \"Blocks\",\n      \"type\": \"array\"\n    },\n    \"priority\": {\n      \"$ref\": \"#/$defs/Priority\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"AssignedTo\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/User\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignedto\"\n    },\n    \"Project\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Project\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Project\"\n    },\n    \"Inventories\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/DataTemplateInventory\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventories\"\n    },\n    \"dueDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Duedate\"\n    }\n  },\n  \"required\": [\n    \"priority\"\n  ],\n  \"title\": \"PropertyData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>category</code>                 (<code>Literal[PROPERTY]</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>blocks</code>                 (<code>list[Block]</code>)             </li> <li> <code>priority</code>                 (<code>Priority</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>assigned_to</code>                 (<code>SerializeAsEntityLink[User] | None</code>)             </li> <li> <code>project</code>                 (<code>SerializeAsEntityLink[Project] | None</code>)             </li> <li> <code>inventories</code>                 (<code>list[DataTemplateInventory] | None</code>)             </li> <li> <code>due_date</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData.category","title":"category","text":"<pre><code>category: Literal[PROPERTY] = PROPERTY\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData.blocks","title":"blocks","text":"<pre><code>blocks: list[Block]\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData.priority","title":"priority","text":"<pre><code>priority: Priority\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData.location","title":"location","text":"<pre><code>location: SerializeAsEntityLink[Location] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData.assigned_to","title":"assigned_to","text":"<pre><code>assigned_to: SerializeAsEntityLink[User] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData.project","title":"project","text":"<pre><code>project: SerializeAsEntityLink[Project] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData.inventories","title":"inventories","text":"<pre><code>inventories: list[DataTemplateInventory] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.PropertyData.due_date","title":"due_date","text":"<pre><code>due_date: str | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SheetData","title":"SheetData","text":"<p>               Bases: <code>BaseTaggedResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"DesignLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"type\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"type\"\n      ],\n      \"title\": \"DesignLink\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"category\": {\n      \"const\": \"Sheet\",\n      \"default\": \"Sheet\",\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"Designs\": {\n      \"default\": null,\n      \"items\": {\n        \"$ref\": \"#/$defs/DesignLink\"\n      },\n      \"title\": \"Designs\",\n      \"type\": \"array\"\n    },\n    \"FormulaInfo\": {\n      \"items\": {},\n      \"title\": \"Formulainfo\",\n      \"type\": \"array\"\n    },\n    \"TaskRows\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/EntityLink\"\n      },\n      \"title\": \"Taskrows\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"SheetData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>category</code>                 (<code>Literal[SHEET]</code>)             </li> <li> <code>designs</code>                 (<code>list[DesignLink]</code>)             </li> <li> <code>formula_info</code>                 (<code>list</code>)             </li> <li> <code>task_rows</code>                 (<code>list[EntityLink]</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SheetData.category","title":"category","text":"<pre><code>category: Literal[SHEET] = SHEET\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SheetData.designs","title":"designs","text":"<pre><code>designs: list[DesignLink] = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SheetData.formula_info","title":"formula_info","text":"<pre><code>formula_info: list\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.SheetData.task_rows","title":"task_rows","text":"<pre><code>task_rows: list[EntityLink]\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.NotebookData","title":"NotebookData","text":"<p>               Bases: <code>BaseTaggedResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"category\": {\n      \"const\": \"Notebook\",\n      \"default\": \"Notebook\",\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    }\n  },\n  \"title\": \"NotebookData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>category</code>                 (<code>Literal[NOTEBOOK]</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.NotebookData.category","title":"category","text":"<pre><code>category: Literal[NOTEBOOK] = NOTEBOOK\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.ACLType","title":"ACLType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>TEAM</code> <code>MEMBER</code> <code>OWNER</code>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.ACLType.TEAM","title":"TEAM","text":"<pre><code>TEAM = 'team'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.ACLType.MEMBER","title":"MEMBER","text":"<pre><code>MEMBER = 'member'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.ACLType.OWNER","title":"OWNER","text":"<pre><code>OWNER = 'owner'\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TeamACL","title":"TeamACL","text":"<p>               Bases: <code>ACL</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"description\": \"The id of the user for which this ACL applies\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"fgc\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AccessControlLevel\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The Fine-Grain Control Level\"\n    },\n    \"type\": {\n      \"const\": \"team\",\n      \"default\": \"team\",\n      \"title\": \"Type\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"TeamACL\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>fgc</code>                 (<code>AccessControlLevel | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[TEAM]</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TeamACL.type","title":"type","text":"<pre><code>type: Literal[TEAM] = TEAM\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.OwnerACL","title":"OwnerACL","text":"<p>               Bases: <code>ACL</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"description\": \"The id of the user for which this ACL applies\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"fgc\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AccessControlLevel\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The Fine-Grain Control Level\"\n    },\n    \"type\": {\n      \"const\": \"owner\",\n      \"default\": \"owner\",\n      \"title\": \"Type\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"OwnerACL\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>fgc</code>                 (<code>AccessControlLevel | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[OWNER]</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.OwnerACL.type","title":"type","text":"<pre><code>type: Literal[OWNER] = OWNER\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.MemberACL","title":"MemberACL","text":"<p>               Bases: <code>ACL</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"description\": \"The id of the user for which this ACL applies\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"fgc\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AccessControlLevel\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The Fine-Grain Control Level\"\n    },\n    \"type\": {\n      \"const\": \"member\",\n      \"default\": \"member\",\n      \"title\": \"Type\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"MemberACL\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>fgc</code>                 (<code>AccessControlLevel | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[MEMBER]</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.MemberACL.type","title":"type","text":"<pre><code>type: Literal[MEMBER] = MEMBER\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateACL","title":"TemplateACL","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"MemberACL\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        },\n        \"type\": {\n          \"const\": \"member\",\n          \"default\": \"member\",\n          \"title\": \"Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"MemberACL\",\n      \"type\": \"object\"\n    },\n    \"OwnerACL\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        },\n        \"type\": {\n          \"const\": \"owner\",\n          \"default\": \"owner\",\n          \"title\": \"Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"OwnerACL\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"TeamACL\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        },\n        \"type\": {\n          \"const\": \"team\",\n          \"default\": \"team\",\n          \"title\": \"Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"TeamACL\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"fgclist\": {\n      \"default\": null,\n      \"items\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"member\": \"#/$defs/MemberACL\",\n            \"owner\": \"#/$defs/OwnerACL\",\n            \"team\": \"#/$defs/TeamACL\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/$defs/TeamACL\"\n          },\n          {\n            \"$ref\": \"#/$defs/OwnerACL\"\n          },\n          {\n            \"$ref\": \"#/$defs/MemberACL\"\n          }\n        ]\n      },\n      \"title\": \"Fgclist\",\n      \"type\": \"array\"\n    },\n    \"class\": {\n      \"title\": \"Class\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"class\"\n  ],\n  \"title\": \"TemplateACL\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>fgclist</code>                 (<code>list[ACLEntry]</code>)             </li> <li> <code>acl_class</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateACL.fgclist","title":"fgclist","text":"<pre><code>fgclist: list[ACLEntry] = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.TemplateACL.acl_class","title":"acl_class","text":"<pre><code>acl_class: str\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplate","title":"CustomTemplate","text":"<p>               Bases: <code>BaseTaggedResource</code></p> <p>A custom template entity.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the template.</p> <code>id</code> <code>str</code> <p>The Albert ID of the template. Set when the template is retrieved from Albert.</p> <code>category</code> <code>TemplateCategory</code> <p>The category of the template. Allowed values are <code>Property Task</code>, <code>Property</code>, <code>Batch</code>, <code>Sheet</code>, <code>Notebook</code>, and <code>General</code>.</p> <code>metadata</code> <code>Dict[str, str | List[EntityLink] | EntityLink] | None</code> <p>The metadata of the template. Allowed Metadata fields can be found using Custim Fields.</p> <code>data</code> <code>CustomTemplateData | None</code> <p>The data of the template.</p> <code>team</code> <code>List[TeamACL] | None</code> <p>The team of the template.</p> <code>acl</code> <code>TemplateACL | None</code> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BatchData\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"category\": {\n          \"const\": \"Batch\",\n          \"default\": \"Batch\",\n          \"title\": \"Category\",\n          \"type\": \"string\"\n        },\n        \"AssignedTo\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/User\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Assignedto\"\n        },\n        \"Project\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Project\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Project\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"batchSizeUnit\": {\n          \"default\": null,\n          \"title\": \"Batchsizeunit\",\n          \"type\": \"string\"\n        },\n        \"Inventories\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DataTemplateInventory\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventories\"\n        },\n        \"priority\": {\n          \"$ref\": \"#/$defs/Priority\"\n        },\n        \"Workflow\": {\n          \"default\": null,\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Workflow\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"priority\"\n      ],\n      \"title\": \"BatchData\",\n      \"type\": \"object\"\n    },\n    \"Block\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"Workflow\": {\n          \"default\": null,\n          \"items\": {\n            \"$ref\": \"#/$defs/Workflow\"\n          },\n          \"title\": \"Workflow\",\n          \"type\": \"array\"\n        },\n        \"Datatemplate\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplate\"\n        }\n      },\n      \"title\": \"Block\",\n      \"type\": \"object\"\n    },\n    \"DataTemplateInventory\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"batchSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchsize\"\n        },\n        \"sheet\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Sheet\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sheet\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"DataTemplateInventory\",\n      \"type\": \"object\"\n    },\n    \"Design\": {\n      \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DesignState\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"designType\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"designType\"\n      ],\n      \"title\": \"Design\",\n      \"type\": \"object\"\n    },\n    \"DesignLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"type\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"type\"\n      ],\n      \"title\": \"DesignLink\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"GeneralData\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"category\": {\n          \"const\": \"General\",\n          \"default\": \"General\",\n          \"title\": \"Category\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"Project\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Project\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Project\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"AssignedTo\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/User\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Assignedto\"\n        },\n        \"notebookId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Notebookid\"\n        },\n        \"priority\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Priority\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Sources\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskSource\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sources\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        }\n      },\n      \"title\": \"GeneralData\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"JobStatus\": {\n      \"enum\": [\n        \"active\",\n        \"inactive\",\n        \"queued\"\n      ],\n      \"title\": \"JobStatus\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"MemberACL\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        },\n        \"type\": {\n          \"const\": \"member\",\n          \"default\": \"member\",\n          \"title\": \"Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"MemberACL\",\n      \"type\": \"object\"\n    },\n    \"NotebookData\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"category\": {\n          \"const\": \"Notebook\",\n          \"default\": \"Notebook\",\n          \"title\": \"Category\",\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"NotebookData\",\n      \"type\": \"object\"\n    },\n    \"OwnerACL\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        },\n        \"type\": {\n          \"const\": \"owner\",\n          \"default\": \"owner\",\n          \"title\": \"Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"OwnerACL\",\n      \"type\": \"object\"\n    },\n    \"Priority\": {\n      \"enum\": [\n        \"Low\",\n        \"High\"\n      ],\n      \"title\": \"Priority\",\n      \"type\": \"string\"\n    },\n    \"Project\": {\n      \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"description\": {\n          \"maxLength\": 2000,\n          \"minLength\": 1,\n          \"title\": \"Description\",\n          \"type\": \"string\"\n        },\n        \"Locations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Location\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"maxItems\": 20,\n              \"minItems\": 1,\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Locations\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"private\"\n        },\n        \"prefix\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prefix\"\n        },\n        \"appEngg\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Inventory Ids to be added as application engineering\",\n          \"title\": \"Appengg\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ACL\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Acl\"\n        },\n        \"old_api_params\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Old Api Params\"\n        },\n        \"task_config\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Task Config\"\n        },\n        \"grid\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/GridDefault\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/State\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"description\"\n      ],\n      \"title\": \"Project\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"PropertyData\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"category\": {\n          \"const\": \"Property\",\n          \"default\": \"Property\",\n          \"title\": \"Category\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"Blocks\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Block\"\n          },\n          \"title\": \"Blocks\",\n          \"type\": \"array\"\n        },\n        \"priority\": {\n          \"$ref\": \"#/$defs/Priority\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"AssignedTo\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/User\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Assignedto\"\n        },\n        \"Project\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Project\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Project\"\n        },\n        \"Inventories\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DataTemplateInventory\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventories\"\n        },\n        \"dueDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Duedate\"\n        }\n      },\n      \"required\": [\n        \"priority\"\n      ],\n      \"title\": \"PropertyData\",\n      \"type\": \"object\"\n    },\n    \"QCBatchData\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"category\": {\n          \"const\": \"BatchWithQC\",\n          \"default\": \"BatchWithQC\",\n          \"title\": \"Category\",\n          \"type\": \"string\"\n        },\n        \"Project\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Project\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Project\"\n        },\n        \"Inventories\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DataTemplateInventory\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventories\"\n        },\n        \"Workflow\": {\n          \"default\": null,\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Workflow\",\n          \"type\": \"array\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"batchSizeUnit\": {\n          \"default\": null,\n          \"title\": \"Batchsizeunit\",\n          \"type\": \"string\"\n        },\n        \"priority\": {\n          \"$ref\": \"#/$defs/Priority\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"priority\"\n      ],\n      \"title\": \"QCBatchData\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SamConfig\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/JobStatus\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"configurationName\": {\n          \"title\": \"Configurationname\",\n          \"type\": \"string\"\n        },\n        \"configurationId\": {\n          \"title\": \"Configurationid\",\n          \"type\": \"string\"\n        },\n        \"machineId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Machineid\"\n        },\n        \"input\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SamInput\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Input\"\n        }\n      },\n      \"required\": [\n        \"configurationName\",\n        \"configurationId\"\n      ],\n      \"title\": \"SamConfig\",\n      \"type\": \"object\"\n    },\n    \"SamInput\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"Name\"\n      ],\n      \"title\": \"SamInput\",\n      \"type\": \"object\"\n    },\n    \"Sheet\": {\n      \"description\": \"A Sheet in Albert\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the sheet.\\nname : str\\n    The name of the sheet.\\nhidden : bool\\n    Whether the sheet is hidden.\\ndesigns : list[Design]\\n    The designs of the sheet.\\nproject_id : str\\n    The Albert ID of the project the sheet is in.\\ngrid : pd.DataFrame | None\\n    The grid of the sheet. Optional. Default is None. Read-only.\\ncolumns : list[Column]\\n    The columns of the sheet. Read-only.\\nrows : list[Row]\\n    The rows of the sheet. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"Formulas\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/SheetFormulationRef\"\n          },\n          \"title\": \"Formulas\",\n          \"type\": \"array\"\n        },\n        \"hidden\": {\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Designs\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Design\"\n          },\n          \"title\": \"Designs\",\n          \"type\": \"array\"\n        },\n        \"project_id\": {\n          \"title\": \"Project Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"name\",\n        \"hidden\",\n        \"Designs\",\n        \"project_id\"\n      ],\n      \"title\": \"Sheet\",\n      \"type\": \"object\"\n    },\n    \"SheetData\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"category\": {\n          \"const\": \"Sheet\",\n          \"default\": \"Sheet\",\n          \"title\": \"Category\",\n          \"type\": \"string\"\n        },\n        \"Designs\": {\n          \"default\": null,\n          \"items\": {\n            \"$ref\": \"#/$defs/DesignLink\"\n          },\n          \"title\": \"Designs\",\n          \"type\": \"array\"\n        },\n        \"FormulaInfo\": {\n          \"items\": {},\n          \"title\": \"Formulainfo\",\n          \"type\": \"array\"\n        },\n        \"TaskRows\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Taskrows\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"SheetData\",\n      \"type\": \"object\"\n    },\n    \"SheetFormulationRef\": {\n      \"description\": \"A reference to a formulation in a sheet\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The Albert ID of the inventory item that is the formulation\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"The name of the formulation\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"hidden\": {\n          \"description\": \"Whether the formulation is hidden\",\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"hidden\"\n      ],\n      \"title\": \"SheetFormulationRef\",\n      \"type\": \"object\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    },\n    \"TaskSource\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"$ref\": \"#/$defs/TaskSourceType\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"type\"\n      ],\n      \"title\": \"TaskSource\",\n      \"type\": \"object\"\n    },\n    \"TaskSourceType\": {\n      \"enum\": [\n        \"task\",\n        \"template\"\n      ],\n      \"title\": \"TaskSourceType\",\n      \"type\": \"string\"\n    },\n    \"TeamACL\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        },\n        \"type\": {\n          \"const\": \"team\",\n          \"default\": \"team\",\n          \"title\": \"Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"TeamACL\",\n      \"type\": \"object\"\n    },\n    \"TemplateACL\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"fgclist\": {\n          \"default\": null,\n          \"items\": {\n            \"discriminator\": {\n              \"mapping\": {\n                \"member\": \"#/$defs/MemberACL\",\n                \"owner\": \"#/$defs/OwnerACL\",\n                \"team\": \"#/$defs/TeamACL\"\n              },\n              \"propertyName\": \"type\"\n            },\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/$defs/TeamACL\"\n              },\n              {\n                \"$ref\": \"#/$defs/OwnerACL\"\n              },\n              {\n                \"$ref\": \"#/$defs/MemberACL\"\n              }\n            ]\n          },\n          \"title\": \"Fgclist\",\n          \"type\": \"array\"\n        },\n        \"class\": {\n          \"title\": \"Class\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"class\"\n      ],\n      \"title\": \"TemplateACL\",\n      \"type\": \"object\"\n    },\n    \"TemplateCategory\": {\n      \"enum\": [\n        \"Property Task\",\n        \"Property\",\n        \"Batch\",\n        \"Sheet\",\n        \"Notebook\",\n        \"General\",\n        \"BatchWithQC\"\n      ],\n      \"title\": \"TemplateCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"Workflow\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"SamConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SamConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Samconfig\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"title\": \"Workflow\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"A custom template entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the template.\\nid : str\\n    The Albert ID of the template. Set when the template is retrieved from Albert.\\ncategory : TemplateCategory\\n    The category of the template. Allowed values are `Property Task`, `Property`, `Batch`, `Sheet`, `Notebook`, and `General`.\\nmetadata : Dict[str, str | List[EntityLink] | EntityLink] | None\\n    The metadata of the template. Allowed Metadata fields can be found using Custim Fields.\\ndata : CustomTemplateData | None\\n    The data of the template.\\nteam : List[TeamACL] | None\\n    The team of the template.\\nacl : TemplateACL | None\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"$ref\": \"#/$defs/TemplateCategory\",\n      \"default\": \"General\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    },\n    \"Data\": {\n      \"anyOf\": [\n        {\n          \"discriminator\": {\n            \"mapping\": {\n              \"Batch\": \"#/$defs/BatchData\",\n              \"BatchWithQC\": \"#/$defs/QCBatchData\",\n              \"General\": \"#/$defs/GeneralData\",\n              \"Notebook\": \"#/$defs/NotebookData\",\n              \"Property\": \"#/$defs/PropertyData\",\n              \"Sheet\": \"#/$defs/SheetData\"\n            },\n            \"propertyName\": \"category\"\n          },\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/$defs/PropertyData\"\n            },\n            {\n              \"$ref\": \"#/$defs/BatchData\"\n            },\n            {\n              \"$ref\": \"#/$defs/SheetData\"\n            },\n            {\n              \"$ref\": \"#/$defs/NotebookData\"\n            },\n            {\n              \"$ref\": \"#/$defs/QCBatchData\"\n            },\n            {\n              \"$ref\": \"#/$defs/GeneralData\"\n            }\n          ]\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Data\"\n    },\n    \"team\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/TeamACL\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Team\"\n    },\n    \"ACL\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/TemplateACL\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"albertId\"\n  ],\n  \"title\": \"CustomTemplate\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>category</code>                 (<code>TemplateCategory</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem] | None</code>)             </li> <li> <code>data</code>                 (<code>CustomTemplateData | None</code>)             </li> <li> <code>team</code>                 (<code>list[TeamACL] | None</code>)             </li> <li> <code>acl</code>                 (<code>TemplateACL | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>add_missing_category</code> </li> </ul>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplate.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplate.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplate.category","title":"category","text":"<pre><code>category: TemplateCategory = GENERAL\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplate.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem] | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplate.data","title":"data","text":"<pre><code>data: CustomTemplateData | None = None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplate.team","title":"team","text":"<pre><code>team: list[TeamACL] | None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplate.acl","title":"acl","text":"<pre><code>acl: TemplateACL | None\n</code></pre>"},{"location":"resources/custom_templates/#albert.resources.custom_templates.CustomTemplate.add_missing_category","title":"add_missing_category","text":"<pre><code>add_missing_category(\n    data: dict[str, Any],\n) -&gt; dict[str, Any]\n</code></pre> <p>Initialize private attributes from the incoming data dictionary before the model is fully constructed.</p> Source code in <code>src/albert/resources/custom_templates.py</code> <pre><code>@model_validator(mode=\"before\")  # Must happen before construction so the data are captured\n@classmethod\ndef add_missing_category(cls, data: dict[str, Any]) -&gt; dict[str, Any]:\n    \"\"\"\n    Initialize private attributes from the incoming data dictionary before the model is fully constructed.\n    \"\"\"\n\n    if \"Data\" in data and \"category\" in data and \"category\" not in data[\"Data\"]:\n        data[\"Data\"][\"category\"] = data[\"category\"]\n    return data\n</code></pre>"},{"location":"resources/data_columns/","title":"Data Columns","text":""},{"location":"resources/data_columns/#albert.resources.data_columns","title":"albert.resources.data_columns","text":""},{"location":"resources/data_columns/#albert.resources.data_columns.DataColumn","title":"DataColumn","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"defalt\": {\n      \"default\": false,\n      \"title\": \"Defalt\",\n      \"type\": \"boolean\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    },\n    \"albertId\": {\n      \"default\": null,\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"DataColumn\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>defalt</code>                 (<code>bool</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem] | None</code>)             </li> <li> <code>id</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/data_columns/#albert.resources.data_columns.DataColumn.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/data_columns/#albert.resources.data_columns.DataColumn.defalt","title":"defalt","text":"<pre><code>defalt: bool = False\n</code></pre>"},{"location":"resources/data_columns/#albert.resources.data_columns.DataColumn.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem] | None = None\n</code></pre>"},{"location":"resources/data_columns/#albert.resources.data_columns.DataColumn.id","title":"id","text":"<pre><code>id: str = None\n</code></pre>"},{"location":"resources/data_templates/","title":"Data Templates","text":""},{"location":"resources/data_templates/#albert.resources.data_templates","title":"albert.resources.data_templates","text":""},{"location":"resources/data_templates/#albert.resources.data_templates.CSVMapping","title":"CSVMapping","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"mapId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"examples\": \"Header1:DAC2900#Header2:DAC4707\",\n      \"title\": \"Mapid\"\n    },\n    \"mapData\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"examples\": {\n        \"Header1\": \"DAC2900\",\n        \"Header2\": \"DAC4707\"\n      },\n      \"title\": \"Mapdata\"\n    }\n  },\n  \"title\": \"CSVMapping\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>map_id</code>                 (<code>str | None</code>)             </li> <li> <code>map_data</code>                 (<code>dict[str, str] | None</code>)             </li> </ul>"},{"location":"resources/data_templates/#albert.resources.data_templates.CSVMapping.map_id","title":"map_id","text":"<pre><code>map_id: str | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.CSVMapping.map_data","title":"map_data","text":"<pre><code>map_data: dict[str, str] | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue","title":"DataColumnValue","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"DataColumn\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"defalt\": {\n          \"default\": false,\n          \"title\": \"Defalt\",\n          \"type\": \"boolean\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"albertId\": {\n          \"default\": null,\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataColumn\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"data_column\": {\n      \"$ref\": \"#/$defs/DataColumn\",\n      \"default\": null\n    },\n    \"id\": {\n      \"default\": null,\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"hidden\": {\n      \"default\": false,\n      \"title\": \"Hidden\",\n      \"type\": \"boolean\"\n    },\n    \"Unit\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Unit\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"calculation\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Calculation\"\n    },\n    \"sequence\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sequence\"\n    },\n    \"validation\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ValueValidation\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Validation\"\n    }\n  },\n  \"title\": \"DataColumnValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data_column</code>                 (<code>DataColumn</code>)             </li> <li> <code>data_column_id</code>                 (<code>str</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> <li> <code>hidden</code>                 (<code>bool</code>)             </li> <li> <code>unit</code>                 (<code>SerializeAsEntityLink[Unit] | None</code>)             </li> <li> <code>calculation</code>                 (<code>str | None</code>)             </li> <li> <code>sequence</code>                 (<code>str | None</code>)             </li> <li> <code>validation</code>                 (<code>list[ValueValidation] | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>check_for_id</code> </li> </ul>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue.data_column","title":"data_column","text":"<pre><code>data_column: DataColumn = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue.data_column_id","title":"data_column_id","text":"<pre><code>data_column_id: str = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue.hidden","title":"hidden","text":"<pre><code>hidden: bool = False\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue.unit","title":"unit","text":"<pre><code>unit: SerializeAsEntityLink[Unit] | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue.calculation","title":"calculation","text":"<pre><code>calculation: str | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue.sequence","title":"sequence","text":"<pre><code>sequence: str | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue.validation","title":"validation","text":"<pre><code>validation: list[ValueValidation] | None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataColumnValue.check_for_id","title":"check_for_id","text":"<pre><code>check_for_id()\n</code></pre> Source code in <code>src/albert/resources/data_templates.py</code> <pre><code>@model_validator(mode=\"after\")\ndef check_for_id(self):\n    if self.data_column_id is None and self.data_column is None:\n        raise ValueError(\"Either data_column_id or data_column must be set\")\n    elif (\n        self.data_column_id is not None\n        and self.data_column is not None\n        and self.data_column.id != self.data_column_id\n    ):\n        raise ValueError(\"If both are provided, data_column_id and data_column.id must match\")\n    elif self.data_column_id is None:\n        self.data_column_id = self.data_column.id\n    return self\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate","title":"DataTemplate","text":"<p>               Bases: <code>BaseTaggedResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataColumn\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"defalt\": {\n          \"default\": false,\n          \"title\": \"Defalt\",\n          \"type\": \"boolean\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"albertId\": {\n          \"default\": null,\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataColumn\",\n      \"type\": \"object\"\n    },\n    \"DataColumnValue\": {\n      \"properties\": {\n        \"data_column\": {\n          \"$ref\": \"#/$defs/DataColumn\",\n          \"default\": null\n        },\n        \"id\": {\n          \"default\": null,\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"hidden\": {\n          \"default\": false,\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        }\n      },\n      \"title\": \"DataColumnValue\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"description\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Description\"\n    },\n    \"security_class\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/SecurityClass\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"verified\": {\n      \"default\": false,\n      \"title\": \"Verified\",\n      \"type\": \"boolean\"\n    },\n    \"ACL\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/User\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Acl\"\n    },\n    \"DataColumns\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/DataColumnValue\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datacolumns\"\n    },\n    \"Parameters\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parameters\"\n    },\n    \"DeletedParameters\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Deletedparameters\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"DataTemplate\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>DataTemplateId | None</code>)             </li> <li> <code>description</code>                 (<code>str | None</code>)             </li> <li> <code>security_class</code>                 (<code>SecurityClass | None</code>)             </li> <li> <code>verified</code>                 (<code>bool</code>)             </li> <li> <code>users_with_access</code>                 (<code>list[SerializeAsEntityLink[User]] | None</code>)             </li> <li> <code>data_column_values</code>                 (<code>list[DataColumnValue] | None</code>)             </li> <li> <code>parameter_values</code>                 (<code>list[ParameterValue] | None</code>)             </li> <li> <code>deleted_parameters</code>                 (<code>list[ParameterValue] | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem] | None</code>)             </li> </ul>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.id","title":"id","text":"<pre><code>id: DataTemplateId | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.description","title":"description","text":"<pre><code>description: str | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.security_class","title":"security_class","text":"<pre><code>security_class: SecurityClass | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.verified","title":"verified","text":"<pre><code>verified: bool = False\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.users_with_access","title":"users_with_access","text":"<pre><code>users_with_access: (\n    list[SerializeAsEntityLink[User]] | None\n) = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.data_column_values","title":"data_column_values","text":"<pre><code>data_column_values: list[DataColumnValue] | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.parameter_values","title":"parameter_values","text":"<pre><code>parameter_values: list[ParameterValue] | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.deleted_parameters","title":"deleted_parameters","text":"<pre><code>deleted_parameters: list[ParameterValue] | None = None\n</code></pre>"},{"location":"resources/data_templates/#albert.resources.data_templates.DataTemplate.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem] | None = None\n</code></pre>"},{"location":"resources/files/","title":"Files","text":""},{"location":"resources/files/#albert.resources.files","title":"albert.resources.files","text":""},{"location":"resources/files/#albert.resources.files.FileNamespace","title":"FileNamespace","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>AGENT</code> <code>BREAKTHROUGH</code> <code>PIPELINE</code> <code>PUBLIC</code> <code>RESULT</code> <code>SDS</code>"},{"location":"resources/files/#albert.resources.files.FileNamespace.AGENT","title":"AGENT","text":"<pre><code>AGENT = 'agent'\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileNamespace.BREAKTHROUGH","title":"BREAKTHROUGH","text":"<pre><code>BREAKTHROUGH = 'breakthrough'\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileNamespace.PIPELINE","title":"PIPELINE","text":"<pre><code>PIPELINE = 'pipeline'\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileNamespace.PUBLIC","title":"PUBLIC","text":"<pre><code>PUBLIC = 'public'\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileNamespace.RESULT","title":"RESULT","text":"<pre><code>RESULT = 'result'\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileNamespace.SDS","title":"SDS","text":"<pre><code>SDS = 'sds'\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileCategory","title":"FileCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>SDS</code> <code>OTHER</code>"},{"location":"resources/files/#albert.resources.files.FileCategory.SDS","title":"SDS","text":"<pre><code>SDS = 'SDS'\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileCategory.OTHER","title":"OTHER","text":"<pre><code>OTHER = 'Other'\n</code></pre>"},{"location":"resources/files/#albert.resources.files.SignURLPOSTFile","title":"SignURLPOSTFile","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"FileCategory\": {\n      \"enum\": [\n        \"SDS\",\n        \"Other\"\n      ],\n      \"title\": \"FileCategory\",\n      \"type\": \"string\"\n    },\n    \"FileNamespace\": {\n      \"enum\": [\n        \"agent\",\n        \"breakthrough\",\n        \"pipeline\",\n        \"public\",\n        \"result\",\n        \"sds\"\n      ],\n      \"title\": \"FileNamespace\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"namespace\": {\n      \"$ref\": \"#/$defs/FileNamespace\"\n    },\n    \"contentType\": {\n      \"title\": \"Contenttype\",\n      \"type\": \"string\"\n    },\n    \"metadata\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/FileCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"url\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Url\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"namespace\",\n    \"contentType\"\n  ],\n  \"title\": \"SignURLPOSTFile\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>namespace</code>                 (<code>FileNamespace</code>)             </li> <li> <code>content_type</code>                 (<code>str</code>)             </li> <li> <code>metadata</code>                 (<code>list[dict[str, str]] | None</code>)             </li> <li> <code>category</code>                 (<code>FileCategory | None</code>)             </li> <li> <code>url</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/files/#albert.resources.files.SignURLPOSTFile.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/files/#albert.resources.files.SignURLPOSTFile.namespace","title":"namespace","text":"<pre><code>namespace: FileNamespace\n</code></pre>"},{"location":"resources/files/#albert.resources.files.SignURLPOSTFile.content_type","title":"content_type","text":"<pre><code>content_type: str\n</code></pre>"},{"location":"resources/files/#albert.resources.files.SignURLPOSTFile.metadata","title":"metadata","text":"<pre><code>metadata: list[dict[str, str]] | None = None\n</code></pre>"},{"location":"resources/files/#albert.resources.files.SignURLPOSTFile.category","title":"category","text":"<pre><code>category: FileCategory | None = None\n</code></pre>"},{"location":"resources/files/#albert.resources.files.SignURLPOSTFile.url","title":"url","text":"<pre><code>url: str | None = None\n</code></pre>"},{"location":"resources/files/#albert.resources.files.SignURLPOST","title":"SignURLPOST","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"FileCategory\": {\n      \"enum\": [\n        \"SDS\",\n        \"Other\"\n      ],\n      \"title\": \"FileCategory\",\n      \"type\": \"string\"\n    },\n    \"FileNamespace\": {\n      \"enum\": [\n        \"agent\",\n        \"breakthrough\",\n        \"pipeline\",\n        \"public\",\n        \"result\",\n        \"sds\"\n      ],\n      \"title\": \"FileNamespace\",\n      \"type\": \"string\"\n    },\n    \"SignURLPOSTFile\": {\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"namespace\": {\n          \"$ref\": \"#/$defs/FileNamespace\"\n        },\n        \"contentType\": {\n          \"title\": \"Contenttype\",\n          \"type\": \"string\"\n        },\n        \"metadata\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/FileCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"url\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Url\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"namespace\",\n        \"contentType\"\n      ],\n      \"title\": \"SignURLPOSTFile\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"files\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/SignURLPOSTFile\"\n      },\n      \"title\": \"Files\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"files\"\n  ],\n  \"title\": \"SignURLPOST\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>files</code>                 (<code>list[SignURLPOSTFile]</code>)             </li> </ul>"},{"location":"resources/files/#albert.resources.files.SignURLPOST.files","title":"files","text":"<pre><code>files: list[SignURLPOSTFile]\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileInfo","title":"FileInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"FileNamespace\": {\n      \"enum\": [\n        \"agent\",\n        \"breakthrough\",\n        \"pipeline\",\n        \"public\",\n        \"result\",\n        \"sds\"\n      ],\n      \"title\": \"FileNamespace\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"size\": {\n      \"title\": \"Size\",\n      \"type\": \"integer\"\n    },\n    \"etag\": {\n      \"title\": \"Etag\",\n      \"type\": \"string\"\n    },\n    \"namespace\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/FileNamespace\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"contentType\": {\n      \"title\": \"Contenttype\",\n      \"type\": \"string\"\n    },\n    \"lastModified\": {\n      \"format\": \"date-time\",\n      \"title\": \"Lastmodified\",\n      \"type\": \"string\"\n    },\n    \"metadata\": {\n      \"items\": {\n        \"additionalProperties\": {\n          \"type\": \"string\"\n        },\n        \"type\": \"object\"\n      },\n      \"title\": \"Metadata\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"size\",\n    \"etag\",\n    \"contentType\",\n    \"lastModified\"\n  ],\n  \"title\": \"FileInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>size</code>                 (<code>int</code>)             </li> <li> <code>etag</code>                 (<code>str</code>)             </li> <li> <code>namespace</code>                 (<code>FileNamespace | None</code>)             </li> <li> <code>content_type</code>                 (<code>str</code>)             </li> <li> <code>last_modified</code>                 (<code>datetime</code>)             </li> <li> <code>metadata</code>                 (<code>list[dict[str, str]]</code>)             </li> </ul>"},{"location":"resources/files/#albert.resources.files.FileInfo.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileInfo.size","title":"size","text":"<pre><code>size: int\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileInfo.etag","title":"etag","text":"<pre><code>etag: str\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileInfo.namespace","title":"namespace","text":"<pre><code>namespace: FileNamespace | None = None\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileInfo.content_type","title":"content_type","text":"<pre><code>content_type: str\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileInfo.last_modified","title":"last_modified","text":"<pre><code>last_modified: datetime\n</code></pre>"},{"location":"resources/files/#albert.resources.files.FileInfo.metadata","title":"metadata","text":"<pre><code>metadata: list[dict[str, str]]\n</code></pre>"},{"location":"resources/identifiers/","title":"Identifiers","text":""},{"location":"resources/identifiers/#albert.resources.identifiers","title":"albert.resources.identifiers","text":"<p>Functions:</p> Name Description <code>ensure_block_id</code> <code>ensure_btinsight_id</code> <code>ensure_btdataset_id</code> <code>ensure_btmodel_id</code> <code>ensure_btmodel_session_id</code> <code>ensure_inventory_id</code> <code>ensure_search_inventory_id</code> <code>ensure_interval_id</code> <code>ensure_parameter_id</code> <code>ensure_paramter_group_id</code> <code>ensure_custom_field_id</code> <code>ensure_entity_type_id</code> <code>ensure_data_column_id</code> <code>ensure_datatemplate_id</code> <code>ensure_propertydata_id</code> <code>ensure_task_id</code> <code>ensure_project_id</code> <code>ensure_project_search_id</code> <code>ensure_link_id</code> <code>ensure_lot_id</code> <code>ensure_notebook_id</code> <code>ensure_synthesis_id</code> <code>ensure_tag_id</code> <code>ensure_worksheet_id</code> <code>ensure_user_id</code> <code>ensure_unit_id</code> <code>ensure_workflow_id</code> <code>ensure_row_id</code> <p>Attributes:</p> Name Type Description <code>BlockId</code> <code>BTInsightId</code> <code>BTDatasetId</code> <code>BTModelId</code> <code>BTModelSessionId</code> <code>InventoryId</code> <code>SearchInventoryId</code> <code>IntervalId</code> <code>ParameterId</code> <code>ParameterGroupId</code> <code>CustomFieldId</code> <code>EntityTypeId</code> <code>DataColumnId</code> <code>DataTemplateId</code> <code>PropertyDataId</code> <code>TaskId</code> <code>ProjectId</code> <code>SearchProjectId</code> <code>LinkId</code> <code>LotId</code> <code>NotebookId</code> <code>SynthesisId</code> <code>TagId</code> <code>WorksheetId</code> <code>UserId</code> <code>UnitId</code> <code>WorkflowId</code> <code>RowId</code>"},{"location":"resources/identifiers/#albert.resources.identifiers.BlockId","title":"BlockId","text":"<pre><code>BlockId = Annotated[str, AfterValidator(ensure_block_id)]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.BTInsightId","title":"BTInsightId","text":"<pre><code>BTInsightId = Annotated[\n    str, AfterValidator(ensure_btinsight_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.BTDatasetId","title":"BTDatasetId","text":"<pre><code>BTDatasetId = Annotated[\n    str, AfterValidator(ensure_btdataset_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.BTModelId","title":"BTModelId","text":"<pre><code>BTModelId = Annotated[\n    str, AfterValidator(ensure_btmodel_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.BTModelSessionId","title":"BTModelSessionId","text":"<pre><code>BTModelSessionId = Annotated[\n    str, AfterValidator(ensure_btmodel_session_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.InventoryId","title":"InventoryId","text":"<pre><code>InventoryId = Annotated[\n    str, AfterValidator(ensure_inventory_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.SearchInventoryId","title":"SearchInventoryId","text":"<pre><code>SearchInventoryId = Annotated[\n    str, AfterValidator(ensure_search_inventory_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.IntervalId","title":"IntervalId","text":"<pre><code>IntervalId = Annotated[\n    str, AfterValidator(ensure_interval_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ParameterId","title":"ParameterId","text":"<pre><code>ParameterId = Annotated[\n    str, AfterValidator(ensure_parameter_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ParameterGroupId","title":"ParameterGroupId","text":"<pre><code>ParameterGroupId = Annotated[\n    str, AfterValidator(ensure_paramter_group_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.CustomFieldId","title":"CustomFieldId","text":"<pre><code>CustomFieldId = Annotated[\n    str, AfterValidator(ensure_custom_field_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.EntityTypeId","title":"EntityTypeId","text":"<pre><code>EntityTypeId = Annotated[\n    str, AfterValidator(ensure_entity_type_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.DataColumnId","title":"DataColumnId","text":"<pre><code>DataColumnId = Annotated[\n    str, AfterValidator(ensure_data_column_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.DataTemplateId","title":"DataTemplateId","text":"<pre><code>DataTemplateId = Annotated[\n    str, AfterValidator(ensure_datatemplate_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.PropertyDataId","title":"PropertyDataId","text":"<pre><code>PropertyDataId = Annotated[\n    str, AfterValidator(ensure_propertydata_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.TaskId","title":"TaskId","text":"<pre><code>TaskId = Annotated[str, AfterValidator(ensure_task_id)]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ProjectId","title":"ProjectId","text":"<pre><code>ProjectId = Annotated[\n    str, AfterValidator(ensure_project_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.SearchProjectId","title":"SearchProjectId","text":"<pre><code>SearchProjectId = Annotated[\n    str, AfterValidator(ensure_project_search_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.LinkId","title":"LinkId","text":"<pre><code>LinkId = Annotated[str, AfterValidator(ensure_link_id)]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.LotId","title":"LotId","text":"<pre><code>LotId = Annotated[str, AfterValidator(ensure_lot_id)]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.NotebookId","title":"NotebookId","text":"<pre><code>NotebookId = Annotated[\n    str, AfterValidator(ensure_notebook_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.SynthesisId","title":"SynthesisId","text":"<pre><code>SynthesisId = Annotated[\n    str, AfterValidator(ensure_synthesis_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.TagId","title":"TagId","text":"<pre><code>TagId = Annotated[str, AfterValidator(ensure_tag_id)]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.WorksheetId","title":"WorksheetId","text":"<pre><code>WorksheetId = Annotated[\n    str, AfterValidator(ensure_worksheet_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.UserId","title":"UserId","text":"<pre><code>UserId = Annotated[str, AfterValidator(ensure_user_id)]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.UnitId","title":"UnitId","text":"<pre><code>UnitId = Annotated[str, AfterValidator(ensure_unit_id)]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.WorkflowId","title":"WorkflowId","text":"<pre><code>WorkflowId = Annotated[\n    str, AfterValidator(ensure_workflow_id)\n]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.RowId","title":"RowId","text":"<pre><code>RowId = Annotated[str, AfterValidator(ensure_row_id)]\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_block_id","title":"ensure_block_id","text":"<pre><code>ensure_block_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_block_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"BlockId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_btinsight_id","title":"ensure_btinsight_id","text":"<pre><code>ensure_btinsight_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_btinsight_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"BTInsightId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_btdataset_id","title":"ensure_btdataset_id","text":"<pre><code>ensure_btdataset_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_btdataset_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"BTDatasetId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_btmodel_id","title":"ensure_btmodel_id","text":"<pre><code>ensure_btmodel_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_btmodel_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"BTModelId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_btmodel_session_id","title":"ensure_btmodel_session_id","text":"<pre><code>ensure_btmodel_session_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_btmodel_session_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"BTModelSessionId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_inventory_id","title":"ensure_inventory_id","text":"<pre><code>ensure_inventory_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_inventory_id(id: str) -&gt; str:\n    id = _validate_coded_id(id, \"InventoryId\")\n    return _ensure_albert_id(id, \"InventoryId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_search_inventory_id","title":"ensure_search_inventory_id","text":"<pre><code>ensure_search_inventory_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_search_inventory_id(id: str) -&gt; str:\n    id = _validate_coded_id(id, \"SearchInventoryId\")\n    if id.upper().startswith(\"INV\"):\n        id = id[3:]  # Remove INV prefix\n    return id\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_interval_id","title":"ensure_interval_id","text":"<pre><code>ensure_interval_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_interval_id(id: str) -&gt; str:\n    if not id:\n        raise ValueError(\"IntervalId cannot be empty\")\n\n    # Check if it matches ROW# or ROW#XROW# pattern\n    parts = id.upper().split(\"X\")\n    if len(parts) &gt; 2:\n        raise ValueError(f\"IntervalId {id} is invalid. Must be in format ROW# or ROW#XROW#\")\n\n    for part in parts:\n        if not part.startswith(\"ROW\") or not part[3:].isdigit():\n            raise ValueError(f\"IntervalId {id} is invalid. Must be in format ROW# or ROW#XROW#\")\n\n    return id.upper()\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_parameter_id","title":"ensure_parameter_id","text":"<pre><code>ensure_parameter_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_parameter_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"ParameterId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_paramter_group_id","title":"ensure_paramter_group_id","text":"<pre><code>ensure_paramter_group_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_paramter_group_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"ParameterGroupId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_custom_field_id","title":"ensure_custom_field_id","text":"<pre><code>ensure_custom_field_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_custom_field_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"CustomFieldId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_entity_type_id","title":"ensure_entity_type_id","text":"<pre><code>ensure_entity_type_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_entity_type_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"EntityTypeId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_data_column_id","title":"ensure_data_column_id","text":"<pre><code>ensure_data_column_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_data_column_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"DataColumnId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_datatemplate_id","title":"ensure_datatemplate_id","text":"<pre><code>ensure_datatemplate_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_datatemplate_id(id: str) -&gt; str:\n    if id and id.upper().startswith(\"DT\"):\n        id = f\"DAT{id[2:]}\"  # Replace DT with DAT\n    return _ensure_albert_id(id, \"DataTemplateId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_propertydata_id","title":"ensure_propertydata_id","text":"<pre><code>ensure_propertydata_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_propertydata_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"PropertyDataId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_task_id","title":"ensure_task_id","text":"<pre><code>ensure_task_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_task_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"TaskId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_project_id","title":"ensure_project_id","text":"<pre><code>ensure_project_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_project_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"ProjectId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_project_search_id","title":"ensure_project_search_id","text":"<pre><code>ensure_project_search_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_project_search_id(id: str) -&gt; str:\n    id = _validate_coded_id(id, \"ProjectSearchId\")\n    if id.upper().startswith(\"PRO\"):\n        id = id[3:]  # Remove PRO prefix\n    return id\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_link_id","title":"ensure_link_id","text":"<pre><code>ensure_link_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_link_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"LinkId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_lot_id","title":"ensure_lot_id","text":"<pre><code>ensure_lot_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_lot_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"LotId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_notebook_id","title":"ensure_notebook_id","text":"<pre><code>ensure_notebook_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_notebook_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"NotebookId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_synthesis_id","title":"ensure_synthesis_id","text":"<pre><code>ensure_synthesis_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_synthesis_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"SynthesisId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_tag_id","title":"ensure_tag_id","text":"<pre><code>ensure_tag_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_tag_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"TagId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_worksheet_id","title":"ensure_worksheet_id","text":"<pre><code>ensure_worksheet_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_worksheet_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"WorksheetId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_user_id","title":"ensure_user_id","text":"<pre><code>ensure_user_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_user_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"UserId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_unit_id","title":"ensure_unit_id","text":"<pre><code>ensure_unit_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_unit_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"UnitId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_workflow_id","title":"ensure_workflow_id","text":"<pre><code>ensure_workflow_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_workflow_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"WorkflowId\")\n</code></pre>"},{"location":"resources/identifiers/#albert.resources.identifiers.ensure_row_id","title":"ensure_row_id","text":"<pre><code>ensure_row_id(id: str) -&gt; str\n</code></pre> Source code in <code>src/albert/resources/identifiers.py</code> <pre><code>def ensure_row_id(id: str) -&gt; str:\n    return _ensure_albert_id(id, \"RowId\")\n</code></pre>"},{"location":"resources/inventory/","title":"Inventory","text":""},{"location":"resources/inventory/#albert.resources.inventory","title":"albert.resources.inventory","text":"<p>Attributes:</p> Name Type Description <code>ALL_MERGE_MODULES</code> <p>All modules selectable for inventory merge.</p>"},{"location":"resources/inventory/#albert.resources.inventory.ALL_MERGE_MODULES","title":"ALL_MERGE_MODULES","text":"<pre><code>ALL_MERGE_MODULES = [\n    \"PRICING\",\n    \"NOTES\",\n    \"SDS\",\n    \"PD\",\n    \"BD\",\n    \"LOT\",\n    \"CAS\",\n    \"TAS\",\n    \"WFL\",\n    \"PRG\",\n    \"PTD\",\n]\n</code></pre> <p>All modules selectable for inventory merge.</p>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryCategory","title":"InventoryCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>RAW_MATERIALS</code> <code>CONSUMABLES</code> <code>EQUIPMENT</code> <code>FORMULAS</code>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryCategory.RAW_MATERIALS","title":"RAW_MATERIALS","text":"<pre><code>RAW_MATERIALS = 'RawMaterials'\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryCategory.CONSUMABLES","title":"CONSUMABLES","text":"<pre><code>CONSUMABLES = 'Consumables'\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryCategory.EQUIPMENT","title":"EQUIPMENT","text":"<pre><code>EQUIPMENT = 'Equipment'\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryCategory.FORMULAS","title":"FORMULAS","text":"<pre><code>FORMULAS = 'Formulas'\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryUnitCategory","title":"InventoryUnitCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>MASS</code> <code>VOLUME</code> <code>LENGTH</code> <code>PRESSURE</code> <code>UNITS</code>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryUnitCategory.MASS","title":"MASS","text":"<pre><code>MASS = 'mass'\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryUnitCategory.VOLUME","title":"VOLUME","text":"<pre><code>VOLUME = 'volume'\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryUnitCategory.LENGTH","title":"LENGTH","text":"<pre><code>LENGTH = 'length'\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryUnitCategory.PRESSURE","title":"PRESSURE","text":"<pre><code>PRESSURE = 'pressure'\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryUnitCategory.UNITS","title":"UNITS","text":"<pre><code>UNITS = 'units'\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount","title":"CasAmount","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>CasAmount is a Pydantic model representing an amount of a given CAS.</p> <p>Attributes:</p> Name Type Description <code>min</code> <code>float</code> <p>The minimum amount of the CAS in the formulation.</p> <code>max</code> <code>float</code> <p>The maximum amount of the CAS in the formulation.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.</p> <code>cas</code> <code>Cas | None</code> <p>The CAS object associated with this amount. Provide either a Cas or an id.</p> <code>cas_smiles</code> <code>str | None</code> <p>The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.</p> <code>number</code> <code>str | None</code> <p>The CAS number. Obtained from the Cas object when provided.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n  \"properties\": {\n    \"min\": {\n      \"title\": \"Min\",\n      \"type\": \"number\"\n    },\n    \"max\": {\n      \"title\": \"Max\",\n      \"type\": \"number\"\n    },\n    \"inventoryValue\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventoryvalue\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"casCategory\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cascategory\"\n    },\n    \"cas\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Cas\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"casSmiles\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cassmiles\"\n    },\n    \"number\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Number\"\n    }\n  },\n  \"required\": [\n    \"min\",\n    \"max\"\n  ],\n  \"title\": \"CasAmount\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>min</code>                 (<code>float</code>)             </li> <li> <code>max</code>                 (<code>float</code>)             </li> <li> <code>target</code>                 (<code>float | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>cas_category</code>                 (<code>str | None</code>)             </li> <li> <code>cas</code>                 (<code>Cas | None</code>)             </li> <li> <code>cas_smiles</code>                 (<code>str | None</code>)             </li> <li> <code>number</code>                 (<code>str | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>set_cas_attributes</code> </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount.min","title":"min","text":"<pre><code>min: float\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount.max","title":"max","text":"<pre><code>max: float\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount.target","title":"target","text":"<pre><code>target: float | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount.cas_category","title":"cas_category","text":"<pre><code>cas_category: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount.cas","title":"cas","text":"<pre><code>cas: Cas | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount.cas_smiles","title":"cas_smiles","text":"<pre><code>cas_smiles: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount.number","title":"number","text":"<pre><code>number: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.CasAmount.set_cas_attributes","title":"set_cas_attributes","text":"<pre><code>set_cas_attributes() -&gt; CasAmount\n</code></pre> <p>Set attributes after model initialization from the Cas object, if provided.</p> Source code in <code>src/albert/resources/inventory.py</code> <pre><code>@model_validator(mode=\"after\")\ndef set_cas_attributes(self: \"CasAmount\") -&gt; \"CasAmount\":\n    \"\"\"Set attributes after model initialization from the Cas object, if provided.\"\"\"\n    if self.cas is not None:\n        object.__setattr__(self, \"id\", self.cas.id)\n        object.__setattr__(self, \"cas_smiles\", self.cas.smiles)\n        object.__setattr__(self, \"number\", self.cas.number)\n    return self\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryMinimum","title":"InventoryMinimum","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <p>The unique identifier of the Location object associated with this InventoryMinimum. Provide either a Location or a location id.</p> <code>location</code> <code>Location</code> <p>The Location object associated with this InventoryMinimum. Provide either a Location or a location id.</p> <code>minimum</code> <code>float</code> <p>The minimum amount of the InventoryItem that must be kept in stock at the given Location.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"minimum\": {\n      \"maximum\": 1000000000000000,\n      \"minimum\": 0,\n      \"title\": \"Minimum\",\n      \"type\": \"number\"\n    }\n  },\n  \"required\": [\n    \"minimum\"\n  ],\n  \"title\": \"InventoryMinimum\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>location</code>                 (<code>Location | None</code>)             </li> <li> <code>minimum</code>                 (<code>float</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>check_id_or_location</code> </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryMinimum.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryMinimum.location","title":"location","text":"<pre><code>location: Location | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryMinimum.minimum","title":"minimum","text":"<pre><code>minimum: float\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryMinimum.check_id_or_location","title":"check_id_or_location","text":"<pre><code>check_id_or_location() -&gt; InventoryMinimum\n</code></pre> <p>Ensure that either an id or a location is provided.</p> Source code in <code>src/albert/resources/inventory.py</code> <pre><code>@model_validator(mode=\"after\")\ndef check_id_or_location(self: \"InventoryMinimum\") -&gt; \"InventoryMinimum\":\n    \"\"\"\n    Ensure that either an id or a location is provided.\n    \"\"\"\n    if self.id is None and self.location is None:\n        raise ValueError(\n            \"Either an id or a location must be provided for an InventoryMinimum.\"\n        )\n    if self.id and self.location and self.location.id != self.id:\n        raise ValueError(\n            \"Only an id or a location can be provided for an InventoryMinimum, not both.\"\n        )\n\n    elif self.location:\n        # Avoid recursion by setting the attribute directly\n        object.__setattr__(self, \"id\", self.location.id)\n        object.__setattr__(self, \"name\", self.location.name)\n\n    return self\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem","title":"InventoryItem","text":"<p>               Bases: <code>BaseTaggedResource</code></p> <p>An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula. Note: Formulas should be registered via the Worksheet collection / Sheet resource.</p> <p>Returns:</p> Type Description <code>InventoryItem</code> <p>An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the InventoryItem.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.</p> <code>description</code> <code>str | None</code> <p>The description of the InventoryItem.</p> <code>category</code> <code>InventoryCategory</code> <p>The category of the InventoryItem. Allowed values are <code>RawMaterials</code>, <code>Consumables</code>, <code>Equipment</code>, and <code>Formulas</code>.</p> <code>unit_category</code> <code>InventoryUnitCategory</code> <p>The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.</p> <code>security_class</code> <code>SecurityClass | None</code> <p>The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.</p> <code>company</code> <code>Company | str | None</code> <p>The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.</p> <code>minimum</code> <code>list[InventoryMinimum] | None</code> <p>The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.</p> <code>alias</code> <code>str | None</code> <p>An alias for the InventoryItem. Optional.</p> <code>cas</code> <code>list[CasAmount] | None</code> <p>The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.</p> <code>metadata</code> <code>dict[str, str | list[EntityLink] | EntityLink] | None</code> <p>Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.</p> <code>project_id</code> <code>str | None</code> <p>The project ID associated with the InventoryItem. Read Only. Required for Formulas.</p> <code>formula_id</code> <code>str | None</code> <p>The formula ID associated with the InventoryItem. Read Only.</p> <code>tags</code> <code>list[str | Tag] | None</code> <p>The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"description\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Description\"\n    },\n    \"category\": {\n      \"$ref\": \"#/$defs/InventoryCategory\"\n    },\n    \"unitCategory\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/InventoryUnitCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/SecurityClass\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Company\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Company\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Company\"\n    },\n    \"minimum\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/InventoryMinimum\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Minimum\"\n    },\n    \"alias\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Alias\"\n    },\n    \"Cas\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/CasAmount\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cas\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"ACL\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ACL\"\n      },\n      \"title\": \"Acl\",\n      \"type\": \"array\"\n    },\n    \"TaskConfig\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"additionalProperties\": true,\n            \"type\": \"object\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Taskconfig\"\n    },\n    \"formulaId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Formulaid\"\n    },\n    \"Symbols\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"additionalProperties\": true,\n            \"type\": \"object\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Symbols\"\n    },\n    \"unNumber\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unnumber\"\n    },\n    \"recentAttachmentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Recentattachmentid\"\n    }\n  },\n  \"required\": [\n    \"category\"\n  ],\n  \"title\": \"InventoryItem\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>description</code>                 (<code>str | None</code>)             </li> <li> <code>category</code>                 (<code>InventoryCategory</code>)             </li> <li> <code>unit_category</code>                 (<code>InventoryUnitCategory | None</code>)             </li> <li> <code>security_class</code>                 (<code>SecurityClass | None</code>)             </li> <li> <code>company</code>                 (<code>SerializeAsEntityLink[Company] | None</code>)             </li> <li> <code>minimum</code>                 (<code>list[InventoryMinimum] | None</code>)             </li> <li> <code>alias</code>                 (<code>str | None</code>)             </li> <li> <code>cas</code>                 (<code>list[CasAmount] | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem] | None</code>)             </li> <li> <code>project_id</code>                 (<code>str | None</code>)             </li> <li> <code>acls</code>                 (<code>list[ACL]</code>)             </li> <li> <code>task_config</code>                 (<code>list[dict] | None</code>)             </li> <li> <code>formula_id</code>                 (<code>str | None</code>)             </li> <li> <code>symbols</code>                 (<code>list[dict] | None</code>)             </li> <li> <code>un_number</code>                 (<code>str | None</code>)             </li> <li> <code>recent_atachment_id</code>                 (<code>str | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>validate_company_string</code>                 \u2192                   <code>company</code> </li> <li> <code>validate_un_number</code>                 \u2192                   <code>un_number</code> </li> <li> <code>set_unit_category</code> </li> <li> <code>validate_formula_fields</code> </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.description","title":"description","text":"<pre><code>description: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.category","title":"category","text":"<pre><code>category: InventoryCategory\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.unit_category","title":"unit_category","text":"<pre><code>unit_category: InventoryUnitCategory | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.security_class","title":"security_class","text":"<pre><code>security_class: SecurityClass | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.company","title":"company","text":"<pre><code>company: SerializeAsEntityLink[Company] | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.minimum","title":"minimum","text":"<pre><code>minimum: list[InventoryMinimum] | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.alias","title":"alias","text":"<pre><code>alias: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.cas","title":"cas","text":"<pre><code>cas: list[CasAmount] | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem] | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.project_id","title":"project_id","text":"<pre><code>project_id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.acls","title":"acls","text":"<pre><code>acls: list[ACL]\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.task_config","title":"task_config","text":"<pre><code>task_config: list[dict] | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.formula_id","title":"formula_id","text":"<pre><code>formula_id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.symbols","title":"symbols","text":"<pre><code>symbols: list[dict] | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.un_number","title":"un_number","text":"<pre><code>un_number: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.recent_atachment_id","title":"recent_atachment_id","text":"<pre><code>recent_atachment_id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.validate_company_string","title":"validate_company_string","text":"<pre><code>validate_company_string(value: Any) -&gt; Any\n</code></pre> Source code in <code>src/albert/resources/inventory.py</code> <pre><code>@field_validator(\"company\", mode=\"before\")\n@classmethod\ndef validate_company_string(cls, value: Any) -&gt; Any:\n    if isinstance(value, str):\n        value = Company(name=value)\n    return value\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.validate_un_number","title":"validate_un_number","text":"<pre><code>validate_un_number(value: Any) -&gt; Any\n</code></pre> Source code in <code>src/albert/resources/inventory.py</code> <pre><code>@field_validator(\"un_number\", mode=\"before\")\n@classmethod\ndef validate_un_number(cls, value: Any) -&gt; Any:\n    if value == \"N/A\":\n        value = None\n    return value\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.set_unit_category","title":"set_unit_category","text":"<pre><code>set_unit_category() -&gt; InventoryItem\n</code></pre> <p>Set unit category from category if not defined.</p> Source code in <code>src/albert/resources/inventory.py</code> <pre><code>@model_validator(mode=\"after\")\ndef set_unit_category(self) -&gt; \"InventoryItem\":\n    \"\"\"Set unit category from category if not defined.\"\"\"\n    if self.unit_category is None:\n        if self.category in [InventoryCategory.RAW_MATERIALS, InventoryCategory.FORMULAS]:\n            object.__setattr__(self, \"unit_category\", InventoryUnitCategory.MASS)\n        elif self.category in [InventoryCategory.EQUIPMENT, InventoryCategory.CONSUMABLES]:\n            object.__setattr__(self, \"unit_category\", InventoryUnitCategory.UNITS)\n    return self\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventoryItem.validate_formula_fields","title":"validate_formula_fields","text":"<pre><code>validate_formula_fields() -&gt; InventoryItem\n</code></pre> <p>Ensure required fields are present for formulas.</p> Source code in <code>src/albert/resources/inventory.py</code> <pre><code>@model_validator(mode=\"after\")\ndef validate_formula_fields(self) -&gt; \"InventoryItem\":\n    \"\"\"Ensure required fields are present for formulas.\"\"\"\n    if self.category == InventoryCategory.FORMULAS and not self.project_id and not self.id:\n        # Some legacy on platform formulas don't have a project_id so check if its already on platform\n        raise ValueError(\"A project_id must be supplied for all formulas.\")\n    return self\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpecValue","title":"InventorySpecValue","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"min\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Min\"\n    },\n    \"max\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Max\"\n    },\n    \"reference\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Reference\"\n    },\n    \"comparisonOperator\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Comparisonoperator\"\n    }\n  },\n  \"title\": \"InventorySpecValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>min</code>                 (<code>str | None</code>)             </li> <li> <code>max</code>                 (<code>str | None</code>)             </li> <li> <code>reference</code>                 (<code>str | None</code>)             </li> <li> <code>comparison_operator</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpecValue.min","title":"min","text":"<pre><code>min: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpecValue.max","title":"max","text":"<pre><code>max: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpecValue.reference","title":"reference","text":"<pre><code>reference: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpecValue.comparison_operator","title":"comparison_operator","text":"<pre><code>comparison_operator: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec","title":"InventorySpec","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"InventorySpecValue\": {\n      \"properties\": {\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"reference\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Reference\"\n        },\n        \"comparisonOperator\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Comparisonoperator\"\n        }\n      },\n      \"title\": \"InventorySpecValue\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"datacolumnId\": {\n      \"title\": \"Datacolumnid\",\n      \"type\": \"string\"\n    },\n    \"datacolumnName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datacolumnname\"\n    },\n    \"datatemplateId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datatemplateid\"\n    },\n    \"datatemplateName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datatemplatename\"\n    },\n    \"unitId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unitid\"\n    },\n    \"unitName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unitname\"\n    },\n    \"workflowId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Workflowid\"\n    },\n    \"workflowName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Workflowname\"\n    },\n    \"specConfig\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Specconfig\"\n    },\n    \"Value\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/InventorySpecValue\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"datacolumnId\"\n  ],\n  \"title\": \"InventorySpec\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>data_column_id</code>                 (<code>str</code>)             </li> <li> <code>data_column_name</code>                 (<code>str | None</code>)             </li> <li> <code>data_template_id</code>                 (<code>str | None</code>)             </li> <li> <code>data_template_name</code>                 (<code>str | None</code>)             </li> <li> <code>unit_id</code>                 (<code>str | None</code>)             </li> <li> <code>unit_name</code>                 (<code>str | None</code>)             </li> <li> <code>workflow_id</code>                 (<code>str | None</code>)             </li> <li> <code>workflow_name</code>                 (<code>str | None</code>)             </li> <li> <code>spec_config</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>InventorySpecValue | None</code>)             </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.data_column_id","title":"data_column_id","text":"<pre><code>data_column_id: str\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.data_column_name","title":"data_column_name","text":"<pre><code>data_column_name: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.data_template_id","title":"data_template_id","text":"<pre><code>data_template_id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.data_template_name","title":"data_template_name","text":"<pre><code>data_template_name: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.unit_id","title":"unit_id","text":"<pre><code>unit_id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.unit_name","title":"unit_name","text":"<pre><code>unit_name: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.workflow_id","title":"workflow_id","text":"<pre><code>workflow_id: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.workflow_name","title":"workflow_name","text":"<pre><code>workflow_name: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.spec_config","title":"spec_config","text":"<pre><code>spec_config: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpec.value","title":"value","text":"<pre><code>value: InventorySpecValue | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpecList","title":"InventorySpecList","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"InventorySpec\": {\n      \"properties\": {\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"datacolumnId\": {\n          \"title\": \"Datacolumnid\",\n          \"type\": \"string\"\n        },\n        \"datacolumnName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnname\"\n        },\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"datatemplateName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplatename\"\n        },\n        \"unitId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unitid\"\n        },\n        \"unitName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unitname\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"workflowName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowname\"\n        },\n        \"specConfig\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Specconfig\"\n        },\n        \"Value\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventorySpecValue\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"datacolumnId\"\n      ],\n      \"title\": \"InventorySpec\",\n      \"type\": \"object\"\n    },\n    \"InventorySpecValue\": {\n      \"properties\": {\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"reference\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Reference\"\n        },\n        \"comparisonOperator\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Comparisonoperator\"\n        }\n      },\n      \"title\": \"InventorySpecValue\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"Specs\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/InventorySpec\"\n      },\n      \"title\": \"Specs\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"parentId\",\n    \"Specs\"\n  ],\n  \"title\": \"InventorySpecList\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>parent_id</code>                 (<code>str</code>)             </li> <li> <code>specs</code>                 (<code>list[InventorySpec]</code>)             </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpecList.parent_id","title":"parent_id","text":"<pre><code>parent_id: str\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySpecList.specs","title":"specs","text":"<pre><code>specs: list[InventorySpec]\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchPictogramItem","title":"InventorySearchPictogramItem","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Status\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"name\"\n  ],\n  \"title\": \"InventorySearchPictogramItem\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>status</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchPictogramItem.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchPictogramItem.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchPictogramItem.status","title":"status","text":"<pre><code>status: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchSDSItem","title":"InventorySearchSDSItem","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"unNumber\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unnumber\"\n    },\n    \"storageClassName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Storageclassname\"\n    },\n    \"shippingDescription\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Shippingdescription\"\n    },\n    \"storageClassNumber\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Storageclassnumber\"\n    },\n    \"unClassification\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unclassification\"\n    }\n  },\n  \"title\": \"InventorySearchSDSItem\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>un_number</code>                 (<code>str | None</code>)             </li> <li> <code>storage_class_name</code>                 (<code>str | None</code>)             </li> <li> <code>shipping_description</code>                 (<code>str | None</code>)             </li> <li> <code>storage_class_number</code>                 (<code>str | None</code>)             </li> <li> <code>un_classification</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchSDSItem.un_number","title":"un_number","text":"<pre><code>un_number: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchSDSItem.storage_class_name","title":"storage_class_name","text":"<pre><code>storage_class_name: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchSDSItem.shipping_description","title":"shipping_description","text":"<pre><code>shipping_description: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchSDSItem.storage_class_number","title":"storage_class_number","text":"<pre><code>storage_class_number: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchSDSItem.un_classification","title":"un_classification","text":"<pre><code>un_classification: str | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem","title":"InventorySearchItem","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventorySearchPictogramItem\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"title\": \"InventorySearchPictogramItem\",\n      \"type\": \"object\"\n    },\n    \"InventorySearchSDSItem\": {\n      \"properties\": {\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"storageClassName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Storageclassname\"\n        },\n        \"shippingDescription\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shippingdescription\"\n        },\n        \"storageClassNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Storageclassnumber\"\n        },\n        \"unClassification\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unclassification\"\n        }\n      },\n      \"title\": \"InventorySearchSDSItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"default\": \"\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"default\": \"\",\n      \"title\": \"Description\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"$ref\": \"#/$defs/InventoryCategory\"\n    },\n    \"unit\": {\n      \"$ref\": \"#/$defs/InventoryUnitCategory\"\n    },\n    \"lots\": {\n      \"items\": {\n        \"additionalProperties\": true,\n        \"type\": \"object\"\n      },\n      \"title\": \"Lots\",\n      \"type\": \"array\"\n    },\n    \"tags\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/Tag\"\n      },\n      \"title\": \"Tags\",\n      \"type\": \"array\"\n    },\n    \"pictogram\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/InventorySearchPictogramItem\"\n      },\n      \"title\": \"Pictogram\",\n      \"type\": \"array\"\n    },\n    \"inventoryOnHand\": {\n      \"default\": 0.0,\n      \"title\": \"Inventoryonhand\",\n      \"type\": \"number\"\n    },\n    \"SDS\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/InventorySearchSDSItem\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"required\": [\n    \"albertId\",\n    \"category\",\n    \"unit\"\n  ],\n  \"title\": \"InventorySearchItem\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>description</code>                 (<code>str</code>)             </li> <li> <code>category</code>                 (<code>InventoryCategory</code>)             </li> <li> <code>unit</code>                 (<code>InventoryUnitCategory</code>)             </li> <li> <code>lots</code>                 (<code>list[dict[str, Any]]</code>)             </li> <li> <code>tags</code>                 (<code>list[Tag]</code>)             </li> <li> <code>pictogram</code>                 (<code>list[InventorySearchPictogramItem]</code>)             </li> <li> <code>inventory_on_hand</code>                 (<code>float</code>)             </li> <li> <code>sds</code>                 (<code>InventorySearchSDSItem | None</code>)             </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.name","title":"name","text":"<pre><code>name: str = ''\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.description","title":"description","text":"<pre><code>description: str = ''\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.category","title":"category","text":"<pre><code>category: InventoryCategory\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.unit","title":"unit","text":"<pre><code>unit: InventoryUnitCategory\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.lots","title":"lots","text":"<pre><code>lots: list[dict[str, Any]]\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.tags","title":"tags","text":"<pre><code>tags: list[Tag]\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.pictogram","title":"pictogram","text":"<pre><code>pictogram: list[InventorySearchPictogramItem]\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.inventory_on_hand","title":"inventory_on_hand","text":"<pre><code>inventory_on_hand: float = 0.0\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.InventorySearchItem.sds","title":"sds","text":"<pre><code>sds: InventorySearchSDSItem | None = None\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.MergeInventory","title":"MergeInventory","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"ChildInventories\": {\n      \"items\": {\n        \"additionalProperties\": {\n          \"type\": \"string\"\n        },\n        \"type\": \"object\"\n      },\n      \"title\": \"Childinventories\",\n      \"type\": \"array\"\n    },\n    \"modules\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Modules\"\n    }\n  },\n  \"required\": [\n    \"parentId\",\n    \"ChildInventories\"\n  ],\n  \"title\": \"MergeInventory\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>parent_id</code>                 (<code>InventoryId</code>)             </li> <li> <code>child_inventories</code>                 (<code>list[dict[str, InventoryId]]</code>)             </li> <li> <code>modules</code>                 (<code>list[str] | None</code>)             </li> </ul>"},{"location":"resources/inventory/#albert.resources.inventory.MergeInventory.parent_id","title":"parent_id","text":"<pre><code>parent_id: InventoryId\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.MergeInventory.child_inventories","title":"child_inventories","text":"<pre><code>child_inventories: list[dict[str, InventoryId]]\n</code></pre>"},{"location":"resources/inventory/#albert.resources.inventory.MergeInventory.modules","title":"modules","text":"<pre><code>modules: list[str] | None = None\n</code></pre>"},{"location":"resources/links/","title":"Links","text":""},{"location":"resources/links/#albert.resources.links","title":"albert.resources.links","text":""},{"location":"resources/links/#albert.resources.links.LinkCategory","title":"LinkCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>MENTION</code> <code>LINKED_TASK</code> <code>SYNTHESIS</code> <code>LINKED_INVENTORY</code>"},{"location":"resources/links/#albert.resources.links.LinkCategory.MENTION","title":"MENTION","text":"<pre><code>MENTION = 'mention'\n</code></pre>"},{"location":"resources/links/#albert.resources.links.LinkCategory.LINKED_TASK","title":"LINKED_TASK","text":"<pre><code>LINKED_TASK = 'linkedTask'\n</code></pre>"},{"location":"resources/links/#albert.resources.links.LinkCategory.SYNTHESIS","title":"SYNTHESIS","text":"<pre><code>SYNTHESIS = 'synthesis'\n</code></pre>"},{"location":"resources/links/#albert.resources.links.LinkCategory.LINKED_INVENTORY","title":"LINKED_INVENTORY","text":"<pre><code>LINKED_INVENTORY = 'linkedInventory'\n</code></pre>"},{"location":"resources/links/#albert.resources.links.Link","title":"Link","text":"<p>               Bases: <code>BaseResource</code></p> <p>A link in Albert.</p> <p>Attributes:</p> Name Type Description <code>parent</code> <code>EntityLink</code> <p>The parent entity of the link.</p> <code>child</code> <code>EntityLink</code> <p>The child entity of the link.</p> <code>category</code> <code>LinkCategory</code> <p>The category of the link. Allowed values are <code>mention</code>, <code>linkedTask</code>, and <code>synthesis</code>.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the link. Set when the link is retrieved from Albert.</p> <code>counter</code> <code>int | None</code> <p>The counter of the link. Optional.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"LinkCategory\": {\n      \"enum\": [\n        \"mention\",\n        \"linkedTask\",\n        \"synthesis\",\n        \"linkedInventory\"\n      ],\n      \"title\": \"LinkCategory\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A link in Albert.\\n\\nAttributes\\n----------\\nparent : EntityLink\\n    The parent entity of the link.\\nchild : EntityLink\\n    The child entity of the link.\\ncategory : LinkCategory\\n    The category of the link. Allowed values are `mention`, `linkedTask`, and `synthesis`.\\nid : str | None\\n    The Albert ID of the link. Set when the link is retrieved from Albert.\\ncounter : int | None\\n    The counter of the link. Optional.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Parent\": {\n      \"$ref\": \"#/$defs/EntityLink\"\n    },\n    \"Child\": {\n      \"$ref\": \"#/$defs/EntityLink\"\n    },\n    \"category\": {\n      \"$ref\": \"#/$defs/LinkCategory\"\n    },\n    \"counter\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Counter\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    }\n  },\n  \"required\": [\n    \"Parent\",\n    \"Child\",\n    \"category\"\n  ],\n  \"title\": \"Link\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>parent</code>                 (<code>EntityLink</code>)             </li> <li> <code>child</code>                 (<code>EntityLink</code>)             </li> <li> <code>category</code>                 (<code>LinkCategory</code>)             </li> <li> <code>counter</code>                 (<code>int | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/links/#albert.resources.links.Link.parent","title":"parent","text":"<pre><code>parent: EntityLink\n</code></pre>"},{"location":"resources/links/#albert.resources.links.Link.child","title":"child","text":"<pre><code>child: EntityLink\n</code></pre>"},{"location":"resources/links/#albert.resources.links.Link.category","title":"category","text":"<pre><code>category: LinkCategory\n</code></pre>"},{"location":"resources/links/#albert.resources.links.Link.counter","title":"counter","text":"<pre><code>counter: int | None = None\n</code></pre>"},{"location":"resources/links/#albert.resources.links.Link.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/lists/","title":"Lists","text":""},{"location":"resources/lists/#albert.resources.lists","title":"albert.resources.lists","text":""},{"location":"resources/lists/#albert.resources.lists.ListItemCategory","title":"ListItemCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>BUSINESS_DEFINED</code> <code>USER_DEFINED</code> <code>PROJECTS</code> <code>EXTENSIONS</code> <code>INVENTORY</code>"},{"location":"resources/lists/#albert.resources.lists.ListItemCategory.BUSINESS_DEFINED","title":"BUSINESS_DEFINED","text":"<pre><code>BUSINESS_DEFINED = 'businessDefined'\n</code></pre>"},{"location":"resources/lists/#albert.resources.lists.ListItemCategory.USER_DEFINED","title":"USER_DEFINED","text":"<pre><code>USER_DEFINED = 'userDefined'\n</code></pre>"},{"location":"resources/lists/#albert.resources.lists.ListItemCategory.PROJECTS","title":"PROJECTS","text":"<pre><code>PROJECTS = 'projects'\n</code></pre>"},{"location":"resources/lists/#albert.resources.lists.ListItemCategory.EXTENSIONS","title":"EXTENSIONS","text":"<pre><code>EXTENSIONS = 'extensions'\n</code></pre>"},{"location":"resources/lists/#albert.resources.lists.ListItemCategory.INVENTORY","title":"INVENTORY","text":"<pre><code>INVENTORY = 'inventory'\n</code></pre>"},{"location":"resources/lists/#albert.resources.lists.ListItem","title":"ListItem","text":"<p>               Bases: <code>BaseResource</code></p> <p>An item in a list.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the list item.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the list item. Set when the list item is retrieved from Albert.</p> <code>category</code> <code>ListItemCategory | None</code> <p>The category of the list item. Allowed values are <code>businessDefined</code>, <code>userDefined</code>, <code>projects</code>, and <code>extensions</code>.</p> <code>list_type</code> <code>str | None</code> <p>The type of the list item. Allowed values are <code>projectState</code> for <code>projects</code> and <code>extensions</code> for <code>extensions</code>.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"ListItemCategory\": {\n      \"enum\": [\n        \"businessDefined\",\n        \"userDefined\",\n        \"projects\",\n        \"extensions\",\n        \"inventory\"\n      ],\n      \"title\": \"ListItemCategory\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"An item in a list.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the list item.\\nid : str | None\\n    The Albert ID of the list item. Set when the list item is retrieved from Albert.\\ncategory : ListItemCategory | None\\n    The category of the list item. Allowed values are `businessDefined`, `userDefined`, `projects`, and `extensions`.\\nlist_type : str | None\\n    The type of the list item. Allowed values are `projectState` for `projects` and `extensions` for `extensions`.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/ListItemCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"listType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Listtype\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"ListItem\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>category</code>                 (<code>ListItemCategory | None</code>)             </li> <li> <code>list_type</code>                 (<code>str | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>validate_list_type</code> </li> </ul>"},{"location":"resources/lists/#albert.resources.lists.ListItem.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/lists/#albert.resources.lists.ListItem.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/lists/#albert.resources.lists.ListItem.category","title":"category","text":"<pre><code>category: ListItemCategory | None = None\n</code></pre>"},{"location":"resources/lists/#albert.resources.lists.ListItem.list_type","title":"list_type","text":"<pre><code>list_type: str | None = None\n</code></pre>"},{"location":"resources/lists/#albert.resources.lists.ListItem.validate_list_type","title":"validate_list_type","text":"<pre><code>validate_list_type() -&gt; ListItem\n</code></pre> Source code in <code>src/albert/resources/lists.py</code> <pre><code>@model_validator(mode=\"after\")\ndef validate_list_type(self) -&gt; \"ListItem\":\n    if (\n        self.category == ListItemCategory.PROJECTS\n        and self.list_type is not None\n        and self.list_type != \"projectState\"\n    ) or (\n        self.category == ListItemCategory.EXTENSIONS\n        and self.list_type is not None\n        and self.list_type != \"extensions\"\n    ):\n        raise ValueError(\n            f\"List type {self.list_type} is not allowed for category {self.category}\"\n        )\n    return self\n</code></pre>"},{"location":"resources/locations/","title":"Locations","text":""},{"location":"resources/locations/#albert.resources.locations","title":"albert.resources.locations","text":""},{"location":"resources/locations/#albert.resources.locations.Location","title":"Location","text":"<p>               Bases: <code>BaseResource</code></p> <p>A location in Albert.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the location.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the location. Set when the location is retrieved from Albert.</p> <code>latitude</code> <code>float</code> <p>The latitude of the location.</p> <code>longitude</code> <code>float</code> <p>The longitude of the location.</p> <code>address</code> <code>str</code> <p>The address of the location.</p> <code>country</code> <code>str | None</code> <p>The country code of the location. Must be two characters long.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"latitude\": {\n      \"title\": \"Latitude\",\n      \"type\": \"number\"\n    },\n    \"longitude\": {\n      \"title\": \"Longitude\",\n      \"type\": \"number\"\n    },\n    \"address\": {\n      \"title\": \"Address\",\n      \"type\": \"string\"\n    },\n    \"country\": {\n      \"anyOf\": [\n        {\n          \"maxLength\": 2,\n          \"minLength\": 2,\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Country\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"latitude\",\n    \"longitude\",\n    \"address\"\n  ],\n  \"title\": \"Location\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>latitude</code>                 (<code>float</code>)             </li> <li> <code>longitude</code>                 (<code>float</code>)             </li> <li> <code>address</code>                 (<code>str</code>)             </li> <li> <code>country</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/locations/#albert.resources.locations.Location.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/locations/#albert.resources.locations.Location.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/locations/#albert.resources.locations.Location.latitude","title":"latitude","text":"<pre><code>latitude: float\n</code></pre>"},{"location":"resources/locations/#albert.resources.locations.Location.longitude","title":"longitude","text":"<pre><code>longitude: float\n</code></pre>"},{"location":"resources/locations/#albert.resources.locations.Location.address","title":"address","text":"<pre><code>address: str\n</code></pre>"},{"location":"resources/locations/#albert.resources.locations.Location.country","title":"country","text":"<pre><code>country: str | None = None\n</code></pre>"},{"location":"resources/lots/","title":"Lots","text":""},{"location":"resources/lots/#albert.resources.lots","title":"albert.resources.lots","text":""},{"location":"resources/lots/#albert.resources.lots.LotStatus","title":"LotStatus","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The status of a lot</p> <p>Attributes:</p> Name Type Description <code>ACTIVE</code> <code>INACTIVE</code> <code>QUARANTINED</code>"},{"location":"resources/lots/#albert.resources.lots.LotStatus.ACTIVE","title":"ACTIVE","text":"<pre><code>ACTIVE = 'active'\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.LotStatus.INACTIVE","title":"INACTIVE","text":"<pre><code>INACTIVE = 'inactive'\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.LotStatus.QUARANTINED","title":"QUARANTINED","text":"<pre><code>QUARANTINED = 'quarantined'\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot","title":"Lot","text":"<p>               Bases: <code>BaseResource</code></p> <p>A lot in Albert.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>LotId | None</code> <p>The Albert ID of the lot. Set when the lot is retrieved from Albert.</p> <code>inventory_id</code> <code>InventoryId</code> <p>The Albert ID of the inventory item associated with the lot.</p> <code>task_id</code> <code>str | None</code> <p>The Albert ID of the task associated with the creation of lot. Optional.</p> <code>notes</code> <code>str | None</code> <p>The notes associated with the lot. Optional.</p> <code>expiration_date</code> <code>str | None</code> <p>The expiration date of the lot. YYYY-MM-DD format. Optional.</p> <code>manufacturer_lot_number</code> <code>str | None</code> <p>The manufacturer lot number of the lot. Optional.</p> <code>storage_location</code> <code>StorageLocation | None</code> <p>The storage location of the lot. Optional.</p> <code>pack_size</code> <code>str | None</code> <p>The pack size of the lot. Optional. Used to calculate the cost per unit.</p> <code>initial_quantity</code> <code>NonNegativeFloat | None</code> <p>The initial quantity of the lot. Optional.</p> <code>cost</code> <code>NonNegativeFloat | None</code> <p>The cost of the lot. Optional.</p> <code>inventory_on_hand</code> <code>NonNegativeFloat</code> <p>The inventory on hand of the lot.</p> <code>owner</code> <code>list[User] | None</code> <p>The owners of the lot. Optional.</p> <code>lot_number</code> <code>str | None</code> <p>The lot number of the lot. Optional.</p> <code>external_barcode_id</code> <code>str | None</code> <p>The external barcode ID of the lot. Optional.</p> <code>metadata</code> <code>dict[str, str | list[EntityLink] | EntityLink] | None</code> <p>The metadata of the lot. Optional. Metadata allowed values can be found using the Custom Fields API.</p> <code>has_notes</code> <code>bool</code> <p>Whether the lot has notes. Read-only.</p> <code>has_attachments</code> <code>bool</code> <p>Whether the lot has attachments. Read-only.</p> <code>barcode_id</code> <code>str</code> <p>The barcode ID of the lot. Read-only.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"LotStatus\": {\n      \"description\": \"The status of a lot\",\n      \"enum\": [\n        \"active\",\n        \"inactive\",\n        \"quarantined\"\n      ],\n      \"title\": \"LotStatus\",\n      \"type\": \"string\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"StorageLocation\": {\n      \"description\": \"A storage location entity. For example, a specific flammables cabinet or a storage room.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the storage location.\\nid : str | None\\n    The Albert ID of the storage location. Set when the storage location is retrieved from Albert.\\nlocation : Location\\n    The location entity link of the storage location.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"maxLength\": 255,\n          \"minLength\": 2,\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            }\n          ],\n          \"title\": \"Location\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"Location\"\n      ],\n      \"title\": \"StorageLocation\",\n      \"type\": \"object\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A lot in Albert.\\n\\nAttributes\\n----------\\nid : LotId | None\\n    The Albert ID of the lot. Set when the lot is retrieved from Albert.\\ninventory_id : InventoryId\\n    The Albert ID of the inventory item associated with the lot.\\ntask_id : str | None\\n    The Albert ID of the task associated with the creation of lot. Optional.\\nnotes : str | None\\n    The notes associated with the lot. Optional.\\nexpiration_date : str | None\\n    The expiration date of the lot. YYYY-MM-DD format. Optional.\\nmanufacturer_lot_number : str | None\\n    The manufacturer lot number of the lot. Optional.\\nstorage_location : StorageLocation | None\\n    The storage location of the lot. Optional.\\npack_size : str | None\\n    The pack size of the lot. Optional. Used to calculate the cost per unit.\\ninitial_quantity : NonNegativeFloat | None\\n    The initial quantity of the lot. Optional.\\ncost : NonNegativeFloat | None\\n    The cost of the lot. Optional.\\ninventory_on_hand : NonNegativeFloat\\n    The inventory on hand of the lot.\\nowner : list[User] | None\\n    The owners of the lot. Optional.\\nlot_number : str | None\\n    The lot number of the lot. Optional.\\nexternal_barcode_id : str | None\\n    The external barcode ID of the lot. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the lot. Optional. Metadata allowed values can be found using the Custom Fields API.\\nhas_notes : bool\\n    Whether the lot has notes. Read-only.\\nhas_attachments : bool\\n    Whether the lot has attachments. Read-only.\\nbarcode_id : str\\n    The barcode ID of the lot. Read-only.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/LotStatus\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"taskId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Taskid\"\n    },\n    \"expirationDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Expirationdate\"\n    },\n    \"manufacturerLotNumber\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Manufacturerlotnumber\"\n    },\n    \"StorageLocation\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/StorageLocation\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Storagelocation\"\n    },\n    \"packSize\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Packsize\"\n    },\n    \"initialQuantity\": {\n      \"anyOf\": [\n        {\n          \"minimum\": 0,\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Initialquantity\"\n    },\n    \"cost\": {\n      \"anyOf\": [\n        {\n          \"minimum\": 0,\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cost\"\n    },\n    \"inventoryOnHand\": {\n      \"title\": \"Inventoryonhand\",\n      \"type\": \"number\"\n    },\n    \"Owner\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/User\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Owner\"\n    },\n    \"lotNumber\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lotnumber\"\n    },\n    \"externalBarcodeId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Externalbarcodeid\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"notes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Notes\"\n    },\n    \"hasNotes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Hasnotes\"\n    },\n    \"hasAttachments\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Hasattachments\"\n    },\n    \"parentName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentname\"\n    },\n    \"parentUnit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentunit\"\n    },\n    \"parentCategory\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"barcodeId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Barcodeid\"\n    }\n  },\n  \"required\": [\n    \"parentId\",\n    \"inventoryOnHand\"\n  ],\n  \"title\": \"Lot\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>id</code>                 (<code>LotId | None</code>)             </li> <li> <code>inventory_id</code>                 (<code>InventoryId</code>)             </li> <li> <code>task_id</code>                 (<code>str | None</code>)             </li> <li> <code>expiration_date</code>                 (<code>str | None</code>)             </li> <li> <code>manufacturer_lot_number</code>                 (<code>str | None</code>)             </li> <li> <code>storage_location</code>                 (<code>SerializeAsEntityLink[StorageLocation] | None</code>)             </li> <li> <code>pack_size</code>                 (<code>str | None</code>)             </li> <li> <code>initial_quantity</code>                 (<code>NonNegativeFloat | None</code>)             </li> <li> <code>cost</code>                 (<code>NonNegativeFloat | None</code>)             </li> <li> <code>inventory_on_hand</code>                 (<code>float</code>)             </li> <li> <code>owner</code>                 (<code>list[SerializeAsEntityLink[User]] | None</code>)             </li> <li> <code>lot_number</code>                 (<code>str | None</code>)             </li> <li> <code>external_barcode_id</code>                 (<code>str | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem] | None</code>)             </li> <li> <code>status</code>                 (<code>LotStatus | None</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>notes</code>                 (<code>str | None</code>)             </li> <li> <code>has_notes</code>                 (<code>bool | None</code>)             </li> <li> <code>has_attachments</code>                 (<code>bool | None</code>)             </li> <li> <code>parent_name</code>                 (<code>str | None</code>)             </li> <li> <code>parent_unit</code>                 (<code>str | None</code>)             </li> <li> <code>parent_category</code>                 (<code>InventoryCategory | None</code>)             </li> <li> <code>barcode_id</code>                 (<code>str | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>validate_has_notes</code>                 \u2192                   <code>has_notes</code> </li> <li> <code>validate_has_attachments</code>                 \u2192                   <code>has_attachments</code> </li> </ul>"},{"location":"resources/lots/#albert.resources.lots.Lot.id","title":"id","text":"<pre><code>id: LotId | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: InventoryId\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.task_id","title":"task_id","text":"<pre><code>task_id: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.expiration_date","title":"expiration_date","text":"<pre><code>expiration_date: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.manufacturer_lot_number","title":"manufacturer_lot_number","text":"<pre><code>manufacturer_lot_number: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.storage_location","title":"storage_location","text":"<pre><code>storage_location: (\n    SerializeAsEntityLink[StorageLocation] | None\n) = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.pack_size","title":"pack_size","text":"<pre><code>pack_size: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.initial_quantity","title":"initial_quantity","text":"<pre><code>initial_quantity: NonNegativeFloat | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.cost","title":"cost","text":"<pre><code>cost: NonNegativeFloat | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.inventory_on_hand","title":"inventory_on_hand","text":"<pre><code>inventory_on_hand: float\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.owner","title":"owner","text":"<pre><code>owner: list[SerializeAsEntityLink[User]] | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.lot_number","title":"lot_number","text":"<pre><code>lot_number: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.external_barcode_id","title":"external_barcode_id","text":"<pre><code>external_barcode_id: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem] | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.status","title":"status","text":"<pre><code>status: LotStatus | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.location","title":"location","text":"<pre><code>location: SerializeAsEntityLink[Location] | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.notes","title":"notes","text":"<pre><code>notes: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.has_notes","title":"has_notes","text":"<pre><code>has_notes: bool | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.has_attachments","title":"has_attachments","text":"<pre><code>has_attachments: bool | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.parent_name","title":"parent_name","text":"<pre><code>parent_name: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.parent_unit","title":"parent_unit","text":"<pre><code>parent_unit: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.parent_category","title":"parent_category","text":"<pre><code>parent_category: InventoryCategory | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.barcode_id","title":"barcode_id","text":"<pre><code>barcode_id: str | None = None\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.validate_has_notes","title":"validate_has_notes","text":"<pre><code>validate_has_notes(value: Any) -&gt; Any\n</code></pre> Source code in <code>src/albert/resources/lots.py</code> <pre><code>@field_validator(\"has_notes\", mode=\"before\")\ndef validate_has_notes(cls, value: Any) -&gt; Any:\n    if value == \"1\":\n        return True\n    elif value == \"0\":\n        return False\n    return value\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.validate_has_attachments","title":"validate_has_attachments","text":"<pre><code>validate_has_attachments(value: Any) -&gt; Any\n</code></pre> Source code in <code>src/albert/resources/lots.py</code> <pre><code>@field_validator(\"has_attachments\", mode=\"before\")\ndef validate_has_attachments(cls, value: Any) -&gt; Any:\n    if value == \"1\":\n        return True\n    elif value == \"0\":\n        return False\n    return value\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.serialize_initial_quantity","title":"serialize_initial_quantity","text":"<pre><code>serialize_initial_quantity(\n    initial_quantity: NonNegativeFloat,\n)\n</code></pre> Source code in <code>src/albert/resources/lots.py</code> <pre><code>@field_serializer(\"initial_quantity\", return_type=str)\ndef serialize_initial_quantity(self, initial_quantity: NonNegativeFloat):\n    return str(initial_quantity)\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.serialize_cost","title":"serialize_cost","text":"<pre><code>serialize_cost(cost: NonNegativeFloat)\n</code></pre> Source code in <code>src/albert/resources/lots.py</code> <pre><code>@field_serializer(\"cost\", return_type=str)\ndef serialize_cost(self, cost: NonNegativeFloat):\n    return str(cost)\n</code></pre>"},{"location":"resources/lots/#albert.resources.lots.Lot.serialize_inventory_on_hand","title":"serialize_inventory_on_hand","text":"<pre><code>serialize_inventory_on_hand(\n    inventory_on_hand: NonNegativeFloat,\n)\n</code></pre> Source code in <code>src/albert/resources/lots.py</code> <pre><code>@field_serializer(\"inventory_on_hand\", return_type=str)\ndef serialize_inventory_on_hand(self, inventory_on_hand: NonNegativeFloat):\n    return str(inventory_on_hand)\n</code></pre>"},{"location":"resources/notebooks/","title":"Notebooks","text":""},{"location":"resources/notebooks/#albert.resources.notebooks","title":"albert.resources.notebooks","text":"<p>Attributes:</p> Name Type Description <code>ListContent</code> <code>NotebookBlock</code> <code>NotebookContent</code> <code>allowed_notebook_contents</code>"},{"location":"resources/notebooks/#albert.resources.notebooks.ListContent","title":"ListContent","text":"<pre><code>ListContent = Annotated[\n    NumberedListContent | BulletedListContent,\n    Field(discriminator=\"style\"),\n]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookBlock","title":"NotebookBlock","text":"<pre><code>NotebookBlock = Annotated[\n    _NotebookBlockUnion, Field(discriminator=\"type\")\n]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookContent","title":"NotebookContent","text":"<pre><code>NotebookContent = (\n    HeaderContent\n    | ParagraphContent\n    | ChecklistContent\n    | AttachesContent\n    | ImageContent\n    | KetcherContent\n    | TableContent\n    | BulletedListContent\n    | NumberedListContent\n)\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.allowed_notebook_contents","title":"allowed_notebook_contents","text":"<pre><code>allowed_notebook_contents = {\n    HEADER: HeaderContent,\n    PARAGRAPH: ParagraphContent,\n    CHECKLIST: ChecklistContent,\n    ATTACHES: AttachesContent,\n    IMAGE: ImageContent,\n    KETCHER: KetcherContent,\n    TABLE: TableContent,\n    LIST: (BulletedListContent, NumberedListContent),\n}\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ListBlockStyle","title":"ListBlockStyle","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>ORDERED</code> <code>UNORDERED</code>"},{"location":"resources/notebooks/#albert.resources.notebooks.ListBlockStyle.ORDERED","title":"ORDERED","text":"<pre><code>ORDERED = 'ordered'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ListBlockStyle.UNORDERED","title":"UNORDERED","text":"<pre><code>UNORDERED = 'unordered'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BlockType","title":"BlockType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>PARAGRAPH</code> <code>LIST</code> <code>HEADER</code> <code>CHECKLIST</code> <code>IMAGE</code> <code>ATTACHES</code> <code>KETCHER</code> <code>TABLE</code>"},{"location":"resources/notebooks/#albert.resources.notebooks.BlockType.PARAGRAPH","title":"PARAGRAPH","text":"<pre><code>PARAGRAPH = 'paragraph'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BlockType.LIST","title":"LIST","text":"<pre><code>LIST = 'list'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BlockType.HEADER","title":"HEADER","text":"<pre><code>HEADER = 'header'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BlockType.CHECKLIST","title":"CHECKLIST","text":"<pre><code>CHECKLIST = 'checklist'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BlockType.IMAGE","title":"IMAGE","text":"<pre><code>IMAGE = 'image'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BlockType.ATTACHES","title":"ATTACHES","text":"<pre><code>ATTACHES = 'attaches'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BlockType.KETCHER","title":"KETCHER","text":"<pre><code>KETCHER = 'ketcher'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BlockType.TABLE","title":"TABLE","text":"<pre><code>TABLE = 'table'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyType","title":"NotebookCopyType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>TEMPLATE</code> <code>TASK</code> <code>PROJECT</code> <code>RESTORE_TEMPLATE</code> <code>GEN_TASK_TEMPLATE</code>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyType.TEMPLATE","title":"TEMPLATE","text":"<pre><code>TEMPLATE = 'template'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyType.TASK","title":"TASK","text":"<pre><code>TASK = 'Task'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyType.PROJECT","title":"PROJECT","text":"<pre><code>PROJECT = 'Project'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyType.RESTORE_TEMPLATE","title":"RESTORE_TEMPLATE","text":"<pre><code>RESTORE_TEMPLATE = 'restoreTemplate'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyType.GEN_TASK_TEMPLATE","title":"GEN_TASK_TEMPLATE","text":"<pre><code>GEN_TASK_TEMPLATE = 'genTaskTemplate'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BaseBlock","title":"BaseBlock","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    }\n  },\n  \"title\": \"BaseBlock\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.BaseBlock.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BaseBlock.version","title":"version","text":"<pre><code>version: datetime | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.HeaderContent","title":"HeaderContent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"level\": {\n      \"enum\": [\n        1,\n        2,\n        3\n      ],\n      \"title\": \"Level\",\n      \"type\": \"integer\"\n    },\n    \"text\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Text\"\n    }\n  },\n  \"required\": [\n    \"level\",\n    \"text\"\n  ],\n  \"title\": \"HeaderContent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>level</code>                 (<code>Literal[1, 2, 3]</code>)             </li> <li> <code>text</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.HeaderContent.level","title":"level","text":"<pre><code>level: Literal[1, 2, 3]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.HeaderContent.text","title":"text","text":"<pre><code>text: str | None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.HeaderBlock","title":"HeaderBlock","text":"<p>               Bases: <code>BaseBlock</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"HeaderContent\": {\n      \"properties\": {\n        \"level\": {\n          \"enum\": [\n            1,\n            2,\n            3\n          ],\n          \"title\": \"Level\",\n          \"type\": \"integer\"\n        },\n        \"text\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Text\"\n        }\n      },\n      \"required\": [\n        \"level\",\n        \"text\"\n      ],\n      \"title\": \"HeaderContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    },\n    \"blockType\": {\n      \"const\": \"header\",\n      \"default\": \"header\",\n      \"title\": \"Blocktype\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"$ref\": \"#/$defs/HeaderContent\"\n    }\n  },\n  \"required\": [\n    \"content\"\n  ],\n  \"title\": \"HeaderBlock\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[HEADER]</code>)             </li> <li> <code>content</code>                 (<code>HeaderContent</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.HeaderBlock.type","title":"type","text":"<pre><code>type: Literal[HEADER] = HEADER\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.HeaderBlock.content","title":"content","text":"<pre><code>content: HeaderContent\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ParagraphContent","title":"ParagraphContent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"text\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Text\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ],\n  \"title\": \"ParagraphContent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>text</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.ParagraphContent.text","title":"text","text":"<pre><code>text: str | None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ParagraphBlock","title":"ParagraphBlock","text":"<p>               Bases: <code>BaseBlock</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ParagraphContent\": {\n      \"properties\": {\n        \"text\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Text\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"ParagraphContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    },\n    \"blockType\": {\n      \"const\": \"paragraph\",\n      \"default\": \"paragraph\",\n      \"title\": \"Blocktype\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"$ref\": \"#/$defs/ParagraphContent\"\n    }\n  },\n  \"required\": [\n    \"content\"\n  ],\n  \"title\": \"ParagraphBlock\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[PARAGRAPH]</code>)             </li> <li> <code>content</code>                 (<code>ParagraphContent</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.ParagraphBlock.type","title":"type","text":"<pre><code>type: Literal[PARAGRAPH] = PARAGRAPH\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ParagraphBlock.content","title":"content","text":"<pre><code>content: ParagraphContent\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ChecklistItem","title":"ChecklistItem","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"checked\": {\n      \"title\": \"Checked\",\n      \"type\": \"boolean\"\n    },\n    \"text\": {\n      \"title\": \"Text\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"checked\",\n    \"text\"\n  ],\n  \"title\": \"ChecklistItem\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>checked</code>                 (<code>bool</code>)             </li> <li> <code>text</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.ChecklistItem.checked","title":"checked","text":"<pre><code>checked: bool\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ChecklistItem.text","title":"text","text":"<pre><code>text: str\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ChecklistContent","title":"ChecklistContent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ChecklistItem\": {\n      \"properties\": {\n        \"checked\": {\n          \"title\": \"Checked\",\n          \"type\": \"boolean\"\n        },\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"checked\",\n        \"text\"\n      ],\n      \"title\": \"ChecklistItem\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"items\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ChecklistItem\"\n      },\n      \"title\": \"Items\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"items\"\n  ],\n  \"title\": \"ChecklistContent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>items</code>                 (<code>list[ChecklistItem]</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.ChecklistContent.items","title":"items","text":"<pre><code>items: list[ChecklistItem]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ChecklistBlock","title":"ChecklistBlock","text":"<p>               Bases: <code>BaseBlock</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ChecklistContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ChecklistItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"ChecklistContent\",\n      \"type\": \"object\"\n    },\n    \"ChecklistItem\": {\n      \"properties\": {\n        \"checked\": {\n          \"title\": \"Checked\",\n          \"type\": \"boolean\"\n        },\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"checked\",\n        \"text\"\n      ],\n      \"title\": \"ChecklistItem\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    },\n    \"blockType\": {\n      \"const\": \"checklist\",\n      \"default\": \"checklist\",\n      \"title\": \"Blocktype\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"$ref\": \"#/$defs/ChecklistContent\"\n    }\n  },\n  \"required\": [\n    \"content\"\n  ],\n  \"title\": \"ChecklistBlock\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[CHECKLIST]</code>)             </li> <li> <code>content</code>                 (<code>ChecklistContent</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.ChecklistBlock.type","title":"type","text":"<pre><code>type: Literal[CHECKLIST] = CHECKLIST\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ChecklistBlock.content","title":"content","text":"<pre><code>content: ChecklistContent\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ChecklistBlock.is_checked","title":"is_checked","text":"<pre><code>is_checked(*, target_text: str) -&gt; bool | None\n</code></pre> <p>Get checked state of a checklist item</p> Parameters <p>target_text : str     The value/text of a checklist entry.</p> <p>Returns:</p> Type Description <code>bool | None</code> <p>The checked state of the target entry identified by name.</p> Source code in <code>src/albert/resources/notebooks.py</code> <pre><code>def is_checked(self, *, target_text: str) -&gt; bool | None:\n    \"\"\"Get checked state of a checklist item\n\n     Parameters\n    ----------\n    target_text : str\n        The value/text of a checklist entry.\n\n    Returns\n    -------\n    bool | None\n        The checked state of the target entry identified by name.\n    \"\"\"\n    # loop items\n    for i in self.content.items:\n        if i.text == target_text:\n            # return check state\n            return i.checked\n\n    # return None if no match\n    return\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.AttachesContent","title":"AttachesContent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Title\"\n    },\n    \"namespace\": {\n      \"default\": \"result\",\n      \"title\": \"Namespace\",\n      \"type\": \"string\"\n    },\n    \"fileKey\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Filekey\"\n    },\n    \"mimeType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Mimetype\"\n    },\n    \"signedURL\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Signedurl\"\n    }\n  },\n  \"title\": \"AttachesContent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>namespace</code>                 (<code>str</code>)             </li> <li> <code>file_key</code>                 (<code>str | None</code>)             </li> <li> <code>format</code>                 (<code>str | None</code>)             </li> <li> <code>signed_url</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.AttachesContent.title","title":"title","text":"<pre><code>title: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.AttachesContent.namespace","title":"namespace","text":"<pre><code>namespace: str = 'result'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.AttachesContent.file_key","title":"file_key","text":"<pre><code>file_key: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.AttachesContent.format","title":"format","text":"<pre><code>format: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.AttachesContent.signed_url","title":"signed_url","text":"<pre><code>signed_url: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.AttachesBlock","title":"AttachesBlock","text":"<p>               Bases: <code>BaseBlock</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AttachesContent\": {\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Title\"\n        },\n        \"namespace\": {\n          \"default\": \"result\",\n          \"title\": \"Namespace\",\n          \"type\": \"string\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"mimeType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Mimetype\"\n        },\n        \"signedURL\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Signedurl\"\n        }\n      },\n      \"title\": \"AttachesContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    },\n    \"blockType\": {\n      \"const\": \"attaches\",\n      \"default\": \"attaches\",\n      \"title\": \"Blocktype\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"$ref\": \"#/$defs/AttachesContent\"\n    }\n  },\n  \"required\": [\n    \"content\"\n  ],\n  \"title\": \"AttachesBlock\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[ATTACHES]</code>)             </li> <li> <code>content</code>                 (<code>AttachesContent</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.AttachesBlock.type","title":"type","text":"<pre><code>type: Literal[ATTACHES] = ATTACHES\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.AttachesBlock.content","title":"content","text":"<pre><code>content: AttachesContent\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageContent","title":"ImageContent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Title\"\n    },\n    \"namespace\": {\n      \"default\": \"result\",\n      \"title\": \"Namespace\",\n      \"type\": \"string\"\n    },\n    \"stretched\": {\n      \"default\": false,\n      \"title\": \"Stretched\",\n      \"type\": \"boolean\"\n    },\n    \"withBackground\": {\n      \"default\": false,\n      \"title\": \"Withbackground\",\n      \"type\": \"boolean\"\n    },\n    \"withBorder\": {\n      \"default\": false,\n      \"title\": \"Withborder\",\n      \"type\": \"boolean\"\n    },\n    \"fileKey\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Filekey\"\n    },\n    \"signedURL\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Signedurl\"\n    }\n  },\n  \"title\": \"ImageContent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>namespace</code>                 (<code>str</code>)             </li> <li> <code>stretched</code>                 (<code>bool</code>)             </li> <li> <code>with_background</code>                 (<code>bool</code>)             </li> <li> <code>with_border</code>                 (<code>bool</code>)             </li> <li> <code>file_key</code>                 (<code>str | None</code>)             </li> <li> <code>signed_url</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageContent.title","title":"title","text":"<pre><code>title: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageContent.namespace","title":"namespace","text":"<pre><code>namespace: str = 'result'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageContent.stretched","title":"stretched","text":"<pre><code>stretched: bool = False\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageContent.with_background","title":"with_background","text":"<pre><code>with_background: bool = False\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageContent.with_border","title":"with_border","text":"<pre><code>with_border: bool = False\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageContent.file_key","title":"file_key","text":"<pre><code>file_key: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageContent.signed_url","title":"signed_url","text":"<pre><code>signed_url: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageBlock","title":"ImageBlock","text":"<p>               Bases: <code>BaseBlock</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ImageContent\": {\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Title\"\n        },\n        \"namespace\": {\n          \"default\": \"result\",\n          \"title\": \"Namespace\",\n          \"type\": \"string\"\n        },\n        \"stretched\": {\n          \"default\": false,\n          \"title\": \"Stretched\",\n          \"type\": \"boolean\"\n        },\n        \"withBackground\": {\n          \"default\": false,\n          \"title\": \"Withbackground\",\n          \"type\": \"boolean\"\n        },\n        \"withBorder\": {\n          \"default\": false,\n          \"title\": \"Withborder\",\n          \"type\": \"boolean\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"signedURL\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Signedurl\"\n        }\n      },\n      \"title\": \"ImageContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    },\n    \"blockType\": {\n      \"const\": \"image\",\n      \"default\": \"image\",\n      \"title\": \"Blocktype\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"$ref\": \"#/$defs/ImageContent\"\n    }\n  },\n  \"required\": [\n    \"content\"\n  ],\n  \"title\": \"ImageBlock\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[IMAGE]</code>)             </li> <li> <code>content</code>                 (<code>ImageContent</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageBlock.type","title":"type","text":"<pre><code>type: Literal[IMAGE] = IMAGE\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ImageBlock.content","title":"content","text":"<pre><code>content: ImageContent\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent","title":"KetcherContent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"synthesisId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Synthesisid\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"blockId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Blockid\"\n    },\n    \"data\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Data\"\n    },\n    \"fileKey\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Filekey\"\n    },\n    \"s3Key\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"S3Key\"\n    },\n    \"png\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Png\"\n    },\n    \"ketcherUrl\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Ketcherurl\"\n    }\n  },\n  \"title\": \"KetcherContent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>synthesis_id</code>                 (<code>SynthesisId | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>block_id</code>                 (<code>str | None</code>)             </li> <li> <code>data</code>                 (<code>str | None</code>)             </li> <li> <code>file_key</code>                 (<code>str | None</code>)             </li> <li> <code>s3_key</code>                 (<code>str | None</code>)             </li> <li> <code>png</code>                 (<code>str | None</code>)             </li> <li> <code>ketcher_url</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent.synthesis_id","title":"synthesis_id","text":"<pre><code>synthesis_id: SynthesisId | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent.block_id","title":"block_id","text":"<pre><code>block_id: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent.data","title":"data","text":"<pre><code>data: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent.file_key","title":"file_key","text":"<pre><code>file_key: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent.s3_key","title":"s3_key","text":"<pre><code>s3_key: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent.png","title":"png","text":"<pre><code>png: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherContent.ketcher_url","title":"ketcher_url","text":"<pre><code>ketcher_url: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherBlock","title":"KetcherBlock","text":"<p>               Bases: <code>BaseBlock</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"KetcherContent\": {\n      \"properties\": {\n        \"synthesisId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Synthesisid\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"blockId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Blockid\"\n        },\n        \"data\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Data\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"s3Key\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"S3Key\"\n        },\n        \"png\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Png\"\n        },\n        \"ketcherUrl\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Ketcherurl\"\n        }\n      },\n      \"title\": \"KetcherContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    },\n    \"blockType\": {\n      \"const\": \"ketcher\",\n      \"default\": \"ketcher\",\n      \"title\": \"Blocktype\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"$ref\": \"#/$defs/KetcherContent\"\n    }\n  },\n  \"required\": [\n    \"content\"\n  ],\n  \"title\": \"KetcherBlock\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[KETCHER]</code>)             </li> <li> <code>content</code>                 (<code>KetcherContent</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherBlock.type","title":"type","text":"<pre><code>type: Literal[KETCHER] = KETCHER\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.KetcherBlock.content","title":"content","text":"<pre><code>content: KetcherContent\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.TableContent","title":"TableContent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"content\": {\n      \"items\": {\n        \"items\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"type\": \"array\"\n      },\n      \"title\": \"Content\",\n      \"type\": \"array\"\n    },\n    \"withHeadings\": {\n      \"default\": false,\n      \"title\": \"Withheadings\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"content\"\n  ],\n  \"title\": \"TableContent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>content</code>                 (<code>list[list[str | None]]</code>)             </li> <li> <code>with_headings</code>                 (<code>bool</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.TableContent.content","title":"content","text":"<pre><code>content: list[list[str | None]]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.TableContent.with_headings","title":"with_headings","text":"<pre><code>with_headings: bool = False\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.TableBlock","title":"TableBlock","text":"<p>               Bases: <code>BaseBlock</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"TableContent\": {\n      \"properties\": {\n        \"content\": {\n          \"items\": {\n            \"items\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"null\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"title\": \"Content\",\n          \"type\": \"array\"\n        },\n        \"withHeadings\": {\n          \"default\": false,\n          \"title\": \"Withheadings\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"TableContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    },\n    \"blockType\": {\n      \"const\": \"table\",\n      \"default\": \"table\",\n      \"title\": \"Blocktype\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"$ref\": \"#/$defs/TableContent\"\n    }\n  },\n  \"required\": [\n    \"content\"\n  ],\n  \"title\": \"TableBlock\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[TABLE]</code>)             </li> <li> <code>content</code>                 (<code>TableContent</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.TableBlock.type","title":"type","text":"<pre><code>type: Literal[TABLE] = TABLE\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.TableBlock.content","title":"content","text":"<pre><code>content: TableContent\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.TableBlock.to_df","title":"to_df","text":"<pre><code>to_df(*, infer_header: bool = True) -&gt; DataFrame\n</code></pre> <p>Convert the TableBlock's content to a pd.DataFrame.</p> <p>Returns:</p> Type Description <code>DataFrame</code> <p>The block's content as a pd.DataFrame.</p> Source code in <code>src/albert/resources/notebooks.py</code> <pre><code>def to_df(self, *, infer_header: bool = True) -&gt; DataFrame:\n    \"\"\"Convert the TableBlock's content to a pd.DataFrame.\n\n    Returns\n    -------\n    DataFrame\n        The block's content as a pd.DataFrame.\n    \"\"\"\n\n    # convert to df\n    df = DataFrame(self.content.content)\n\n    if infer_header:\n        # clean df -&gt; column name w/o formatting\n        df.columns = df.iloc[0, :]\n        df.columns = [re.sub(r\"&lt;.*?&gt;\", \"\", x) for x in df.columns]\n        # discard first\n        df = df.iloc[1:, :].reset_index(drop=True)\n\n    # return df\n    return df\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookListItem","title":"NotebookListItem","text":"<p>               Bases: <code>BaseModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"NotebookListItem\": {\n      \"properties\": {\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Content\"\n        },\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"NotebookListItem\",\n      \"type\": \"object\"\n    }\n  },\n  \"$ref\": \"#/$defs/NotebookListItem\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>content</code>                 (<code>str | None</code>)             </li> <li> <code>items</code>                 (<code>list[NotebookListItem]</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookListItem.content","title":"content","text":"<pre><code>content: str | None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookListItem.items","title":"items","text":"<pre><code>items: list[NotebookListItem]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BulletedListContent","title":"BulletedListContent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"NotebookListItem\": {\n      \"properties\": {\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Content\"\n        },\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"NotebookListItem\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"items\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/NotebookListItem\"\n      },\n      \"title\": \"Items\",\n      \"type\": \"array\"\n    },\n    \"style\": {\n      \"const\": \"unordered\",\n      \"default\": \"unordered\",\n      \"title\": \"Style\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"items\"\n  ],\n  \"title\": \"BulletedListContent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>items</code>                 (<code>list[NotebookListItem]</code>)             </li> <li> <code>style</code>                 (<code>Literal[UNORDERED]</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.BulletedListContent.items","title":"items","text":"<pre><code>items: list[NotebookListItem]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.BulletedListContent.style","title":"style","text":"<pre><code>style: Literal[UNORDERED] = UNORDERED\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NumberedListContent","title":"NumberedListContent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"NotebookListItem\": {\n      \"properties\": {\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Content\"\n        },\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"NotebookListItem\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"items\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/NotebookListItem\"\n      },\n      \"title\": \"Items\",\n      \"type\": \"array\"\n    },\n    \"style\": {\n      \"const\": \"ordered\",\n      \"default\": \"ordered\",\n      \"title\": \"Style\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"items\"\n  ],\n  \"title\": \"NumberedListContent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>items</code>                 (<code>list[NotebookListItem]</code>)             </li> <li> <code>style</code>                 (<code>Literal[ORDERED]</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.NumberedListContent.items","title":"items","text":"<pre><code>items: list[NotebookListItem]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NumberedListContent.style","title":"style","text":"<pre><code>style: Literal[ORDERED] = ORDERED\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ListBlock","title":"ListBlock","text":"<p>               Bases: <code>BaseBlock</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BulletedListContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"style\": {\n          \"const\": \"unordered\",\n          \"default\": \"unordered\",\n          \"title\": \"Style\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"BulletedListContent\",\n      \"type\": \"object\"\n    },\n    \"NotebookListItem\": {\n      \"properties\": {\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Content\"\n        },\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"NotebookListItem\",\n      \"type\": \"object\"\n    },\n    \"NumberedListContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"style\": {\n          \"const\": \"ordered\",\n          \"default\": \"ordered\",\n          \"title\": \"Style\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"NumberedListContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    },\n    \"blockType\": {\n      \"const\": \"list\",\n      \"default\": \"list\",\n      \"title\": \"Blocktype\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"discriminator\": {\n        \"mapping\": {\n          \"ordered\": \"#/$defs/NumberedListContent\",\n          \"unordered\": \"#/$defs/BulletedListContent\"\n        },\n        \"propertyName\": \"style\"\n      },\n      \"oneOf\": [\n        {\n          \"$ref\": \"#/$defs/NumberedListContent\"\n        },\n        {\n          \"$ref\": \"#/$defs/BulletedListContent\"\n        }\n      ],\n      \"title\": \"Content\"\n    }\n  },\n  \"required\": [\n    \"content\"\n  ],\n  \"title\": \"ListBlock\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> <li> <code>type</code>                 (<code>Literal[LIST]</code>)             </li> <li> <code>content</code>                 (<code>ListContent</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.ListBlock.type","title":"type","text":"<pre><code>type: Literal[LIST] = LIST\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.ListBlock.content","title":"content","text":"<pre><code>content: ListContent\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookLink","title":"NotebookLink","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"Child\": {\n      \"$ref\": \"#/$defs/EntityLink\"\n    }\n  },\n  \"required\": [\n    \"Child\"\n  ],\n  \"title\": \"NotebookLink\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>LinkId | None</code>)             </li> <li> <code>child</code>                 (<code>EntityLink</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookLink.id","title":"id","text":"<pre><code>id: LinkId | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookLink.child","title":"child","text":"<pre><code>child: EntityLink\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.Notebook","title":"Notebook","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AttachesBlock\": {\n      \"properties\": {\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Version\"\n        },\n        \"blockType\": {\n          \"const\": \"attaches\",\n          \"default\": \"attaches\",\n          \"title\": \"Blocktype\",\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/AttachesContent\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"AttachesBlock\",\n      \"type\": \"object\"\n    },\n    \"AttachesContent\": {\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Title\"\n        },\n        \"namespace\": {\n          \"default\": \"result\",\n          \"title\": \"Namespace\",\n          \"type\": \"string\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"mimeType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Mimetype\"\n        },\n        \"signedURL\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Signedurl\"\n        }\n      },\n      \"title\": \"AttachesContent\",\n      \"type\": \"object\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BulletedListContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"style\": {\n          \"const\": \"unordered\",\n          \"default\": \"unordered\",\n          \"title\": \"Style\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"BulletedListContent\",\n      \"type\": \"object\"\n    },\n    \"ChecklistBlock\": {\n      \"properties\": {\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Version\"\n        },\n        \"blockType\": {\n          \"const\": \"checklist\",\n          \"default\": \"checklist\",\n          \"title\": \"Blocktype\",\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/ChecklistContent\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"ChecklistBlock\",\n      \"type\": \"object\"\n    },\n    \"ChecklistContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ChecklistItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"ChecklistContent\",\n      \"type\": \"object\"\n    },\n    \"ChecklistItem\": {\n      \"properties\": {\n        \"checked\": {\n          \"title\": \"Checked\",\n          \"type\": \"boolean\"\n        },\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"checked\",\n        \"text\"\n      ],\n      \"title\": \"ChecklistItem\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"HeaderBlock\": {\n      \"properties\": {\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Version\"\n        },\n        \"blockType\": {\n          \"const\": \"header\",\n          \"default\": \"header\",\n          \"title\": \"Blocktype\",\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/HeaderContent\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"HeaderBlock\",\n      \"type\": \"object\"\n    },\n    \"HeaderContent\": {\n      \"properties\": {\n        \"level\": {\n          \"enum\": [\n            1,\n            2,\n            3\n          ],\n          \"title\": \"Level\",\n          \"type\": \"integer\"\n        },\n        \"text\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Text\"\n        }\n      },\n      \"required\": [\n        \"level\",\n        \"text\"\n      ],\n      \"title\": \"HeaderContent\",\n      \"type\": \"object\"\n    },\n    \"ImageBlock\": {\n      \"properties\": {\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Version\"\n        },\n        \"blockType\": {\n          \"const\": \"image\",\n          \"default\": \"image\",\n          \"title\": \"Blocktype\",\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/ImageContent\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"ImageBlock\",\n      \"type\": \"object\"\n    },\n    \"ImageContent\": {\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Title\"\n        },\n        \"namespace\": {\n          \"default\": \"result\",\n          \"title\": \"Namespace\",\n          \"type\": \"string\"\n        },\n        \"stretched\": {\n          \"default\": false,\n          \"title\": \"Stretched\",\n          \"type\": \"boolean\"\n        },\n        \"withBackground\": {\n          \"default\": false,\n          \"title\": \"Withbackground\",\n          \"type\": \"boolean\"\n        },\n        \"withBorder\": {\n          \"default\": false,\n          \"title\": \"Withborder\",\n          \"type\": \"boolean\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"signedURL\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Signedurl\"\n        }\n      },\n      \"title\": \"ImageContent\",\n      \"type\": \"object\"\n    },\n    \"KetcherBlock\": {\n      \"properties\": {\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Version\"\n        },\n        \"blockType\": {\n          \"const\": \"ketcher\",\n          \"default\": \"ketcher\",\n          \"title\": \"Blocktype\",\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/KetcherContent\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"KetcherBlock\",\n      \"type\": \"object\"\n    },\n    \"KetcherContent\": {\n      \"properties\": {\n        \"synthesisId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Synthesisid\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"blockId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Blockid\"\n        },\n        \"data\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Data\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"s3Key\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"S3Key\"\n        },\n        \"png\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Png\"\n        },\n        \"ketcherUrl\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Ketcherurl\"\n        }\n      },\n      \"title\": \"KetcherContent\",\n      \"type\": \"object\"\n    },\n    \"ListBlock\": {\n      \"properties\": {\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Version\"\n        },\n        \"blockType\": {\n          \"const\": \"list\",\n          \"default\": \"list\",\n          \"title\": \"Blocktype\",\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"discriminator\": {\n            \"mapping\": {\n              \"ordered\": \"#/$defs/NumberedListContent\",\n              \"unordered\": \"#/$defs/BulletedListContent\"\n            },\n            \"propertyName\": \"style\"\n          },\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/$defs/NumberedListContent\"\n            },\n            {\n              \"$ref\": \"#/$defs/BulletedListContent\"\n            }\n          ],\n          \"title\": \"Content\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"ListBlock\",\n      \"type\": \"object\"\n    },\n    \"NotebookLink\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Child\": {\n          \"$ref\": \"#/$defs/EntityLink\"\n        }\n      },\n      \"required\": [\n        \"Child\"\n      ],\n      \"title\": \"NotebookLink\",\n      \"type\": \"object\"\n    },\n    \"NotebookListItem\": {\n      \"properties\": {\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Content\"\n        },\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"NotebookListItem\",\n      \"type\": \"object\"\n    },\n    \"NumberedListContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"style\": {\n          \"const\": \"ordered\",\n          \"default\": \"ordered\",\n          \"title\": \"Style\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"NumberedListContent\",\n      \"type\": \"object\"\n    },\n    \"ParagraphBlock\": {\n      \"properties\": {\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Version\"\n        },\n        \"blockType\": {\n          \"const\": \"paragraph\",\n          \"default\": \"paragraph\",\n          \"title\": \"Blocktype\",\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/ParagraphContent\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"ParagraphBlock\",\n      \"type\": \"object\"\n    },\n    \"ParagraphContent\": {\n      \"properties\": {\n        \"text\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Text\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"ParagraphContent\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"TableBlock\": {\n      \"properties\": {\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Version\"\n        },\n        \"blockType\": {\n          \"const\": \"table\",\n          \"default\": \"table\",\n          \"title\": \"Blocktype\",\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/TableContent\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"TableBlock\",\n      \"type\": \"object\"\n    },\n    \"TableContent\": {\n      \"properties\": {\n        \"content\": {\n          \"items\": {\n            \"items\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"null\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"title\": \"Content\",\n          \"type\": \"array\"\n        },\n        \"withHeadings\": {\n          \"default\": false,\n          \"title\": \"Withheadings\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"TableContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"name\": {\n      \"default\": \"Untitled Notebook\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Version\"\n    },\n    \"blocks\": {\n      \"items\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"attaches\": \"#/$defs/AttachesBlock\",\n            \"checklist\": \"#/$defs/ChecklistBlock\",\n            \"header\": \"#/$defs/HeaderBlock\",\n            \"image\": \"#/$defs/ImageBlock\",\n            \"ketcher\": \"#/$defs/KetcherBlock\",\n            \"list\": \"#/$defs/ListBlock\",\n            \"paragraph\": \"#/$defs/ParagraphBlock\",\n            \"table\": \"#/$defs/TableBlock\"\n          },\n          \"propertyName\": \"blockType\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/$defs/HeaderBlock\"\n          },\n          {\n            \"$ref\": \"#/$defs/ParagraphBlock\"\n          },\n          {\n            \"$ref\": \"#/$defs/ChecklistBlock\"\n          },\n          {\n            \"$ref\": \"#/$defs/AttachesBlock\"\n          },\n          {\n            \"$ref\": \"#/$defs/ImageBlock\"\n          },\n          {\n            \"$ref\": \"#/$defs/KetcherBlock\"\n          },\n          {\n            \"$ref\": \"#/$defs/TableBlock\"\n          },\n          {\n            \"$ref\": \"#/$defs/ListBlock\"\n          }\n        ]\n      },\n      \"title\": \"Blocks\",\n      \"type\": \"array\"\n    },\n    \"links\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookLink\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Links\"\n    }\n  },\n  \"required\": [\n    \"parentId\"\n  ],\n  \"title\": \"Notebook\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>id</code>                 (<code>NotebookId | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>parent_id</code>                 (<code>ProjectId | TaskId</code>)             </li> <li> <code>version</code>                 (<code>datetime | None</code>)             </li> <li> <code>blocks</code>                 (<code>list[NotebookBlock]</code>)             </li> <li> <code>links</code>                 (<code>list[NotebookLink] | None</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.Notebook.id","title":"id","text":"<pre><code>id: NotebookId | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.Notebook.name","title":"name","text":"<pre><code>name: str = 'Untitled Notebook'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.Notebook.parent_id","title":"parent_id","text":"<pre><code>parent_id: ProjectId | TaskId\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.Notebook.version","title":"version","text":"<pre><code>version: datetime | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.Notebook.blocks","title":"blocks","text":"<pre><code>blocks: list[NotebookBlock]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.Notebook.links","title":"links","text":"<pre><code>links: list[NotebookLink] | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutOperation","title":"PutOperation","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>UPDATE</code> <code>DELETE</code>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutOperation.UPDATE","title":"UPDATE","text":"<pre><code>UPDATE = 'update'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutOperation.DELETE","title":"DELETE","text":"<pre><code>DELETE = 'delete'\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockDatum","title":"PutBlockDatum","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AttachesContent\": {\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Title\"\n        },\n        \"namespace\": {\n          \"default\": \"result\",\n          \"title\": \"Namespace\",\n          \"type\": \"string\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"mimeType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Mimetype\"\n        },\n        \"signedURL\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Signedurl\"\n        }\n      },\n      \"title\": \"AttachesContent\",\n      \"type\": \"object\"\n    },\n    \"BlockType\": {\n      \"enum\": [\n        \"paragraph\",\n        \"list\",\n        \"header\",\n        \"checklist\",\n        \"image\",\n        \"attaches\",\n        \"ketcher\",\n        \"table\"\n      ],\n      \"title\": \"BlockType\",\n      \"type\": \"string\"\n    },\n    \"BulletedListContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"style\": {\n          \"const\": \"unordered\",\n          \"default\": \"unordered\",\n          \"title\": \"Style\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"BulletedListContent\",\n      \"type\": \"object\"\n    },\n    \"ChecklistContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ChecklistItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"ChecklistContent\",\n      \"type\": \"object\"\n    },\n    \"ChecklistItem\": {\n      \"properties\": {\n        \"checked\": {\n          \"title\": \"Checked\",\n          \"type\": \"boolean\"\n        },\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"checked\",\n        \"text\"\n      ],\n      \"title\": \"ChecklistItem\",\n      \"type\": \"object\"\n    },\n    \"HeaderContent\": {\n      \"properties\": {\n        \"level\": {\n          \"enum\": [\n            1,\n            2,\n            3\n          ],\n          \"title\": \"Level\",\n          \"type\": \"integer\"\n        },\n        \"text\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Text\"\n        }\n      },\n      \"required\": [\n        \"level\",\n        \"text\"\n      ],\n      \"title\": \"HeaderContent\",\n      \"type\": \"object\"\n    },\n    \"ImageContent\": {\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Title\"\n        },\n        \"namespace\": {\n          \"default\": \"result\",\n          \"title\": \"Namespace\",\n          \"type\": \"string\"\n        },\n        \"stretched\": {\n          \"default\": false,\n          \"title\": \"Stretched\",\n          \"type\": \"boolean\"\n        },\n        \"withBackground\": {\n          \"default\": false,\n          \"title\": \"Withbackground\",\n          \"type\": \"boolean\"\n        },\n        \"withBorder\": {\n          \"default\": false,\n          \"title\": \"Withborder\",\n          \"type\": \"boolean\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"signedURL\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Signedurl\"\n        }\n      },\n      \"title\": \"ImageContent\",\n      \"type\": \"object\"\n    },\n    \"KetcherContent\": {\n      \"properties\": {\n        \"synthesisId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Synthesisid\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"blockId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Blockid\"\n        },\n        \"data\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Data\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"s3Key\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"S3Key\"\n        },\n        \"png\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Png\"\n        },\n        \"ketcherUrl\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Ketcherurl\"\n        }\n      },\n      \"title\": \"KetcherContent\",\n      \"type\": \"object\"\n    },\n    \"NotebookListItem\": {\n      \"properties\": {\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Content\"\n        },\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"NotebookListItem\",\n      \"type\": \"object\"\n    },\n    \"NumberedListContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"style\": {\n          \"const\": \"ordered\",\n          \"default\": \"ordered\",\n          \"title\": \"Style\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"NumberedListContent\",\n      \"type\": \"object\"\n    },\n    \"ParagraphContent\": {\n      \"properties\": {\n        \"text\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Text\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"ParagraphContent\",\n      \"type\": \"object\"\n    },\n    \"PutOperation\": {\n      \"enum\": [\n        \"update\",\n        \"delete\"\n      ],\n      \"title\": \"PutOperation\",\n      \"type\": \"string\"\n    },\n    \"TableContent\": {\n      \"properties\": {\n        \"content\": {\n          \"items\": {\n            \"items\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"null\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"title\": \"Content\",\n          \"type\": \"array\"\n        },\n        \"withHeadings\": {\n          \"default\": false,\n          \"title\": \"Withheadings\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"TableContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"operation\": {\n      \"$ref\": \"#/$defs/PutOperation\"\n    },\n    \"blockType\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/BlockType\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"content\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/HeaderContent\"\n        },\n        {\n          \"$ref\": \"#/$defs/ParagraphContent\"\n        },\n        {\n          \"$ref\": \"#/$defs/ChecklistContent\"\n        },\n        {\n          \"$ref\": \"#/$defs/AttachesContent\"\n        },\n        {\n          \"$ref\": \"#/$defs/ImageContent\"\n        },\n        {\n          \"$ref\": \"#/$defs/KetcherContent\"\n        },\n        {\n          \"$ref\": \"#/$defs/TableContent\"\n        },\n        {\n          \"$ref\": \"#/$defs/BulletedListContent\"\n        },\n        {\n          \"$ref\": \"#/$defs/NumberedListContent\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Content\"\n    },\n    \"previousBlockId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Previousblockid\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"operation\"\n  ],\n  \"title\": \"PutBlockDatum\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>operation</code>                 (<code>PutOperation</code>)             </li> <li> <code>type</code>                 (<code>BlockType | None</code>)             </li> <li> <code>content</code>                 (<code>NotebookContent | None</code>)             </li> <li> <code>previous_block_id</code>                 (<code>str | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>content_matches_type</code> </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockDatum.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockDatum.operation","title":"operation","text":"<pre><code>operation: PutOperation\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockDatum.type","title":"type","text":"<pre><code>type: BlockType | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockDatum.content","title":"content","text":"<pre><code>content: NotebookContent | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockDatum.previous_block_id","title":"previous_block_id","text":"<pre><code>previous_block_id: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockDatum.content_matches_type","title":"content_matches_type","text":"<pre><code>content_matches_type() -&gt; PutBlockDatum\n</code></pre> Source code in <code>src/albert/resources/notebooks.py</code> <pre><code>@model_validator(mode=\"after\")\ndef content_matches_type(self) -&gt; \"PutBlockDatum\":\n    if self.content is None:\n        return self  # skip check if there's no content\n\n    content_type = allowed_notebook_contents.get(self.type)\n    if content_type and not isinstance(self.content, content_type):\n        msg = f\"The content type and block type do not match. [content_type={type(self.content)}, block_type={self.type}]\"\n        raise AlbertException(msg)\n    return self\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockDatum.model_dump","title":"model_dump","text":"<pre><code>model_dump(**kwargs) -&gt; dict[str, Any]\n</code></pre> <p>Shallow model_dump to exclude None values (None only removed from top level). This ensures required attrs are not removed.</p> Source code in <code>src/albert/resources/notebooks.py</code> <pre><code>def model_dump(self, **kwargs) -&gt; dict[str, Any]:\n    \"\"\"\n    Shallow model_dump to exclude None values (None only removed from top level).\n    This ensures required attrs are not removed.\n    \"\"\"\n    base = super().model_dump(**kwargs)\n    return {k: v for k, v in base.items() if v is not None}\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockPayload","title":"PutBlockPayload","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AttachesContent\": {\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Title\"\n        },\n        \"namespace\": {\n          \"default\": \"result\",\n          \"title\": \"Namespace\",\n          \"type\": \"string\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"mimeType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Mimetype\"\n        },\n        \"signedURL\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Signedurl\"\n        }\n      },\n      \"title\": \"AttachesContent\",\n      \"type\": \"object\"\n    },\n    \"BlockType\": {\n      \"enum\": [\n        \"paragraph\",\n        \"list\",\n        \"header\",\n        \"checklist\",\n        \"image\",\n        \"attaches\",\n        \"ketcher\",\n        \"table\"\n      ],\n      \"title\": \"BlockType\",\n      \"type\": \"string\"\n    },\n    \"BulletedListContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"style\": {\n          \"const\": \"unordered\",\n          \"default\": \"unordered\",\n          \"title\": \"Style\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"BulletedListContent\",\n      \"type\": \"object\"\n    },\n    \"ChecklistContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ChecklistItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"ChecklistContent\",\n      \"type\": \"object\"\n    },\n    \"ChecklistItem\": {\n      \"properties\": {\n        \"checked\": {\n          \"title\": \"Checked\",\n          \"type\": \"boolean\"\n        },\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"checked\",\n        \"text\"\n      ],\n      \"title\": \"ChecklistItem\",\n      \"type\": \"object\"\n    },\n    \"HeaderContent\": {\n      \"properties\": {\n        \"level\": {\n          \"enum\": [\n            1,\n            2,\n            3\n          ],\n          \"title\": \"Level\",\n          \"type\": \"integer\"\n        },\n        \"text\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Text\"\n        }\n      },\n      \"required\": [\n        \"level\",\n        \"text\"\n      ],\n      \"title\": \"HeaderContent\",\n      \"type\": \"object\"\n    },\n    \"ImageContent\": {\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Title\"\n        },\n        \"namespace\": {\n          \"default\": \"result\",\n          \"title\": \"Namespace\",\n          \"type\": \"string\"\n        },\n        \"stretched\": {\n          \"default\": false,\n          \"title\": \"Stretched\",\n          \"type\": \"boolean\"\n        },\n        \"withBackground\": {\n          \"default\": false,\n          \"title\": \"Withbackground\",\n          \"type\": \"boolean\"\n        },\n        \"withBorder\": {\n          \"default\": false,\n          \"title\": \"Withborder\",\n          \"type\": \"boolean\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"signedURL\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Signedurl\"\n        }\n      },\n      \"title\": \"ImageContent\",\n      \"type\": \"object\"\n    },\n    \"KetcherContent\": {\n      \"properties\": {\n        \"synthesisId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Synthesisid\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"blockId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Blockid\"\n        },\n        \"data\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Data\"\n        },\n        \"fileKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Filekey\"\n        },\n        \"s3Key\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"S3Key\"\n        },\n        \"png\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Png\"\n        },\n        \"ketcherUrl\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Ketcherurl\"\n        }\n      },\n      \"title\": \"KetcherContent\",\n      \"type\": \"object\"\n    },\n    \"NotebookListItem\": {\n      \"properties\": {\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Content\"\n        },\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"NotebookListItem\",\n      \"type\": \"object\"\n    },\n    \"NumberedListContent\": {\n      \"properties\": {\n        \"items\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/NotebookListItem\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"style\": {\n          \"const\": \"ordered\",\n          \"default\": \"ordered\",\n          \"title\": \"Style\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"items\"\n      ],\n      \"title\": \"NumberedListContent\",\n      \"type\": \"object\"\n    },\n    \"ParagraphContent\": {\n      \"properties\": {\n        \"text\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Text\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"ParagraphContent\",\n      \"type\": \"object\"\n    },\n    \"PutBlockDatum\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"operation\": {\n          \"$ref\": \"#/$defs/PutOperation\"\n        },\n        \"blockType\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/BlockType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/HeaderContent\"\n            },\n            {\n              \"$ref\": \"#/$defs/ParagraphContent\"\n            },\n            {\n              \"$ref\": \"#/$defs/ChecklistContent\"\n            },\n            {\n              \"$ref\": \"#/$defs/AttachesContent\"\n            },\n            {\n              \"$ref\": \"#/$defs/ImageContent\"\n            },\n            {\n              \"$ref\": \"#/$defs/KetcherContent\"\n            },\n            {\n              \"$ref\": \"#/$defs/TableContent\"\n            },\n            {\n              \"$ref\": \"#/$defs/BulletedListContent\"\n            },\n            {\n              \"$ref\": \"#/$defs/NumberedListContent\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Content\"\n        },\n        \"previousBlockId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Previousblockid\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"operation\"\n      ],\n      \"title\": \"PutBlockDatum\",\n      \"type\": \"object\"\n    },\n    \"PutOperation\": {\n      \"enum\": [\n        \"update\",\n        \"delete\"\n      ],\n      \"title\": \"PutOperation\",\n      \"type\": \"string\"\n    },\n    \"TableContent\": {\n      \"properties\": {\n        \"content\": {\n          \"items\": {\n            \"items\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"null\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"title\": \"Content\",\n          \"type\": \"array\"\n        },\n        \"withHeadings\": {\n          \"default\": false,\n          \"title\": \"Withheadings\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"content\"\n      ],\n      \"title\": \"TableContent\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"data\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/PutBlockDatum\"\n      },\n      \"title\": \"Data\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"title\": \"PutBlockPayload\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data</code>                 (<code>list[PutBlockDatum]</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockPayload.data","title":"data","text":"<pre><code>data: list[PutBlockDatum]\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.PutBlockPayload.model_dump","title":"model_dump","text":"<pre><code>model_dump(**kwargs) -&gt; dict[str, Any]\n</code></pre> <p>model_dump to ensure only top-level None attrs are removed on PutBlockDatum.</p> Source code in <code>src/albert/resources/notebooks.py</code> <pre><code>def model_dump(self, **kwargs) -&gt; dict[str, Any]:\n    \"\"\"model_dump to ensure only top-level None attrs are removed on PutBlockDatum.\"\"\"\n    return {\"data\": [item.model_dump(**kwargs) for item in self.data]}\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyACL","title":"NotebookCopyACL","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"fgclist\": {\n      \"default\": null,\n      \"items\": {\n        \"$ref\": \"#/$defs/ACL\"\n      },\n      \"title\": \"Fgclist\",\n      \"type\": \"array\"\n    },\n    \"class\": {\n      \"title\": \"Class\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"class\"\n  ],\n  \"title\": \"NotebookCopyACL\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>fgclist</code>                 (<code>list[ACL]</code>)             </li> <li> <code>acl_class</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyACL.fgclist","title":"fgclist","text":"<pre><code>fgclist: list[ACL] = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyACL.acl_class","title":"acl_class","text":"<pre><code>acl_class: str\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyInfo","title":"NotebookCopyInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"NotebookCopyACL\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"fgclist\": {\n          \"default\": null,\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Fgclist\",\n          \"type\": \"array\"\n        },\n        \"class\": {\n          \"title\": \"Class\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"class\"\n      ],\n      \"title\": \"NotebookCopyACL\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"notebookName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Notebookname\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"acl\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/NotebookCopyACL\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"parentId\"\n  ],\n  \"title\": \"NotebookCopyInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>NotebookId</code>)             </li> <li> <code>parent_id</code>                 (<code>str</code>)             </li> <li> <code>notebook_name</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>acl</code>                 (<code>NotebookCopyACL | None</code>)             </li> </ul>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyInfo.id","title":"id","text":"<pre><code>id: NotebookId\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyInfo.parent_id","title":"parent_id","text":"<pre><code>parent_id: str\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyInfo.notebook_name","title":"notebook_name","text":"<pre><code>notebook_name: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyInfo.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/notebooks/#albert.resources.notebooks.NotebookCopyInfo.acl","title":"acl","text":"<pre><code>acl: NotebookCopyACL | None = None\n</code></pre>"},{"location":"resources/notes/","title":"Notes","text":""},{"location":"resources/notes/#albert.resources.notes","title":"albert.resources.notes","text":""},{"location":"resources/notes/#albert.resources.notes.Note","title":"Note","text":"<p>               Bases: <code>BaseResource</code></p> <p>Represents a Note on the Albert Platform. Users can be mentioned in notes by using f-string and the User.to_note_mention() method. This allows for easy tagging and referencing of users within notes. example: f\"Hello {tagged_user.to_note_mention()}!\"</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Represents a Note on the Albert Platform. Users can be mentioned in notes by using f-string and the User.to_note_mention() method.\\nThis allows for easy tagging and referencing of users within notes. example: f\\\"Hello {tagged_user.to_note_mention()}!\\\"\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"note\": {\n      \"title\": \"Note\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"Attachments\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Attachments\"\n    }\n  },\n  \"required\": [\n    \"parentId\",\n    \"note\"\n  ],\n  \"title\": \"Note\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>parent_id</code>                 (<code>str</code>)             </li> <li> <code>note</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>attachments</code>                 (<code>list[EntityLink] | None</code>)             </li> </ul>"},{"location":"resources/notes/#albert.resources.notes.Note.parent_id","title":"parent_id","text":"<pre><code>parent_id: str\n</code></pre>"},{"location":"resources/notes/#albert.resources.notes.Note.note","title":"note","text":"<pre><code>note: str\n</code></pre>"},{"location":"resources/notes/#albert.resources.notes.Note.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/notes/#albert.resources.notes.Note.attachments","title":"attachments","text":"<pre><code>attachments: list[EntityLink] | None = None\n</code></pre>"},{"location":"resources/parameter_groups/","title":"Parameter Groups","text":""},{"location":"resources/parameter_groups/#albert.resources.parameter_groups","title":"albert.resources.parameter_groups","text":""},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.PGType","title":"PGType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The type of a parameter group</p> <p>Attributes:</p> Name Type Description <code>GENERAL</code> <code>BATCH</code> <code>PROPERTY</code>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.PGType.GENERAL","title":"GENERAL","text":"<pre><code>GENERAL = 'general'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.PGType.BATCH","title":"BATCH","text":"<pre><code>BATCH = 'batch'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.PGType.PROPERTY","title":"PROPERTY","text":"<pre><code>PROPERTY = 'property'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.DataType","title":"DataType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>NUMBER</code> <code>STRING</code> <code>ENUM</code>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.DataType.NUMBER","title":"NUMBER","text":"<pre><code>NUMBER = 'number'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.DataType.STRING","title":"STRING","text":"<pre><code>STRING = 'string'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.DataType.ENUM","title":"ENUM","text":"<pre><code>ENUM = 'enum'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.Operator","title":"Operator","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>BETWEEN</code> <code>LESS_THAN</code> <code>LESS_THAN_OR_EQUAL</code> <code>GREATER_THAN_OR_EQUAL</code> <code>GREATER_THAN</code> <code>EQUALS</code>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.Operator.BETWEEN","title":"BETWEEN","text":"<pre><code>BETWEEN = 'between'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.Operator.LESS_THAN","title":"LESS_THAN","text":"<pre><code>LESS_THAN = 'lt'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.Operator.LESS_THAN_OR_EQUAL","title":"LESS_THAN_OR_EQUAL","text":"<pre><code>LESS_THAN_OR_EQUAL = 'lte'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.Operator.GREATER_THAN_OR_EQUAL","title":"GREATER_THAN_OR_EQUAL","text":"<pre><code>GREATER_THAN_OR_EQUAL = 'gte'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.Operator.GREATER_THAN","title":"GREATER_THAN","text":"<pre><code>GREATER_THAN = 'gt'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.Operator.EQUALS","title":"EQUALS","text":"<pre><code>EQUALS = 'eq'\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.EnumValidationValue","title":"EnumValidationValue","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>Represents a value for an enum type validation.</p> <p>Attributes:</p> Name Type Description <code>text</code> <code>str</code> <p>The text of the enum value.</p> <code>id</code> <code>str | None</code> <p>The ID of the enum value. If not provided, the ID will be generated upon creation.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n  \"properties\": {\n    \"text\": {\n      \"title\": \"Text\",\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"originalText\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Originaltext\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ],\n  \"title\": \"EnumValidationValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>text</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>original_text</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.EnumValidationValue.text","title":"text","text":"<pre><code>text: str\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.EnumValidationValue.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.EnumValidationValue.original_text","title":"original_text","text":"<pre><code>original_text: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ValueValidation","title":"ValueValidation","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"datatype\": {\n      \"$ref\": \"#/$defs/DataType\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/EnumValidationValue\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"min\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Min\"\n    },\n    \"max\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Max\"\n    },\n    \"operator\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Operator\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"required\": [\n    \"datatype\"\n  ],\n  \"title\": \"ValueValidation\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>datatype</code>                 (<code>DataType</code>)             </li> <li> <code>value</code>                 (<code>str | list[EnumValidationValue] | None</code>)             </li> <li> <code>min</code>                 (<code>str | None</code>)             </li> <li> <code>max</code>                 (<code>str | None</code>)             </li> <li> <code>operator</code>                 (<code>Operator | None</code>)             </li> </ul>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ValueValidation.datatype","title":"datatype","text":"<pre><code>datatype: DataType\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ValueValidation.value","title":"value","text":"<pre><code>value: str | list[EnumValidationValue] | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ValueValidation.min","title":"min","text":"<pre><code>min: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ValueValidation.max","title":"max","text":"<pre><code>max: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ValueValidation.operator","title":"operator","text":"<pre><code>operator: Operator | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue","title":"ParameterValue","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>The value of a parameter in a parameter group.</p> <p>Attributes:</p> Name Type Description <code>parameter</code> <code>Parameter</code> <p>The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.</p> <code>category</code> <code>ParameterCategory</code> <p>The category of the parameter.</p> <code>short_name</code> <code>str | None</code> <p>The short name of the parameter value.</p> <code>value</code> <code>str | None</code> <p>The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).</p> <code>unit</code> <code>Unit | None</code> <p>The unit of measure for the provided parameter value.</p> <code>name</code> <code>str</code> <p>The name of the parameter. Read-only.</p> <code>sequence</code> <code>int</code> <p>The sequence of the parameter. Read-only.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n  \"properties\": {\n    \"parameter\": {\n      \"$ref\": \"#/$defs/Parameter\",\n      \"default\": null\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/ParameterCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"shortName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Shortname\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"$ref\": \"#/$defs/InventoryItem\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"Unit\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Unit\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"Added\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"validation\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ValueValidation\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Validation\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"sequence\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sequence\"\n    },\n    \"originalShortName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Originalshortname\"\n    },\n    \"originalName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Originalname\"\n    }\n  },\n  \"title\": \"ParameterValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>parameter</code>                 (<code>Parameter</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>category</code>                 (<code>ParameterCategory | None</code>)             </li> <li> <code>short_name</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>str | SerializeAsEntityLink[InventoryItem] | None</code>)             </li> <li> <code>unit</code>                 (<code>SerializeAsEntityLink[Unit] | None</code>)             </li> <li> <code>added</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>validation</code>                 (<code>list[ValueValidation] | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>sequence</code>                 (<code>str | None</code>)             </li> <li> <code>original_short_name</code>                 (<code>str | None</code>)             </li> <li> <code>original_name</code>                 (<code>str | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>validate_parameter_value</code>                 \u2192                   <code>value</code> </li> <li> <code>set_parameter_fields</code> </li> </ul>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.parameter","title":"parameter","text":"<pre><code>parameter: Parameter = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.category","title":"category","text":"<pre><code>category: ParameterCategory | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.short_name","title":"short_name","text":"<pre><code>short_name: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.value","title":"value","text":"<pre><code>value: str | SerializeAsEntityLink[InventoryItem] | None = (\n    None\n)\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.unit","title":"unit","text":"<pre><code>unit: SerializeAsEntityLink[Unit] | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.added","title":"added","text":"<pre><code>added: AuditFields | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.validation","title":"validation","text":"<pre><code>validation: list[ValueValidation] | None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.sequence","title":"sequence","text":"<pre><code>sequence: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.original_short_name","title":"original_short_name","text":"<pre><code>original_short_name: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.original_name","title":"original_name","text":"<pre><code>original_name: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.validate_parameter_value","title":"validate_parameter_value","text":"<pre><code>validate_parameter_value(value: Any) -&gt; Any\n</code></pre> Source code in <code>src/albert/resources/parameter_groups.py</code> <pre><code>@field_validator(\"value\", mode=\"before\")\n@classmethod\ndef validate_parameter_value(cls, value: Any) -&gt; Any:\n    # Bug in ParameterGroups sometimes returns incorrect JSON from batch endpoint\n    # Set to None if value is a dict but no ID field\n    # Reference: https://linear.app/albert-invent/issue/IN-10\n    if isinstance(value, dict) and \"id\" not in value:\n        return None\n    return value\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterValue.set_parameter_fields","title":"set_parameter_fields","text":"<pre><code>set_parameter_fields() -&gt; ParameterValue\n</code></pre> Source code in <code>src/albert/resources/parameter_groups.py</code> <pre><code>@model_validator(mode=\"after\")\ndef set_parameter_fields(self) -&gt; \"ParameterValue\":\n    if self.parameter is None and self.id is None:\n        raise ValueError(\"Please provide either an id or an parameter object.\")\n\n    if self.parameter is not None:\n        object.__setattr__(self, \"id\", self.parameter.id)\n        object.__setattr__(self, \"category\", self.parameter.category)\n        object.__setattr__(self, \"name\", self.parameter.name)\n\n    return self\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup","title":"ParameterGroup","text":"<p>               Bases: <code>BaseTaggedResource</code></p> <p>Use 'Standards' key in metadata to store standards</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"PGType\": {\n      \"description\": \"The type of a parameter group\",\n      \"enum\": [\n        \"general\",\n        \"batch\",\n        \"property\"\n      ],\n      \"title\": \"PGType\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Use 'Standards' key in metadata to store standards\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/PGType\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"description\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Description\"\n    },\n    \"class\": {\n      \"$ref\": \"#/$defs/SecurityClass\",\n      \"default\": \"restricted\"\n    },\n    \"ACL\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/User\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Acl\"\n    },\n    \"Metadata\": {\n      \"additionalProperties\": {\n        \"anyOf\": [\n          {\n            \"type\": \"number\"\n          },\n          {\n            \"type\": \"integer\"\n          },\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          {\n            \"items\": {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            \"type\": \"array\"\n          },\n          {\n            \"type\": \"null\"\n          }\n        ]\n      },\n      \"title\": \"Metadata\",\n      \"type\": \"object\"\n    },\n    \"Parameters\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ParameterValue\"\n      },\n      \"title\": \"Parameters\",\n      \"type\": \"array\"\n    },\n    \"verified\": {\n      \"default\": false,\n      \"title\": \"Verified\",\n      \"type\": \"boolean\"\n    },\n    \"documents\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/EntityLink\"\n      },\n      \"title\": \"Documents\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"ParameterGroup\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>type</code>                 (<code>PGType | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>description</code>                 (<code>str | None</code>)             </li> <li> <code>security_class</code>                 (<code>SecurityClass</code>)             </li> <li> <code>acl</code>                 (<code>list[SerializeAsEntityLink[User]] | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem]</code>)             </li> <li> <code>parameters</code>                 (<code>list[ParameterValue]</code>)             </li> <li> <code>verified</code>                 (<code>bool</code>)             </li> <li> <code>documents</code>                 (<code>list[EntityLink]</code>)             </li> </ul>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.type","title":"type","text":"<pre><code>type: PGType | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.description","title":"description","text":"<pre><code>description: str | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.security_class","title":"security_class","text":"<pre><code>security_class: SecurityClass = RESTRICTED\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.acl","title":"acl","text":"<pre><code>acl: list[SerializeAsEntityLink[User]] | None = None\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem]\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.parameters","title":"parameters","text":"<pre><code>parameters: list[ParameterValue]\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.verified","title":"verified","text":"<pre><code>verified: bool = False\n</code></pre>"},{"location":"resources/parameter_groups/#albert.resources.parameter_groups.ParameterGroup.documents","title":"documents","text":"<pre><code>documents: list[EntityLink]\n</code></pre>"},{"location":"resources/parameters/","title":"Parameters","text":""},{"location":"resources/parameters/#albert.resources.parameters","title":"albert.resources.parameters","text":""},{"location":"resources/parameters/#albert.resources.parameters.ParameterCategory","title":"ParameterCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The category of a parameter</p> <p>Attributes:</p> Name Type Description <code>NORMAL</code> <code>SPECIAL</code>"},{"location":"resources/parameters/#albert.resources.parameters.ParameterCategory.NORMAL","title":"NORMAL","text":"<pre><code>NORMAL = 'Normal'\n</code></pre>"},{"location":"resources/parameters/#albert.resources.parameters.ParameterCategory.SPECIAL","title":"SPECIAL","text":"<pre><code>SPECIAL = 'Special'\n</code></pre>"},{"location":"resources/parameters/#albert.resources.parameters.Parameter","title":"Parameter","text":"<p>               Bases: <code>BaseResource</code></p> <p>A parameter in Albert.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the parameter. Names must be unique.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the parameter. Set when the parameter is retrieved from Albert.</p> <code>category</code> <code>ParameterCategory</code> <p>The category of the parameter. Allowed values are <code>Normal</code> and <code>Special</code>. Read-only.</p> <code>rank</code> <code>int</code> <p>The rank of the returned parameter. Read-only.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/ParameterCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"rank\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rank\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"Parameter\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem] | None</code>)             </li> <li> <code>category</code>                 (<code>ParameterCategory | None</code>)             </li> <li> <code>rank</code>                 (<code>int | None</code>)             </li> </ul>"},{"location":"resources/parameters/#albert.resources.parameters.Parameter.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/parameters/#albert.resources.parameters.Parameter.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/parameters/#albert.resources.parameters.Parameter.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem] | None = None\n</code></pre>"},{"location":"resources/parameters/#albert.resources.parameters.Parameter.category","title":"category","text":"<pre><code>category: ParameterCategory | None = None\n</code></pre>"},{"location":"resources/parameters/#albert.resources.parameters.Parameter.rank","title":"rank","text":"<pre><code>rank: int | None = None\n</code></pre>"},{"location":"resources/pricings/","title":"Pricings","text":""},{"location":"resources/pricings/#albert.resources.pricings","title":"albert.resources.pricings","text":""},{"location":"resources/pricings/#albert.resources.pricings.LeadTimeUnit","title":"LeadTimeUnit","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The unit of measure for the provided lead time.</p> <p>Attributes:</p> Name Type Description <code>DAYS</code> <code>WEEKS</code> <code>MONTHS</code>"},{"location":"resources/pricings/#albert.resources.pricings.LeadTimeUnit.DAYS","title":"DAYS","text":"<pre><code>DAYS = 'Days'\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.LeadTimeUnit.WEEKS","title":"WEEKS","text":"<pre><code>WEEKS = 'Weeks'\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.LeadTimeUnit.MONTHS","title":"MONTHS","text":"<pre><code>MONTHS = 'Months'\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing","title":"Pricing","text":"<p>               Bases: <code>BaseResource</code></p> <p>A Price of a given InventoryItem at a given Location.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str | None</code> <p>The Albert ID of the pricing. Set when the pricing is retrieved from Albert.</p> <code>inventory_id</code> <code>str</code> <p>The Albert ID of the inventory item.</p> <code>company</code> <code>Company</code> <p>The company that the pricing belongs to.</p> <code>location</code> <code>Location</code> <p>The location that the pricing belongs to.</p> <code>description</code> <code>str | None</code> <p>The description of the pricing. Optional.</p> <code>pack_size</code> <code>str | None</code> <p>The pack size of the pricing. Optional. Used to calculate the cost per unit.</p> <code>price</code> <code>float</code> <p>The price of the pricing IN CURRENCY/ KG or CURRENCY/L! Must do the conversion! Depends on InventoryItem's unit of measure.</p> <code>currency</code> <code>str</code> <p>The currency of the pricing. Defaults to <code>USD</code>.</p> <code>fob</code> <code>str | None</code> <p>The FOB of the pricing. Optional.</p> <code>lead_time</code> <code>int | None</code> <p>The lead time of the pricing. Optional.</p> <code>lead_time_unit</code> <code>LeadTimeUnit | None</code> <p>The unit of measure for the provided lead time. Optional.</p> <code>expiration_date</code> <code>str | None</code> <p>The expiration date of the pricing. YYYY-MM-DD format.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"LeadTimeUnit\": {\n      \"description\": \"The unit of measure for the provided lead time.\",\n      \"enum\": [\n        \"Days\",\n        \"Weeks\",\n        \"Months\"\n      ],\n      \"title\": \"LeadTimeUnit\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A Price of a given InventoryItem at a given Location.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the pricing. Set when the pricing is retrieved from Albert.\\ninventory_id : str\\n    The Albert ID of the inventory item.\\ncompany : Company\\n    The company that the pricing belongs to.\\nlocation : Location\\n    The location that the pricing belongs to.\\ndescription : str | None\\n    The description of the pricing. Optional.\\npack_size : str | None\\n    The pack size of the pricing. Optional. Used to calculate the cost per unit.\\nprice : float\\n    The price of the pricing IN CURRENCY/ KG or CURRENCY/L! Must do the conversion! Depends on InventoryItem's unit of measure.\\ncurrency : str\\n    The currency of the pricing. Defaults to `USD`.\\nfob : str | None\\n    The FOB of the pricing. Optional.\\nlead_time : int | None\\n    The lead time of the pricing. Optional.\\nlead_time_unit : LeadTimeUnit | None\\n    The unit of measure for the provided lead time. Optional.\\nexpiration_date : str | None\\n    The expiration date of the pricing. YYYY-MM-DD format.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"Company\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Company\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        }\n      ],\n      \"title\": \"Company\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        }\n      ],\n      \"title\": \"Location\"\n    },\n    \"description\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Description\"\n    },\n    \"packSize\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Packsize\"\n    },\n    \"price\": {\n      \"maximum\": 9999999999,\n      \"minimum\": 0,\n      \"title\": \"Price\",\n      \"type\": \"number\"\n    },\n    \"currency\": {\n      \"default\": \"USD\",\n      \"title\": \"Currency\",\n      \"type\": \"string\"\n    },\n    \"fob\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Fob\"\n    },\n    \"leadTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Leadtime\"\n    },\n    \"leadTimeUnit\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/LeadTimeUnit\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"expirationDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Expirationdate\"\n    },\n    \"default\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Default\"\n    }\n  },\n  \"required\": [\n    \"Company\",\n    \"Location\",\n    \"price\"\n  ],\n  \"title\": \"Pricing\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>inventory_id</code>                 (<code>str | None</code>)             </li> <li> <code>company</code>                 (<code>SerializeAsEntityLink[Company]</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location]</code>)             </li> <li> <code>description</code>                 (<code>str | None</code>)             </li> <li> <code>pack_size</code>                 (<code>str | None</code>)             </li> <li> <code>price</code>                 (<code>float</code>)             </li> <li> <code>currency</code>                 (<code>str</code>)             </li> <li> <code>fob</code>                 (<code>str | None</code>)             </li> <li> <code>lead_time</code>                 (<code>int | None</code>)             </li> <li> <code>lead_time_unit</code>                 (<code>LeadTimeUnit | None</code>)             </li> <li> <code>expiration_date</code>                 (<code>str | None</code>)             </li> <li> <code>default</code>                 (<code>int | None</code>)             </li> </ul>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: str | None = None\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.company","title":"company","text":"<pre><code>company: SerializeAsEntityLink[Company]\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.location","title":"location","text":"<pre><code>location: SerializeAsEntityLink[Location]\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.description","title":"description","text":"<pre><code>description: str | None = None\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.pack_size","title":"pack_size","text":"<pre><code>pack_size: str | None = None\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.price","title":"price","text":"<pre><code>price: float\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.currency","title":"currency","text":"<pre><code>currency: str = 'USD'\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.fob","title":"fob","text":"<pre><code>fob: str | None = None\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.lead_time","title":"lead_time","text":"<pre><code>lead_time: int | None = None\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.lead_time_unit","title":"lead_time_unit","text":"<pre><code>lead_time_unit: LeadTimeUnit | None = None\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.expiration_date","title":"expiration_date","text":"<pre><code>expiration_date: str | None = None\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.Pricing.default","title":"default","text":"<pre><code>default: int | None = None\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.InventoryPricings","title":"InventoryPricings","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>Pricings for a given InventoryItem.</p> <p>Attributes:</p> Name Type Description <code>inventory_id</code> <code>Inventory</code> <p>The inventory ID the pricings belong to.</p> <code>pricings</code> <code>list[Pricing]</code> <p>The list of pricings.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"LeadTimeUnit\": {\n      \"description\": \"The unit of measure for the provided lead time.\",\n      \"enum\": [\n        \"Days\",\n        \"Weeks\",\n        \"Months\"\n      ],\n      \"title\": \"LeadTimeUnit\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Pricing\": {\n      \"description\": \"A Price of a given InventoryItem at a given Location.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the pricing. Set when the pricing is retrieved from Albert.\\ninventory_id : str\\n    The Albert ID of the inventory item.\\ncompany : Company\\n    The company that the pricing belongs to.\\nlocation : Location\\n    The location that the pricing belongs to.\\ndescription : str | None\\n    The description of the pricing. Optional.\\npack_size : str | None\\n    The pack size of the pricing. Optional. Used to calculate the cost per unit.\\nprice : float\\n    The price of the pricing IN CURRENCY/ KG or CURRENCY/L! Must do the conversion! Depends on InventoryItem's unit of measure.\\ncurrency : str\\n    The currency of the pricing. Defaults to `USD`.\\nfob : str | None\\n    The FOB of the pricing. Optional.\\nlead_time : int | None\\n    The lead time of the pricing. Optional.\\nlead_time_unit : LeadTimeUnit | None\\n    The unit of measure for the provided lead time. Optional.\\nexpiration_date : str | None\\n    The expiration date of the pricing. YYYY-MM-DD format.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            }\n          ],\n          \"title\": \"Company\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            }\n          ],\n          \"title\": \"Location\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"packSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Packsize\"\n        },\n        \"price\": {\n          \"maximum\": 9999999999,\n          \"minimum\": 0,\n          \"title\": \"Price\",\n          \"type\": \"number\"\n        },\n        \"currency\": {\n          \"default\": \"USD\",\n          \"title\": \"Currency\",\n          \"type\": \"string\"\n        },\n        \"fob\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Fob\"\n        },\n        \"leadTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Leadtime\"\n        },\n        \"leadTimeUnit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/LeadTimeUnit\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"expirationDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Expirationdate\"\n        },\n        \"default\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Default\"\n        }\n      },\n      \"required\": [\n        \"Company\",\n        \"Location\",\n        \"price\"\n      ],\n      \"title\": \"Pricing\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Pricings for a given InventoryItem.\\n\\nAttributes\\n----------\\ninventory_id : Inventory\\n    The inventory ID the pricings belong to.\\npricings : list[Pricing]\\n    The list of pricings.\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"pricings\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/Pricing\"\n      },\n      \"title\": \"Pricings\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"pricings\"\n  ],\n  \"title\": \"InventoryPricings\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>inventory_id</code>                 (<code>InventoryId</code>)             </li> <li> <code>pricings</code>                 (<code>list[Pricing]</code>)             </li> </ul>"},{"location":"resources/pricings/#albert.resources.pricings.InventoryPricings.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: InventoryId\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.InventoryPricings.pricings","title":"pricings","text":"<pre><code>pricings: list[Pricing]\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.PricingBy","title":"PricingBy","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>LOCATION</code> <code>COMPANY</code>"},{"location":"resources/pricings/#albert.resources.pricings.PricingBy.LOCATION","title":"LOCATION","text":"<pre><code>LOCATION = 'Location'\n</code></pre>"},{"location":"resources/pricings/#albert.resources.pricings.PricingBy.COMPANY","title":"COMPANY","text":"<pre><code>COMPANY = 'Company'\n</code></pre>"},{"location":"resources/product_design/","title":"Product Design","text":""},{"location":"resources/product_design/#albert.resources.product_design","title":"albert.resources.product_design","text":""},{"location":"resources/product_design/#albert.resources.product_design.CasLevelSubstance","title":"CasLevelSubstance","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"casPrimaryKeyId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Casprimarykeyid\"\n    },\n    \"casID\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Casid\"\n    },\n    \"amount\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Amount\"\n    }\n  },\n  \"title\": \"CasLevelSubstance\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>cas_primary_key_id</code>                 (<code>str | None</code>)             </li> <li> <code>cas_id</code>                 (<code>str | None</code>)             </li> <li> <code>amount</code>                 (<code>float | None</code>)             </li> </ul>"},{"location":"resources/product_design/#albert.resources.product_design.CasLevelSubstance.cas_primary_key_id","title":"cas_primary_key_id","text":"<pre><code>cas_primary_key_id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.CasLevelSubstance.cas_id","title":"cas_id","text":"<pre><code>cas_id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.CasLevelSubstance.amount","title":"amount","text":"<pre><code>amount: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.NormalizedCAS","title":"NormalizedCAS","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"smiles\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Smiles\"\n    }\n  },\n  \"title\": \"NormalizedCAS\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>albert_id</code>                 (<code>str | None</code>)             </li> <li> <code>smiles</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/product_design/#albert.resources.product_design.NormalizedCAS.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.NormalizedCAS.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.NormalizedCAS.albert_id","title":"albert_id","text":"<pre><code>albert_id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.NormalizedCAS.smiles","title":"smiles","text":"<pre><code>smiles: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventorySDS","title":"UnpackedInventorySDS","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Class\"\n    },\n    \"unNumber\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unnumber\"\n    }\n  },\n  \"title\": \"UnpackedInventorySDS\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>albert_id</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>sds_class</code>                 (<code>str | None</code>)             </li> <li> <code>un_number</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventorySDS.albert_id","title":"albert_id","text":"<pre><code>albert_id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventorySDS.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventorySDS.sds_class","title":"sds_class","text":"<pre><code>sds_class: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventorySDS.un_number","title":"un_number","text":"<pre><code>un_number: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedCasInfo","title":"UnpackedCasInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"min\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Min\"\n    },\n    \"max\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Max\"\n    },\n    \"number\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Number\"\n    },\n    \"casAvg\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Casavg\"\n    },\n    \"casSum\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cassum\"\n    }\n  },\n  \"title\": \"UnpackedCasInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>min</code>                 (<code>float | None</code>)             </li> <li> <code>max</code>                 (<code>float | None</code>)             </li> <li> <code>number</code>                 (<code>str | None</code>)             </li> <li> <code>cas_average</code>                 (<code>float | None</code>)             </li> <li> <code>cas_sum</code>                 (<code>float | None</code>)             </li> </ul>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedCasInfo.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedCasInfo.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedCasInfo.min","title":"min","text":"<pre><code>min: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedCasInfo.max","title":"max","text":"<pre><code>max: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedCasInfo.number","title":"number","text":"<pre><code>number: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedCasInfo.cas_average","title":"cas_average","text":"<pre><code>cas_average: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedCasInfo.cas_sum","title":"cas_sum","text":"<pre><code>cas_sum: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventoryListItem","title":"UnpackedInventoryListItem","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"rowInventoryId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rowinventoryid\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"colId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Colid\"\n    },\n    \"colInventoryId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Colinventoryid\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"rowId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rowid\"\n    }\n  },\n  \"title\": \"UnpackedInventoryListItem\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>row_inventory_id</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>column_id</code>                 (<code>str | None</code>)             </li> <li> <code>column_inventory_id</code>                 (<code>str | None</code>)             </li> <li> <code>parent_id</code>                 (<code>str | None</code>)             </li> <li> <code>row_id</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventoryListItem.row_inventory_id","title":"row_inventory_id","text":"<pre><code>row_inventory_id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventoryListItem.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventoryListItem.column_id","title":"column_id","text":"<pre><code>column_id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventoryListItem.column_inventory_id","title":"column_inventory_id","text":"<pre><code>column_inventory_id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventoryListItem.parent_id","title":"parent_id","text":"<pre><code>parent_id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventoryListItem.row_id","title":"row_id","text":"<pre><code>row_id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventory","title":"UnpackedInventory","text":"<p>               Bases: <code>UnpackedInventoryListItem</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"UnpackedCasInfo\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        },\n        \"casAvg\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Casavg\"\n        },\n        \"casSum\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassum\"\n        }\n      },\n      \"title\": \"UnpackedCasInfo\",\n      \"type\": \"object\"\n    },\n    \"UnpackedInventorySDS\": {\n      \"properties\": {\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Class\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        }\n      },\n      \"title\": \"UnpackedInventorySDS\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"rowInventoryId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rowinventoryid\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"colId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Colid\"\n    },\n    \"colInventoryId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Colinventoryid\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"rowId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rowid\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"rsnNumber\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rsnnumber\"\n    },\n    \"totalCasSum\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Totalcassum\"\n    },\n    \"sdsInfo\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/UnpackedInventorySDS\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"casInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/UnpackedCasInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Casinfo\"\n    }\n  },\n  \"title\": \"UnpackedInventory\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>row_inventory_id</code>                 (<code>str | None</code>)             </li> <li> <code>column_id</code>                 (<code>str | None</code>)             </li> <li> <code>column_inventory_id</code>                 (<code>str | None</code>)             </li> <li> <code>parent_id</code>                 (<code>str | None</code>)             </li> <li> <code>row_id</code>                 (<code>str | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>rsn_number</code>                 (<code>str | None</code>)             </li> <li> <code>total_cas_sum</code>                 (<code>float | None</code>)             </li> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>sds_info</code>                 (<code>UnpackedInventorySDS | None</code>)             </li> <li> <code>cas_info</code>                 (<code>list[UnpackedCasInfo] | None</code>)             </li> </ul>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventory.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventory.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventory.rsn_number","title":"rsn_number","text":"<pre><code>rsn_number: str | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventory.total_cas_sum","title":"total_cas_sum","text":"<pre><code>total_cas_sum: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventory.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventory.sds_info","title":"sds_info","text":"<pre><code>sds_info: UnpackedInventorySDS | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedInventory.cas_info","title":"cas_info","text":"<pre><code>cas_info: list[UnpackedCasInfo] | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedProductDesign","title":"UnpackedProductDesign","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"CasLevelSubstance\": {\n      \"properties\": {\n        \"casPrimaryKeyId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Casprimarykeyid\"\n        },\n        \"casID\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Casid\"\n        },\n        \"amount\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Amount\"\n        }\n      },\n      \"title\": \"CasLevelSubstance\",\n      \"type\": \"object\"\n    },\n    \"NormalizedCAS\": {\n      \"properties\": {\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"smiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Smiles\"\n        }\n      },\n      \"title\": \"NormalizedCAS\",\n      \"type\": \"object\"\n    },\n    \"UnpackedCasInfo\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        },\n        \"casAvg\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Casavg\"\n        },\n        \"casSum\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassum\"\n        }\n      },\n      \"title\": \"UnpackedCasInfo\",\n      \"type\": \"object\"\n    },\n    \"UnpackedInventory\": {\n      \"properties\": {\n        \"rowInventoryId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowinventoryid\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"colId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Colid\"\n        },\n        \"colInventoryId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Colinventoryid\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"rsnNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rsnnumber\"\n        },\n        \"totalCasSum\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Totalcassum\"\n        },\n        \"sdsInfo\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnpackedInventorySDS\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/UnpackedCasInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Casinfo\"\n        }\n      },\n      \"title\": \"UnpackedInventory\",\n      \"type\": \"object\"\n    },\n    \"UnpackedInventoryListItem\": {\n      \"properties\": {\n        \"rowInventoryId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowinventoryid\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"colId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Colid\"\n        },\n        \"colInventoryId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Colinventoryid\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"UnpackedInventoryListItem\",\n      \"type\": \"object\"\n    },\n    \"UnpackedInventorySDS\": {\n      \"properties\": {\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Class\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        }\n      },\n      \"title\": \"UnpackedInventorySDS\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"Inventories\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/UnpackedInventory\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventories\"\n    },\n    \"inventoryList\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/UnpackedInventoryListItem\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventorylist\"\n    },\n    \"inventorySDSList\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/UnpackedInventorySDS\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventorysdslist\"\n    },\n    \"casLevelSubstances\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/CasLevelSubstance\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Caslevelsubstances\"\n    },\n    \"normalizedCasList\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/NormalizedCAS\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Normalizedcaslist\"\n    }\n  },\n  \"title\": \"UnpackedProductDesign\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>inventories</code>                 (<code>list[UnpackedInventory] | None</code>)             </li> <li> <code>inventory_list</code>                 (<code>list[UnpackedInventoryListItem] | None</code>)             </li> <li> <code>inventory_sds_list</code>                 (<code>list[UnpackedInventorySDS] | None</code>)             </li> <li> <code>cas_level_substances</code>                 (<code>list[CasLevelSubstance] | None</code>)             </li> <li> <code>normalized_cas_list</code>                 (<code>list[NormalizedCAS] | None</code>)             </li> </ul>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedProductDesign.inventories","title":"inventories","text":"<pre><code>inventories: list[UnpackedInventory] | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedProductDesign.inventory_list","title":"inventory_list","text":"<pre><code>inventory_list: list[UnpackedInventoryListItem] | None = (\n    None\n)\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedProductDesign.inventory_sds_list","title":"inventory_sds_list","text":"<pre><code>inventory_sds_list: list[UnpackedInventorySDS] | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedProductDesign.cas_level_substances","title":"cas_level_substances","text":"<pre><code>cas_level_substances: list[CasLevelSubstance] | None = None\n</code></pre>"},{"location":"resources/product_design/#albert.resources.product_design.UnpackedProductDesign.normalized_cas_list","title":"normalized_cas_list","text":"<pre><code>normalized_cas_list: list[NormalizedCAS] | None = None\n</code></pre>"},{"location":"resources/projects/","title":"Projects","text":""},{"location":"resources/projects/#albert.resources.projects","title":"albert.resources.projects","text":""},{"location":"resources/projects/#albert.resources.projects.ProjectClass","title":"ProjectClass","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The ACL Class of a project</p> <p>Attributes:</p> Name Type Description <code>SHARED</code> <code>PUBLIC</code> <code>CONFIDENTIAL</code> <code>PRIVATE</code>"},{"location":"resources/projects/#albert.resources.projects.ProjectClass.SHARED","title":"SHARED","text":"<pre><code>SHARED = 'shared'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.ProjectClass.PUBLIC","title":"PUBLIC","text":"<pre><code>PUBLIC = 'public'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.ProjectClass.CONFIDENTIAL","title":"CONFIDENTIAL","text":"<pre><code>CONFIDENTIAL = 'confidential'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.ProjectClass.PRIVATE","title":"PRIVATE","text":"<pre><code>PRIVATE = 'private'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.State","title":"State","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The current state of a project</p> <p>Attributes:</p> Name Type Description <code>NOT_STARTED</code> <code>ACTIVE</code> <code>CLOSED_SUCCESS</code> <code>CLOSED_ARCHIVED</code>"},{"location":"resources/projects/#albert.resources.projects.State.NOT_STARTED","title":"NOT_STARTED","text":"<pre><code>NOT_STARTED = 'Not Started'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.State.ACTIVE","title":"ACTIVE","text":"<pre><code>ACTIVE = 'Active'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.State.CLOSED_SUCCESS","title":"CLOSED_SUCCESS","text":"<pre><code>CLOSED_SUCCESS = 'Closed - Success'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.State.CLOSED_ARCHIVED","title":"CLOSED_ARCHIVED","text":"<pre><code>CLOSED_ARCHIVED = 'Closed - Archived'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.TaskConfig","title":"TaskConfig","text":"<p>               Bases: <code>BaseModel</code></p> <p>The task configuration for a project</p> Show JSON schema: <pre><code>{\n  \"description\": \"The task configuration for a project\",\n  \"properties\": {\n    \"datatemplateId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datatemplateid\"\n    },\n    \"workflowId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Workflowid\"\n    },\n    \"defaultTaskName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Defaulttaskname\"\n    },\n    \"target\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Target\"\n    },\n    \"hidden\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": false,\n      \"title\": \"Hidden\"\n    }\n  },\n  \"title\": \"TaskConfig\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>datatemplateId</code>                 (<code>str | None</code>)             </li> <li> <code>workflowId</code>                 (<code>str | None</code>)             </li> <li> <code>defaultTaskName</code>                 (<code>str | None</code>)             </li> <li> <code>target</code>                 (<code>str | None</code>)             </li> <li> <code>hidden</code>                 (<code>bool | None</code>)             </li> </ul>"},{"location":"resources/projects/#albert.resources.projects.TaskConfig.datatemplateId","title":"datatemplateId","text":"<pre><code>datatemplateId: str | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.TaskConfig.workflowId","title":"workflowId","text":"<pre><code>workflowId: str | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.TaskConfig.defaultTaskName","title":"defaultTaskName","text":"<pre><code>defaultTaskName: str | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.TaskConfig.target","title":"target","text":"<pre><code>target: str | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.TaskConfig.hidden","title":"hidden","text":"<pre><code>hidden: bool | None = False\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.GridDefault","title":"GridDefault","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The default grid for a project</p> <p>Attributes:</p> Name Type Description <code>PD</code> <code>WKS</code>"},{"location":"resources/projects/#albert.resources.projects.GridDefault.PD","title":"PD","text":"<pre><code>PD = 'PD'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.GridDefault.WKS","title":"WKS","text":"<pre><code>WKS = 'WKS'\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project","title":"Project","text":"<p>               Bases: <code>BaseResource</code></p> <p>A project in Albert.</p> <p>Attributes:</p> Name Type Description <code>description</code> <code>str</code> <p>The description of the project. Used as the name of the project as well.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the project. Set when the project is retrieved from Albert.</p> <code>locations</code> <code>list[Location] | None</code> <p>The locations associated with the project. Optional.</p> <code>project_class</code> <code>ProjectClass</code> <p>The class of the project. Defaults to PRIVATE.</p> <code>metadata</code> <code>dict[str, str | list[EntityLink] | EntityLink] | None</code> <p>The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.</p> <code>prefix</code> <code>str | None</code> <p>The prefix of the project. Optional.</p> <code>acl</code> <code>list[ACL] | None</code> <p>The ACL of the project. Optional.</p> <code>task_config</code> <code>list[TaskConfig] | None</code> <p>The task configuration of the project. Optional.</p> <code>grid</code> <code>GridDefault | None</code> <p>The default grid of the project. Optional.</p> <code>state</code> <code>State | None</code> <p>The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.</p> <code>application_engineering_inventory_ids</code> <code>list[str] | None</code> <p>Inventory Ids to be added as application engineering. Optional.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Status\"\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"description\": {\n      \"maxLength\": 2000,\n      \"minLength\": 1,\n      \"title\": \"Description\",\n      \"type\": \"string\"\n    },\n    \"Locations\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Location\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 20,\n          \"minItems\": 1,\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Locations\"\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/ProjectClass\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": \"private\"\n    },\n    \"prefix\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Prefix\"\n    },\n    \"appEngg\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Inventory Ids to be added as application engineering\",\n      \"title\": \"Appengg\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"ACL\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Acl\"\n    },\n    \"old_api_params\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Old Api Params\"\n    },\n    \"task_config\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/TaskConfig\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Task Config\"\n    },\n    \"grid\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/GridDefault\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    },\n    \"state\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/State\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"required\": [\n    \"description\"\n  ],\n  \"title\": \"Project\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>description</code>                 (<code>str</code>)             </li> <li> <code>locations</code>                 (<code>list[SerializeAsEntityLink[Location]] | None</code>)             </li> <li> <code>project_class</code>                 (<code>ProjectClass | None</code>)             </li> <li> <code>prefix</code>                 (<code>str | None</code>)             </li> <li> <code>application_engineering_inventory_ids</code>                 (<code>list[str] | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>acl</code>                 (<code>list[ACL] | None</code>)             </li> <li> <code>old_api_params</code>                 (<code>dict | None</code>)             </li> <li> <code>task_config</code>                 (<code>list[TaskConfig] | None</code>)             </li> <li> <code>grid</code>                 (<code>GridDefault | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem] | None</code>)             </li> <li> <code>status</code>                 (<code>str | None</code>)             </li> <li> <code>state</code>                 (<code>State | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>validate_status</code>                 \u2192                   <code>status</code> </li> </ul>"},{"location":"resources/projects/#albert.resources.projects.Project.description","title":"description","text":"<pre><code>description: str\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.locations","title":"locations","text":"<pre><code>locations: list[SerializeAsEntityLink[Location]] | None = (\n    None\n)\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.project_class","title":"project_class","text":"<pre><code>project_class: ProjectClass | None = PRIVATE\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.prefix","title":"prefix","text":"<pre><code>prefix: str | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.application_engineering_inventory_ids","title":"application_engineering_inventory_ids","text":"<pre><code>application_engineering_inventory_ids: list[str] | None = (\n    None\n)\n</code></pre> <p>Inventory Ids to be added as application engineering</p>"},{"location":"resources/projects/#albert.resources.projects.Project.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.acl","title":"acl","text":"<pre><code>acl: list[ACL] | None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.old_api_params","title":"old_api_params","text":"<pre><code>old_api_params: dict | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.task_config","title":"task_config","text":"<pre><code>task_config: list[TaskConfig] | None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.grid","title":"grid","text":"<pre><code>grid: GridDefault | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem] | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.status","title":"status","text":"<pre><code>status: str | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.state","title":"state","text":"<pre><code>state: State | None = None\n</code></pre>"},{"location":"resources/projects/#albert.resources.projects.Project.validate_status","title":"validate_status","text":"<pre><code>validate_status(value)\n</code></pre> <p>Somehow, some statuses are capitalized in the API response. This ensures they are always lowercase.</p> Source code in <code>src/albert/resources/projects.py</code> <pre><code>@field_validator(\"status\", mode=\"before\")\ndef validate_status(cls, value):\n    \"\"\"Somehow, some statuses are capitalized in the API response. This ensures they are always lowercase.\"\"\"\n    if isinstance(value, str):\n        return value.lower()\n    return value\n</code></pre>"},{"location":"resources/property_data/","title":"Property Data","text":""},{"location":"resources/property_data/#albert.resources.property_data","title":"albert.resources.property_data","text":""},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataStatus","title":"PropertyDataStatus","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The status of a resource</p> <p>Attributes:</p> Name Type Description <code>SUCCESS</code> <code>FAILURE</code>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataStatus.SUCCESS","title":"SUCCESS","text":"<pre><code>SUCCESS = 'Success'\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataStatus.FAILURE","title":"FAILURE","text":"<pre><code>FAILURE = 'Failed'\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.DataEntity","title":"DataEntity","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>TASK</code> <code>WORKFLOW</code> <code>INVENTORY</code>"},{"location":"resources/property_data/#albert.resources.property_data.DataEntity.TASK","title":"TASK","text":"<pre><code>TASK = 'task'\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.DataEntity.WORKFLOW","title":"WORKFLOW","text":"<pre><code>WORKFLOW = 'workflow'\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.DataEntity.INVENTORY","title":"INVENTORY","text":"<pre><code>INVENTORY = 'inventory'\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyData","title":"PropertyData","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    }\n  },\n  \"title\": \"PropertyData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>PropertyDataId | None</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyData.id","title":"id","text":"<pre><code>id: PropertyDataId | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyData.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue","title":"PropertyValue","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"PropertyData\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"PropertyData\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"sequence\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sequence\"\n    },\n    \"calculation\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Calculation\"\n    },\n    \"valueNumeric\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Valuenumeric\"\n    },\n    \"valueString\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Valuestring\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"Unit\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Unit\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        }\n      ],\n      \"title\": \"Unit\"\n    },\n    \"PropertyData\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/PropertyData\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"dataColumnUniqueId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datacolumnuniqueid\"\n    },\n    \"hidden\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": false,\n      \"title\": \"Hidden\"\n    }\n  },\n  \"title\": \"PropertyValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>sequence</code>                 (<code>str | None</code>)             </li> <li> <code>calculation</code>                 (<code>str | None</code>)             </li> <li> <code>numeric_value</code>                 (<code>float | None</code>)             </li> <li> <code>string_value</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>SerializeAsEntityLink[Unit] | dict</code>)             </li> <li> <code>property_data</code>                 (<code>PropertyData | None</code>)             </li> <li> <code>data_column_unique_id</code>                 (<code>str | None</code>)             </li> <li> <code>hidden</code>                 (<code>bool | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.sequence","title":"sequence","text":"<pre><code>sequence: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.calculation","title":"calculation","text":"<pre><code>calculation: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.numeric_value","title":"numeric_value","text":"<pre><code>numeric_value: float | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.string_value","title":"string_value","text":"<pre><code>string_value: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.unit","title":"unit","text":"<pre><code>unit: SerializeAsEntityLink[Unit] | dict\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.property_data","title":"property_data","text":"<pre><code>property_data: PropertyData | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.data_column_unique_id","title":"data_column_unique_id","text":"<pre><code>data_column_unique_id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyValue.hidden","title":"hidden","text":"<pre><code>hidden: bool | None = False\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.Trial","title":"Trial","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"PropertyData\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"PropertyData\",\n      \"type\": \"object\"\n    },\n    \"PropertyValue\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"valueNumeric\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuenumeric\"\n        },\n        \"valueString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuestring\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            }\n          ],\n          \"title\": \"Unit\"\n        },\n        \"PropertyData\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PropertyData\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"PropertyValue\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"trialNo\": {\n      \"title\": \"Trialno\",\n      \"type\": \"integer\"\n    },\n    \"visibleTrialNo\": {\n      \"default\": 1,\n      \"title\": \"Visibletrialno\",\n      \"type\": \"integer\"\n    },\n    \"void\": {\n      \"default\": false,\n      \"title\": \"Void\",\n      \"type\": \"boolean\"\n    },\n    \"DataColumns\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/PropertyValue\"\n      },\n      \"title\": \"Datacolumns\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"trialNo\"\n  ],\n  \"title\": \"Trial\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>trial_number</code>                 (<code>int</code>)             </li> <li> <code>visible_trial_number</code>                 (<code>int</code>)             </li> <li> <code>void</code>                 (<code>bool</code>)             </li> <li> <code>data_columns</code>                 (<code>list[PropertyValue]</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.Trial.trial_number","title":"trial_number","text":"<pre><code>trial_number: int\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.Trial.visible_trial_number","title":"visible_trial_number","text":"<pre><code>visible_trial_number: int = 1\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.Trial.void","title":"void","text":"<pre><code>void: bool = False\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.Trial.data_columns","title":"data_columns","text":"<pre><code>data_columns: list[PropertyValue]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.DataInterval","title":"DataInterval","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"PropertyData\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"PropertyData\",\n      \"type\": \"object\"\n    },\n    \"PropertyValue\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"valueNumeric\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuenumeric\"\n        },\n        \"valueString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuestring\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            }\n          ],\n          \"title\": \"Unit\"\n        },\n        \"PropertyData\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PropertyData\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"PropertyValue\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Trial\": {\n      \"properties\": {\n        \"trialNo\": {\n          \"title\": \"Trialno\",\n          \"type\": \"integer\"\n        },\n        \"visibleTrialNo\": {\n          \"default\": 1,\n          \"title\": \"Visibletrialno\",\n          \"type\": \"integer\"\n        },\n        \"void\": {\n          \"default\": false,\n          \"title\": \"Void\",\n          \"type\": \"boolean\"\n        },\n        \"DataColumns\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/PropertyValue\"\n          },\n          \"title\": \"Datacolumns\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"trialNo\"\n      ],\n      \"title\": \"Trial\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"intervalCombination\": {\n      \"title\": \"Intervalcombination\",\n      \"type\": \"string\"\n    },\n    \"void\": {\n      \"default\": false,\n      \"title\": \"Void\",\n      \"type\": \"boolean\"\n    },\n    \"Trials\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/Trial\"\n      },\n      \"title\": \"Trials\",\n      \"type\": \"array\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    }\n  },\n  \"required\": [\n    \"intervalCombination\"\n  ],\n  \"title\": \"DataInterval\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>interval_combination</code>                 (<code>str</code>)             </li> <li> <code>void</code>                 (<code>bool</code>)             </li> <li> <code>trials</code>                 (<code>list[Trial]</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.DataInterval.interval_combination","title":"interval_combination","text":"<pre><code>interval_combination: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.DataInterval.void","title":"void","text":"<pre><code>void: bool = False\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.DataInterval.trials","title":"trials","text":"<pre><code>trials: list[Trial]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.DataInterval.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskData","title":"TaskData","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataColumn\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"defalt\": {\n          \"default\": false,\n          \"title\": \"Defalt\",\n          \"type\": \"boolean\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"albertId\": {\n          \"default\": null,\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataColumn\",\n      \"type\": \"object\"\n    },\n    \"DataColumnValue\": {\n      \"properties\": {\n        \"data_column\": {\n          \"$ref\": \"#/$defs/DataColumn\",\n          \"default\": null\n        },\n        \"id\": {\n          \"default\": null,\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"hidden\": {\n          \"default\": false,\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        }\n      },\n      \"title\": \"DataColumnValue\",\n      \"type\": \"object\"\n    },\n    \"DataInterval\": {\n      \"properties\": {\n        \"intervalCombination\": {\n          \"title\": \"Intervalcombination\",\n          \"type\": \"string\"\n        },\n        \"void\": {\n          \"default\": false,\n          \"title\": \"Void\",\n          \"type\": \"boolean\"\n        },\n        \"Trials\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Trial\"\n          },\n          \"title\": \"Trials\",\n          \"type\": \"array\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"intervalCombination\"\n      ],\n      \"title\": \"DataInterval\",\n      \"type\": \"object\"\n    },\n    \"DataTemplate\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"security_class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"DataColumns\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DataColumnValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumns\"\n        },\n        \"Parameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parameters\"\n        },\n        \"DeletedParameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Deletedparameters\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataTemplate\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"Interval\": {\n      \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"Interval\",\n      \"type\": \"object\"\n    },\n    \"IntervalCombination\": {\n      \"description\": \"A class representing the interval combinations of on a workflow.\\nThis is returned by the workflow endpoint when at least one parameter\\nin the workflow has been intervalized.\\n\\nInterval Combinations can be single intervalized parameters or cartesian prodcuts of\\ntwo intervalized parameters.\\n\\nAttributes\\n----------\\ninterval_id: IntervalId | None\\n    forign key reference to the interval id\\n    this combination is associated with\\n    It will have the form ROW# or ROW#XROW# depending on\\n    if it is a single interval or a product of two intervals\\ninterval_params: str | None\\n    The parameters participating in the interval.\\ninterval_string: str | None\\n    The string representation of the interval combination\\n    This will have the form \\\"[Parameter Name]: [Parameter Value] [Parameter Unit]\\\"\\n    for each parameter in the interval combination\",\n      \"properties\": {\n        \"interval\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Interval\"\n        },\n        \"intervalParams\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalparams\"\n        },\n        \"intervalString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalstring\"\n        }\n      },\n      \"title\": \"IntervalCombination\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"PGType\": {\n      \"description\": \"The type of a parameter group\",\n      \"enum\": [\n        \"general\",\n        \"batch\",\n        \"property\"\n      ],\n      \"title\": \"PGType\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterGroup\": {\n      \"description\": \"Use 'Standards' key in metadata to store standards\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PGType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"class\": {\n          \"$ref\": \"#/$defs/SecurityClass\",\n          \"default\": \"restricted\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"Metadata\": {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"title\": \"Metadata\",\n          \"type\": \"object\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"documents\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Documents\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"ParameterGroup\",\n      \"type\": \"object\"\n    },\n    \"ParameterGroupSetpoints\": {\n      \"description\": \"A class that represents the setpoints on a parameter group.\\n\\n\\nAttributes\\n----------\\nparameter_group : ParameterGroup\\n    The parameter group to set the setpoints on. Provide either a parameter_group or a paramerter_group_id\\nparameter_group_id : ParameterGroupId\\n    The id of the parameter group.  Provide either a parameter_group or a paramerter_group_id\\nparameter_group_name : str\\n    The name of the parameter group. This is a read-only field.\\nparameter_setpoints : list[ParameterSetpoint]\\n    The setpoints to apply to the parameter group.\",\n      \"properties\": {\n        \"parameter_group\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterGroup\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterSetpoint\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"ParameterGroupSetpoints\",\n      \"type\": \"object\"\n    },\n    \"ParameterSetpoint\": {\n      \"description\": \"A Pydantic class representing the setpoint or intervals of a parameter to use.\\nFor a single value, provide the value and unit. For multiple values, provide intervals.\\na parameter or parameter_id must be provided.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The parameter to set the setpoint on. Provide either a parameter or a parameter_id.\\nparameter_id : ParameterId\\n    The id of the parameter. Provide either a parameter or a parameter_id.\\nvalue : str | EntityLink\\n    The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.\\nunit : Unit\\n    The unit of the setpoint.\\nintervals : list[Interval]\\n    The intervals of the setpoint. Either ether intervals or value + unit\\ncategory : ParameterCategory\\n    The category of the parameter. Special for InventoryItem (then use name to specify \\\"Equipment\\\", \\\"Consumeable\\\", etc), normal for all others\\nshort_name : str\\n    The short / display name of the parameter. Required if value is a dictionary.\\nrow_id : RowId\\n    The id of the parameter with respect to the interval row id.\",\n      \"properties\": {\n        \"parameter\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Parameter\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Intervals\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Interval\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervals\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"ParameterSetpoint\",\n      \"type\": \"object\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"PropertyData\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"PropertyData\",\n      \"type\": \"object\"\n    },\n    \"PropertyValue\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"valueNumeric\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuenumeric\"\n        },\n        \"valueString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuestring\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            }\n          ],\n          \"title\": \"Unit\"\n        },\n        \"PropertyData\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PropertyData\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"PropertyValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Trial\": {\n      \"properties\": {\n        \"trialNo\": {\n          \"title\": \"Trialno\",\n          \"type\": \"integer\"\n        },\n        \"visibleTrialNo\": {\n          \"default\": 1,\n          \"title\": \"Visibletrialno\",\n          \"type\": \"integer\"\n        },\n        \"void\": {\n          \"default\": false,\n          \"title\": \"Void\",\n          \"type\": \"boolean\"\n        },\n        \"DataColumns\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/PropertyValue\"\n          },\n          \"title\": \"Datacolumns\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"trialNo\"\n      ],\n      \"title\": \"Trial\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    },\n    \"Workflow\": {\n      \"description\": \"A Pydantic Class representing a workflow in Albert.\\n\\nWorkflows are combinations of Data Templates and Parameter groups and their associated setpoints.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the workflow.\\nparameter_group_setpoints : list[ParameterGroupSetpoints]\\n    The setpoints to apply to the parameter groups in the workflow.\\nid : str | None\\n    The AlbertID of the workflow. This is set when a workflow is retrived from the platform.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"ParameterGroups\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterGroupSetpoints\"\n          },\n          \"title\": \"Parametergroups\",\n          \"type\": \"array\"\n        },\n        \"IntervalCombinations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalCombination\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalcombinations\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"ParameterGroups\"\n      ],\n      \"title\": \"Workflow\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"qcTask\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Qctask\"\n    },\n    \"InitialWorkflow\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Workflow\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        }\n      ],\n      \"title\": \"Initialworkflow\"\n    },\n    \"FinalWorkflow\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Workflow\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        }\n      ],\n      \"title\": \"Finalworkflow\"\n    },\n    \"Datatemplate\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/DataTemplate\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        }\n      ],\n      \"title\": \"Datatemplate\"\n    },\n    \"Data\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/DataInterval\"\n      },\n      \"title\": \"Data\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"name\",\n    \"InitialWorkflow\",\n    \"FinalWorkflow\",\n    \"Datatemplate\"\n  ],\n  \"title\": \"TaskData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>task_id</code>                 (<code>TaskId</code>)             </li> <li> <code>task_name</code>                 (<code>str</code>)             </li> <li> <code>qc_task</code>                 (<code>bool | None</code>)             </li> <li> <code>initial_workflow</code>                 (<code>SerializeAsEntityLink[Workflow]</code>)             </li> <li> <code>finial_workflow</code>                 (<code>SerializeAsEntityLink[Workflow]</code>)             </li> <li> <code>data_template</code>                 (<code>SerializeAsEntityLink[DataTemplate]</code>)             </li> <li> <code>data</code>                 (<code>list[DataInterval]</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.TaskData.task_id","title":"task_id","text":"<pre><code>task_id: TaskId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskData.task_name","title":"task_name","text":"<pre><code>task_name: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskData.qc_task","title":"qc_task","text":"<pre><code>qc_task: bool | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskData.initial_workflow","title":"initial_workflow","text":"<pre><code>initial_workflow: SerializeAsEntityLink[Workflow]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskData.finial_workflow","title":"finial_workflow","text":"<pre><code>finial_workflow: SerializeAsEntityLink[Workflow]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskData.data_template","title":"data_template","text":"<pre><code>data_template: SerializeAsEntityLink[DataTemplate]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskData.data","title":"data","text":"<pre><code>data: list[DataInterval]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CustomInventoryDataColumn","title":"CustomInventoryDataColumn","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"PropertyData\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"PropertyData\",\n      \"type\": \"object\"\n    },\n    \"PropertyValue\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"valueNumeric\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuenumeric\"\n        },\n        \"valueString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuestring\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            }\n          ],\n          \"title\": \"Unit\"\n        },\n        \"PropertyData\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PropertyData\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"PropertyValue\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"PropertyData\": {\n      \"$ref\": \"#/$defs/PropertyValue\"\n    },\n    \"Unit\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Unit\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Unit\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"name\",\n    \"PropertyData\"\n  ],\n  \"title\": \"CustomInventoryDataColumn\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data_column_id</code>                 (<code>DataColumnId</code>)             </li> <li> <code>data_column_name</code>                 (<code>str</code>)             </li> <li> <code>property_data</code>                 (<code>PropertyValue</code>)             </li> <li> <code>unit</code>                 (<code>SerializeAsEntityLink[Unit] | None | dict</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.CustomInventoryDataColumn.data_column_id","title":"data_column_id","text":"<pre><code>data_column_id: DataColumnId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CustomInventoryDataColumn.data_column_name","title":"data_column_name","text":"<pre><code>data_column_name: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CustomInventoryDataColumn.property_data","title":"property_data","text":"<pre><code>property_data: PropertyValue\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CustomInventoryDataColumn.unit","title":"unit","text":"<pre><code>unit: SerializeAsEntityLink[Unit] | None | dict\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CustomData","title":"CustomData","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"CustomInventoryDataColumn\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"PropertyData\": {\n          \"$ref\": \"#/$defs/PropertyValue\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Unit\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"PropertyData\"\n      ],\n      \"title\": \"CustomInventoryDataColumn\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Lot\": {\n      \"description\": \"A lot in Albert.\\n\\nAttributes\\n----------\\nid : LotId | None\\n    The Albert ID of the lot. Set when the lot is retrieved from Albert.\\ninventory_id : InventoryId\\n    The Albert ID of the inventory item associated with the lot.\\ntask_id : str | None\\n    The Albert ID of the task associated with the creation of lot. Optional.\\nnotes : str | None\\n    The notes associated with the lot. Optional.\\nexpiration_date : str | None\\n    The expiration date of the lot. YYYY-MM-DD format. Optional.\\nmanufacturer_lot_number : str | None\\n    The manufacturer lot number of the lot. Optional.\\nstorage_location : StorageLocation | None\\n    The storage location of the lot. Optional.\\npack_size : str | None\\n    The pack size of the lot. Optional. Used to calculate the cost per unit.\\ninitial_quantity : NonNegativeFloat | None\\n    The initial quantity of the lot. Optional.\\ncost : NonNegativeFloat | None\\n    The cost of the lot. Optional.\\ninventory_on_hand : NonNegativeFloat\\n    The inventory on hand of the lot.\\nowner : list[User] | None\\n    The owners of the lot. Optional.\\nlot_number : str | None\\n    The lot number of the lot. Optional.\\nexternal_barcode_id : str | None\\n    The external barcode ID of the lot. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the lot. Optional. Metadata allowed values can be found using the Custom Fields API.\\nhas_notes : bool\\n    Whether the lot has notes. Read-only.\\nhas_attachments : bool\\n    Whether the lot has attachments. Read-only.\\nbarcode_id : str\\n    The barcode ID of the lot. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/LotStatus\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"parentId\": {\n          \"title\": \"Parentid\",\n          \"type\": \"string\"\n        },\n        \"taskId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskid\"\n        },\n        \"expirationDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Expirationdate\"\n        },\n        \"manufacturerLotNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Manufacturerlotnumber\"\n        },\n        \"StorageLocation\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/StorageLocation\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Storagelocation\"\n        },\n        \"packSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Packsize\"\n        },\n        \"initialQuantity\": {\n          \"anyOf\": [\n            {\n              \"minimum\": 0,\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Initialquantity\"\n        },\n        \"cost\": {\n          \"anyOf\": [\n            {\n              \"minimum\": 0,\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cost\"\n        },\n        \"inventoryOnHand\": {\n          \"title\": \"Inventoryonhand\",\n          \"type\": \"number\"\n        },\n        \"Owner\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Owner\"\n        },\n        \"lotNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotnumber\"\n        },\n        \"externalBarcodeId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Externalbarcodeid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Notes\"\n        },\n        \"hasNotes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Hasnotes\"\n        },\n        \"hasAttachments\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Hasattachments\"\n        },\n        \"parentName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentname\"\n        },\n        \"parentUnit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentunit\"\n        },\n        \"parentCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"barcodeId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Barcodeid\"\n        }\n      },\n      \"required\": [\n        \"parentId\",\n        \"inventoryOnHand\"\n      ],\n      \"title\": \"Lot\",\n      \"type\": \"object\"\n    },\n    \"LotStatus\": {\n      \"description\": \"The status of a lot\",\n      \"enum\": [\n        \"active\",\n        \"inactive\",\n        \"quarantined\"\n      ],\n      \"title\": \"LotStatus\",\n      \"type\": \"string\"\n    },\n    \"PropertyData\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"PropertyData\",\n      \"type\": \"object\"\n    },\n    \"PropertyValue\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"valueNumeric\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuenumeric\"\n        },\n        \"valueString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuestring\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            }\n          ],\n          \"title\": \"Unit\"\n        },\n        \"PropertyData\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PropertyData\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"PropertyValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"StorageLocation\": {\n      \"description\": \"A storage location entity. For example, a specific flammables cabinet or a storage room.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the storage location.\\nid : str | None\\n    The Albert ID of the storage location. Set when the storage location is retrieved from Albert.\\nlocation : Location\\n    The location entity link of the storage location.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"maxLength\": 255,\n          \"minLength\": 2,\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            }\n          ],\n          \"title\": \"Location\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"Location\"\n      ],\n      \"title\": \"StorageLocation\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"Lot\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Lot\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Lot\"\n    },\n    \"DataColumn\": {\n      \"$ref\": \"#/$defs/CustomInventoryDataColumn\"\n    }\n  },\n  \"required\": [\n    \"DataColumn\"\n  ],\n  \"title\": \"CustomData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>lot</code>                 (<code>SerializeAsEntityLink[Lot] | None | dict</code>)             </li> <li> <code>data_column</code>                 (<code>CustomInventoryDataColumn</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.CustomData.lot","title":"lot","text":"<pre><code>lot: SerializeAsEntityLink[Lot] | None | dict\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CustomData.data_column","title":"data_column","text":"<pre><code>data_column: CustomInventoryDataColumn\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryInformation","title":"InventoryInformation","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"lotId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lotid\"\n    }\n  },\n  \"title\": \"InventoryInformation\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>inventory_id</code>                 (<code>str | None</code>)             </li> <li> <code>lot_id</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryInformation.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryInformation.lot_id","title":"lot_id","text":"<pre><code>lot_id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CheckPropertyData","title":"CheckPropertyData","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"blockId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Blockid\"\n    },\n    \"interval\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Interval\"\n    },\n    \"inventoryId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventoryid\"\n    },\n    \"lotId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lotid\"\n    },\n    \"dataExist\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Dataexist\"\n    },\n    \"message\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Message\"\n    }\n  },\n  \"title\": \"CheckPropertyData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>block_id</code>                 (<code>str | None</code>)             </li> <li> <code>interval_id</code>                 (<code>str | None</code>)             </li> <li> <code>inventory_id</code>                 (<code>str | None</code>)             </li> <li> <code>lot_id</code>                 (<code>str | None</code>)             </li> <li> <code>data_exists</code>                 (<code>bool | None</code>)             </li> <li> <code>message</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.CheckPropertyData.block_id","title":"block_id","text":"<pre><code>block_id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CheckPropertyData.interval_id","title":"interval_id","text":"<pre><code>interval_id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CheckPropertyData.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CheckPropertyData.lot_id","title":"lot_id","text":"<pre><code>lot_id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CheckPropertyData.data_exists","title":"data_exists","text":"<pre><code>data_exists: bool | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.CheckPropertyData.message","title":"message","text":"<pre><code>message: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyData","title":"InventoryPropertyData","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"CustomData\": {\n      \"properties\": {\n        \"Lot\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Lot\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Lot\"\n        },\n        \"DataColumn\": {\n          \"$ref\": \"#/$defs/CustomInventoryDataColumn\"\n        }\n      },\n      \"required\": [\n        \"DataColumn\"\n      ],\n      \"title\": \"CustomData\",\n      \"type\": \"object\"\n    },\n    \"CustomInventoryDataColumn\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"PropertyData\": {\n          \"$ref\": \"#/$defs/PropertyValue\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Unit\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"PropertyData\"\n      ],\n      \"title\": \"CustomInventoryDataColumn\",\n      \"type\": \"object\"\n    },\n    \"DataColumn\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"defalt\": {\n          \"default\": false,\n          \"title\": \"Defalt\",\n          \"type\": \"boolean\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"albertId\": {\n          \"default\": null,\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataColumn\",\n      \"type\": \"object\"\n    },\n    \"DataColumnValue\": {\n      \"properties\": {\n        \"data_column\": {\n          \"$ref\": \"#/$defs/DataColumn\",\n          \"default\": null\n        },\n        \"id\": {\n          \"default\": null,\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"hidden\": {\n          \"default\": false,\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        }\n      },\n      \"title\": \"DataColumnValue\",\n      \"type\": \"object\"\n    },\n    \"DataInterval\": {\n      \"properties\": {\n        \"intervalCombination\": {\n          \"title\": \"Intervalcombination\",\n          \"type\": \"string\"\n        },\n        \"void\": {\n          \"default\": false,\n          \"title\": \"Void\",\n          \"type\": \"boolean\"\n        },\n        \"Trials\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Trial\"\n          },\n          \"title\": \"Trials\",\n          \"type\": \"array\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"intervalCombination\"\n      ],\n      \"title\": \"DataInterval\",\n      \"type\": \"object\"\n    },\n    \"DataTemplate\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"security_class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"DataColumns\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DataColumnValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumns\"\n        },\n        \"Parameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parameters\"\n        },\n        \"DeletedParameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Deletedparameters\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataTemplate\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"Interval\": {\n      \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"Interval\",\n      \"type\": \"object\"\n    },\n    \"IntervalCombination\": {\n      \"description\": \"A class representing the interval combinations of on a workflow.\\nThis is returned by the workflow endpoint when at least one parameter\\nin the workflow has been intervalized.\\n\\nInterval Combinations can be single intervalized parameters or cartesian prodcuts of\\ntwo intervalized parameters.\\n\\nAttributes\\n----------\\ninterval_id: IntervalId | None\\n    forign key reference to the interval id\\n    this combination is associated with\\n    It will have the form ROW# or ROW#XROW# depending on\\n    if it is a single interval or a product of two intervals\\ninterval_params: str | None\\n    The parameters participating in the interval.\\ninterval_string: str | None\\n    The string representation of the interval combination\\n    This will have the form \\\"[Parameter Name]: [Parameter Value] [Parameter Unit]\\\"\\n    for each parameter in the interval combination\",\n      \"properties\": {\n        \"interval\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Interval\"\n        },\n        \"intervalParams\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalparams\"\n        },\n        \"intervalString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalstring\"\n        }\n      },\n      \"title\": \"IntervalCombination\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Lot\": {\n      \"description\": \"A lot in Albert.\\n\\nAttributes\\n----------\\nid : LotId | None\\n    The Albert ID of the lot. Set when the lot is retrieved from Albert.\\ninventory_id : InventoryId\\n    The Albert ID of the inventory item associated with the lot.\\ntask_id : str | None\\n    The Albert ID of the task associated with the creation of lot. Optional.\\nnotes : str | None\\n    The notes associated with the lot. Optional.\\nexpiration_date : str | None\\n    The expiration date of the lot. YYYY-MM-DD format. Optional.\\nmanufacturer_lot_number : str | None\\n    The manufacturer lot number of the lot. Optional.\\nstorage_location : StorageLocation | None\\n    The storage location of the lot. Optional.\\npack_size : str | None\\n    The pack size of the lot. Optional. Used to calculate the cost per unit.\\ninitial_quantity : NonNegativeFloat | None\\n    The initial quantity of the lot. Optional.\\ncost : NonNegativeFloat | None\\n    The cost of the lot. Optional.\\ninventory_on_hand : NonNegativeFloat\\n    The inventory on hand of the lot.\\nowner : list[User] | None\\n    The owners of the lot. Optional.\\nlot_number : str | None\\n    The lot number of the lot. Optional.\\nexternal_barcode_id : str | None\\n    The external barcode ID of the lot. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the lot. Optional. Metadata allowed values can be found using the Custom Fields API.\\nhas_notes : bool\\n    Whether the lot has notes. Read-only.\\nhas_attachments : bool\\n    Whether the lot has attachments. Read-only.\\nbarcode_id : str\\n    The barcode ID of the lot. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/LotStatus\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"parentId\": {\n          \"title\": \"Parentid\",\n          \"type\": \"string\"\n        },\n        \"taskId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskid\"\n        },\n        \"expirationDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Expirationdate\"\n        },\n        \"manufacturerLotNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Manufacturerlotnumber\"\n        },\n        \"StorageLocation\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/StorageLocation\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Storagelocation\"\n        },\n        \"packSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Packsize\"\n        },\n        \"initialQuantity\": {\n          \"anyOf\": [\n            {\n              \"minimum\": 0,\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Initialquantity\"\n        },\n        \"cost\": {\n          \"anyOf\": [\n            {\n              \"minimum\": 0,\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cost\"\n        },\n        \"inventoryOnHand\": {\n          \"title\": \"Inventoryonhand\",\n          \"type\": \"number\"\n        },\n        \"Owner\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Owner\"\n        },\n        \"lotNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotnumber\"\n        },\n        \"externalBarcodeId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Externalbarcodeid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Notes\"\n        },\n        \"hasNotes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Hasnotes\"\n        },\n        \"hasAttachments\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Hasattachments\"\n        },\n        \"parentName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentname\"\n        },\n        \"parentUnit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentunit\"\n        },\n        \"parentCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"barcodeId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Barcodeid\"\n        }\n      },\n      \"required\": [\n        \"parentId\",\n        \"inventoryOnHand\"\n      ],\n      \"title\": \"Lot\",\n      \"type\": \"object\"\n    },\n    \"LotStatus\": {\n      \"description\": \"The status of a lot\",\n      \"enum\": [\n        \"active\",\n        \"inactive\",\n        \"quarantined\"\n      ],\n      \"title\": \"LotStatus\",\n      \"type\": \"string\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"PGType\": {\n      \"description\": \"The type of a parameter group\",\n      \"enum\": [\n        \"general\",\n        \"batch\",\n        \"property\"\n      ],\n      \"title\": \"PGType\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterGroup\": {\n      \"description\": \"Use 'Standards' key in metadata to store standards\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PGType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"class\": {\n          \"$ref\": \"#/$defs/SecurityClass\",\n          \"default\": \"restricted\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"Metadata\": {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"title\": \"Metadata\",\n          \"type\": \"object\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"documents\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Documents\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"ParameterGroup\",\n      \"type\": \"object\"\n    },\n    \"ParameterGroupSetpoints\": {\n      \"description\": \"A class that represents the setpoints on a parameter group.\\n\\n\\nAttributes\\n----------\\nparameter_group : ParameterGroup\\n    The parameter group to set the setpoints on. Provide either a parameter_group or a paramerter_group_id\\nparameter_group_id : ParameterGroupId\\n    The id of the parameter group.  Provide either a parameter_group or a paramerter_group_id\\nparameter_group_name : str\\n    The name of the parameter group. This is a read-only field.\\nparameter_setpoints : list[ParameterSetpoint]\\n    The setpoints to apply to the parameter group.\",\n      \"properties\": {\n        \"parameter_group\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterGroup\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterSetpoint\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"ParameterGroupSetpoints\",\n      \"type\": \"object\"\n    },\n    \"ParameterSetpoint\": {\n      \"description\": \"A Pydantic class representing the setpoint or intervals of a parameter to use.\\nFor a single value, provide the value and unit. For multiple values, provide intervals.\\na parameter or parameter_id must be provided.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The parameter to set the setpoint on. Provide either a parameter or a parameter_id.\\nparameter_id : ParameterId\\n    The id of the parameter. Provide either a parameter or a parameter_id.\\nvalue : str | EntityLink\\n    The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.\\nunit : Unit\\n    The unit of the setpoint.\\nintervals : list[Interval]\\n    The intervals of the setpoint. Either ether intervals or value + unit\\ncategory : ParameterCategory\\n    The category of the parameter. Special for InventoryItem (then use name to specify \\\"Equipment\\\", \\\"Consumeable\\\", etc), normal for all others\\nshort_name : str\\n    The short / display name of the parameter. Required if value is a dictionary.\\nrow_id : RowId\\n    The id of the parameter with respect to the interval row id.\",\n      \"properties\": {\n        \"parameter\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Parameter\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Intervals\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Interval\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervals\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"ParameterSetpoint\",\n      \"type\": \"object\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"PropertyData\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"PropertyData\",\n      \"type\": \"object\"\n    },\n    \"PropertyValue\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"valueNumeric\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuenumeric\"\n        },\n        \"valueString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuestring\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            }\n          ],\n          \"title\": \"Unit\"\n        },\n        \"PropertyData\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PropertyData\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"PropertyValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"StorageLocation\": {\n      \"description\": \"A storage location entity. For example, a specific flammables cabinet or a storage room.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the storage location.\\nid : str | None\\n    The Albert ID of the storage location. Set when the storage location is retrieved from Albert.\\nlocation : Location\\n    The location entity link of the storage location.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"maxLength\": 255,\n          \"minLength\": 2,\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            }\n          ],\n          \"title\": \"Location\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"Location\"\n      ],\n      \"title\": \"StorageLocation\",\n      \"type\": \"object\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskData\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"qcTask\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Qctask\"\n        },\n        \"InitialWorkflow\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Workflow\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            }\n          ],\n          \"title\": \"Initialworkflow\"\n        },\n        \"FinalWorkflow\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Workflow\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            }\n          ],\n          \"title\": \"Finalworkflow\"\n        },\n        \"Datatemplate\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DataTemplate\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            }\n          ],\n          \"title\": \"Datatemplate\"\n        },\n        \"Data\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/DataInterval\"\n          },\n          \"title\": \"Data\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"InitialWorkflow\",\n        \"FinalWorkflow\",\n        \"Datatemplate\"\n      ],\n      \"title\": \"TaskData\",\n      \"type\": \"object\"\n    },\n    \"Trial\": {\n      \"properties\": {\n        \"trialNo\": {\n          \"title\": \"Trialno\",\n          \"type\": \"integer\"\n        },\n        \"visibleTrialNo\": {\n          \"default\": 1,\n          \"title\": \"Visibletrialno\",\n          \"type\": \"integer\"\n        },\n        \"void\": {\n          \"default\": false,\n          \"title\": \"Void\",\n          \"type\": \"boolean\"\n        },\n        \"DataColumns\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/PropertyValue\"\n          },\n          \"title\": \"Datacolumns\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"trialNo\"\n      ],\n      \"title\": \"Trial\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    },\n    \"Workflow\": {\n      \"description\": \"A Pydantic Class representing a workflow in Albert.\\n\\nWorkflows are combinations of Data Templates and Parameter groups and their associated setpoints.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the workflow.\\nparameter_group_setpoints : list[ParameterGroupSetpoints]\\n    The setpoints to apply to the parameter groups in the workflow.\\nid : str | None\\n    The AlbertID of the workflow. This is set when a workflow is retrived from the platform.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"ParameterGroups\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterGroupSetpoints\"\n          },\n          \"title\": \"Parametergroups\",\n          \"type\": \"array\"\n        },\n        \"IntervalCombinations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalCombination\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalcombinations\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"ParameterGroups\"\n      ],\n      \"title\": \"Workflow\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"inventoryId\": {\n      \"title\": \"Inventoryid\",\n      \"type\": \"string\"\n    },\n    \"inventoryName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventoryname\"\n    },\n    \"Task\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/TaskData\"\n      },\n      \"title\": \"Task\",\n      \"type\": \"array\"\n    },\n    \"NoTask\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/CustomData\"\n      },\n      \"title\": \"Notask\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"inventoryId\"\n  ],\n  \"title\": \"InventoryPropertyData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>inventory_id</code>                 (<code>str</code>)             </li> <li> <code>inventory_name</code>                 (<code>str | None</code>)             </li> <li> <code>task_property_data</code>                 (<code>list[TaskData]</code>)             </li> <li> <code>custom_property_data</code>                 (<code>list[CustomData]</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyData.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyData.inventory_name","title":"inventory_name","text":"<pre><code>inventory_name: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyData.task_property_data","title":"task_property_data","text":"<pre><code>task_property_data: list[TaskData]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyData.custom_property_data","title":"custom_property_data","text":"<pre><code>custom_property_data: list[CustomData]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData","title":"TaskPropertyData","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataColumn\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"defalt\": {\n          \"default\": false,\n          \"title\": \"Defalt\",\n          \"type\": \"boolean\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"albertId\": {\n          \"default\": null,\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataColumn\",\n      \"type\": \"object\"\n    },\n    \"DataColumnValue\": {\n      \"properties\": {\n        \"data_column\": {\n          \"$ref\": \"#/$defs/DataColumn\",\n          \"default\": null\n        },\n        \"id\": {\n          \"default\": null,\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"hidden\": {\n          \"default\": false,\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        }\n      },\n      \"title\": \"DataColumnValue\",\n      \"type\": \"object\"\n    },\n    \"DataEntity\": {\n      \"enum\": [\n        \"task\",\n        \"workflow\",\n        \"inventory\"\n      ],\n      \"title\": \"DataEntity\",\n      \"type\": \"string\"\n    },\n    \"DataInterval\": {\n      \"properties\": {\n        \"intervalCombination\": {\n          \"title\": \"Intervalcombination\",\n          \"type\": \"string\"\n        },\n        \"void\": {\n          \"default\": false,\n          \"title\": \"Void\",\n          \"type\": \"boolean\"\n        },\n        \"Trials\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Trial\"\n          },\n          \"title\": \"Trials\",\n          \"type\": \"array\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"intervalCombination\"\n      ],\n      \"title\": \"DataInterval\",\n      \"type\": \"object\"\n    },\n    \"DataTemplate\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"security_class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"DataColumns\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DataColumnValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumns\"\n        },\n        \"Parameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parameters\"\n        },\n        \"DeletedParameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Deletedparameters\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataTemplate\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"Interval\": {\n      \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"Interval\",\n      \"type\": \"object\"\n    },\n    \"IntervalCombination\": {\n      \"description\": \"A class representing the interval combinations of on a workflow.\\nThis is returned by the workflow endpoint when at least one parameter\\nin the workflow has been intervalized.\\n\\nInterval Combinations can be single intervalized parameters or cartesian prodcuts of\\ntwo intervalized parameters.\\n\\nAttributes\\n----------\\ninterval_id: IntervalId | None\\n    forign key reference to the interval id\\n    this combination is associated with\\n    It will have the form ROW# or ROW#XROW# depending on\\n    if it is a single interval or a product of two intervals\\ninterval_params: str | None\\n    The parameters participating in the interval.\\ninterval_string: str | None\\n    The string representation of the interval combination\\n    This will have the form \\\"[Parameter Name]: [Parameter Value] [Parameter Unit]\\\"\\n    for each parameter in the interval combination\",\n      \"properties\": {\n        \"interval\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Interval\"\n        },\n        \"intervalParams\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalparams\"\n        },\n        \"intervalString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalstring\"\n        }\n      },\n      \"title\": \"IntervalCombination\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryInformation\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        }\n      },\n      \"title\": \"InventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"PGType\": {\n      \"description\": \"The type of a parameter group\",\n      \"enum\": [\n        \"general\",\n        \"batch\",\n        \"property\"\n      ],\n      \"title\": \"PGType\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterGroup\": {\n      \"description\": \"Use 'Standards' key in metadata to store standards\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PGType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"class\": {\n          \"$ref\": \"#/$defs/SecurityClass\",\n          \"default\": \"restricted\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"Metadata\": {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"title\": \"Metadata\",\n          \"type\": \"object\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"documents\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Documents\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"ParameterGroup\",\n      \"type\": \"object\"\n    },\n    \"ParameterGroupSetpoints\": {\n      \"description\": \"A class that represents the setpoints on a parameter group.\\n\\n\\nAttributes\\n----------\\nparameter_group : ParameterGroup\\n    The parameter group to set the setpoints on. Provide either a parameter_group or a paramerter_group_id\\nparameter_group_id : ParameterGroupId\\n    The id of the parameter group.  Provide either a parameter_group or a paramerter_group_id\\nparameter_group_name : str\\n    The name of the parameter group. This is a read-only field.\\nparameter_setpoints : list[ParameterSetpoint]\\n    The setpoints to apply to the parameter group.\",\n      \"properties\": {\n        \"parameter_group\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterGroup\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterSetpoint\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"ParameterGroupSetpoints\",\n      \"type\": \"object\"\n    },\n    \"ParameterSetpoint\": {\n      \"description\": \"A Pydantic class representing the setpoint or intervals of a parameter to use.\\nFor a single value, provide the value and unit. For multiple values, provide intervals.\\na parameter or parameter_id must be provided.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The parameter to set the setpoint on. Provide either a parameter or a parameter_id.\\nparameter_id : ParameterId\\n    The id of the parameter. Provide either a parameter or a parameter_id.\\nvalue : str | EntityLink\\n    The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.\\nunit : Unit\\n    The unit of the setpoint.\\nintervals : list[Interval]\\n    The intervals of the setpoint. Either ether intervals or value + unit\\ncategory : ParameterCategory\\n    The category of the parameter. Special for InventoryItem (then use name to specify \\\"Equipment\\\", \\\"Consumeable\\\", etc), normal for all others\\nshort_name : str\\n    The short / display name of the parameter. Required if value is a dictionary.\\nrow_id : RowId\\n    The id of the parameter with respect to the interval row id.\",\n      \"properties\": {\n        \"parameter\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Parameter\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Intervals\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Interval\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervals\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"ParameterSetpoint\",\n      \"type\": \"object\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"PropertyData\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"PropertyData\",\n      \"type\": \"object\"\n    },\n    \"PropertyValue\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"valueNumeric\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuenumeric\"\n        },\n        \"valueString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuestring\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            }\n          ],\n          \"title\": \"Unit\"\n        },\n        \"PropertyData\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PropertyData\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"PropertyValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Trial\": {\n      \"properties\": {\n        \"trialNo\": {\n          \"title\": \"Trialno\",\n          \"type\": \"integer\"\n        },\n        \"visibleTrialNo\": {\n          \"default\": 1,\n          \"title\": \"Visibletrialno\",\n          \"type\": \"integer\"\n        },\n        \"void\": {\n          \"default\": false,\n          \"title\": \"Void\",\n          \"type\": \"boolean\"\n        },\n        \"DataColumns\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/PropertyValue\"\n          },\n          \"title\": \"Datacolumns\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"trialNo\"\n      ],\n      \"title\": \"Trial\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    },\n    \"Workflow\": {\n      \"description\": \"A Pydantic Class representing a workflow in Albert.\\n\\nWorkflows are combinations of Data Templates and Parameter groups and their associated setpoints.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the workflow.\\nparameter_group_setpoints : list[ParameterGroupSetpoints]\\n    The setpoints to apply to the parameter groups in the workflow.\\nid : str | None\\n    The AlbertID of the workflow. This is set when a workflow is retrived from the platform.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"ParameterGroups\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterGroupSetpoints\"\n          },\n          \"title\": \"Parametergroups\",\n          \"type\": \"array\"\n        },\n        \"IntervalCombinations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalCombination\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalcombinations\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"ParameterGroups\"\n      ],\n      \"title\": \"Workflow\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"entity\": {\n      \"const\": \"task\",\n      \"default\": \"task\",\n      \"title\": \"Entity\",\n      \"type\": \"string\"\n    },\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"Inventory\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/InventoryInformation\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/DataEntity\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"InitialWorkflow\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Workflow\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Initialworkflow\"\n    },\n    \"FinalWorkflow\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Workflow\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Finalworkflow\"\n    },\n    \"DataTemplate\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/DataTemplate\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datatemplate\"\n    },\n    \"Data\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/DataInterval\"\n      },\n      \"title\": \"Data\",\n      \"type\": \"array\"\n    },\n    \"blockId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Blockid\"\n    }\n  },\n  \"required\": [\n    \"parentId\",\n    \"Data\"\n  ],\n  \"title\": \"TaskPropertyData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>entity</code>                 (<code>Literal[TASK]</code>)             </li> <li> <code>parent_id</code>                 (<code>str</code>)             </li> <li> <code>task_id</code>                 (<code>str | None</code>)             </li> <li> <code>inventory</code>                 (<code>InventoryInformation | None</code>)             </li> <li> <code>category</code>                 (<code>DataEntity | None</code>)             </li> <li> <code>initial_workflow</code>                 (<code>SerializeAsEntityLink[Workflow] | None</code>)             </li> <li> <code>finial_workflow</code>                 (<code>SerializeAsEntityLink[Workflow] | None</code>)             </li> <li> <code>data_template</code>                 (<code>SerializeAsEntityLink[DataTemplate] | None</code>)             </li> <li> <code>data</code>                 (<code>list[DataInterval]</code>)             </li> <li> <code>block_id</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.entity","title":"entity","text":"<pre><code>entity: Literal[TASK] = TASK\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.parent_id","title":"parent_id","text":"<pre><code>parent_id: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.task_id","title":"task_id","text":"<pre><code>task_id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.inventory","title":"inventory","text":"<pre><code>inventory: InventoryInformation | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.category","title":"category","text":"<pre><code>category: DataEntity | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.initial_workflow","title":"initial_workflow","text":"<pre><code>initial_workflow: SerializeAsEntityLink[Workflow] | None = (\n    None\n)\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.finial_workflow","title":"finial_workflow","text":"<pre><code>finial_workflow: SerializeAsEntityLink[Workflow] | None = (\n    None\n)\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.data_template","title":"data_template","text":"<pre><code>data_template: (\n    SerializeAsEntityLink[DataTemplate] | None\n) = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.data","title":"data","text":"<pre><code>data: list[DataInterval]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyData.block_id","title":"block_id","text":"<pre><code>block_id: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.BulkPropertyDataColumn","title":"BulkPropertyDataColumn","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>A Simple Data Structure representing all the rows of data in a block's data column.</p> Show JSON schema: <pre><code>{\n  \"description\": \"A Simple Data Structure representing all the rows of data in a block's data column.\",\n  \"properties\": {\n    \"data_column_name\": {\n      \"default\": null,\n      \"description\": \"The name of the data column (case sensitive).\",\n      \"title\": \"Data Column Name\",\n      \"type\": \"string\"\n    },\n    \"data_series\": {\n      \"description\": \"The values, in order of row number, for the data column.\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"title\": \"Data Series\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"BulkPropertyDataColumn\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data_column_name</code>                 (<code>str</code>)             </li> <li> <code>data_series</code>                 (<code>list[str]</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.BulkPropertyDataColumn.data_column_name","title":"data_column_name","text":"<pre><code>data_column_name: str = None\n</code></pre> <p>The name of the data column (case sensitive).</p>"},{"location":"resources/property_data/#albert.resources.property_data.BulkPropertyDataColumn.data_series","title":"data_series","text":"<pre><code>data_series: list[str]\n</code></pre> <p>The values, in order of row number, for the data column.</p>"},{"location":"resources/property_data/#albert.resources.property_data.BulkPropertyData","title":"BulkPropertyData","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>A Simple Data Structure representing all the columns of data in a block's data column.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BulkPropertyDataColumn\": {\n      \"description\": \"A Simple Data Structure representing all the rows of data in a block's data column.\",\n      \"properties\": {\n        \"data_column_name\": {\n          \"default\": null,\n          \"description\": \"The name of the data column (case sensitive).\",\n          \"title\": \"Data Column Name\",\n          \"type\": \"string\"\n        },\n        \"data_series\": {\n          \"description\": \"The values, in order of row number, for the data column.\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"title\": \"Data Series\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"BulkPropertyDataColumn\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"A Simple Data Structure representing all the columns of data in a block's data column.\",\n  \"properties\": {\n    \"columns\": {\n      \"description\": \"The columns of data in the block's data column.\",\n      \"items\": {\n        \"$ref\": \"#/$defs/BulkPropertyDataColumn\"\n      },\n      \"title\": \"Columns\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"BulkPropertyData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>columns</code>                 (<code>list[BulkPropertyDataColumn]</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.BulkPropertyData.columns","title":"columns","text":"<pre><code>columns: list[BulkPropertyDataColumn]\n</code></pre> <p>The columns of data in the block's data column.</p>"},{"location":"resources/property_data/#albert.resources.property_data.BulkPropertyData.from_dataframe","title":"from_dataframe","text":"<pre><code>from_dataframe(df: DataFrame) -&gt; BulkPropertyData\n</code></pre> <p>Converts a DataFrame to a BulkPropertyData object.</p> <p>Parameters:</p> Name Type Description Default <code>df</code> <code>DataFrame</code> <p>The DataFrame to convert.</p> required <p>Returns:</p> Type Description <code>BulkPropertyData</code> <p>The BulkPropertyData object that represents the data in the DataFrame.</p> Source code in <code>src/albert/resources/property_data.py</code> <pre><code>@classmethod\ndef from_dataframe(cls, df: pd.DataFrame) -&gt; \"BulkPropertyData\":\n    \"\"\"\n    Converts a DataFrame to a BulkPropertyData object.\n\n    Parameters\n    ----------\n    df : pd.DataFrame\n        The DataFrame to convert.\n\n    Returns\n    -------\n    BulkPropertyData\n        The BulkPropertyData object that represents the data in the DataFrame.\n    \"\"\"\n    # Convert all the values to strings, since all albert values are string typed in Albert\n    df = df.fillna(\"\").astype(str)\n    columns = []\n    for column in df.columns:\n        data_column = BulkPropertyDataColumn(\n            data_column_name=column, data_series=df[column].tolist()\n        )\n        columns.append(data_column)\n    return BulkPropertyData(columns=columns)\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyValue","title":"TaskPropertyValue","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    }\n  },\n  \"title\": \"TaskPropertyValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>value</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyValue.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskDataColumn","title":"TaskDataColumn","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"columnId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Columnid\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"TaskDataColumn\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data_column_id</code>                 (<code>DataColumnId</code>)             </li> <li> <code>column_sequence</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.TaskDataColumn.data_column_id","title":"data_column_id","text":"<pre><code>data_column_id: DataColumnId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskDataColumn.column_sequence","title":"column_sequence","text":"<pre><code>column_sequence: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskDataColumnValue","title":"TaskDataColumnValue","text":"<p>               Bases: <code>TaskDataColumn</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"TaskPropertyValue\": {\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"TaskPropertyValue\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"columnId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Columnid\"\n    },\n    \"Value\": {\n      \"$ref\": \"#/$defs/TaskPropertyValue\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"Value\"\n  ],\n  \"title\": \"TaskDataColumnValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data_column_id</code>                 (<code>DataColumnId</code>)             </li> <li> <code>column_sequence</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>TaskPropertyValue</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>set_string_value</code>                 \u2192                   <code>value</code> </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.TaskDataColumnValue.value","title":"value","text":"<pre><code>value: TaskPropertyValue\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskDataColumnValue.set_string_value","title":"set_string_value","text":"<pre><code>set_string_value(v)\n</code></pre> <p>Converts a string to TaskPropertyValue if the input is a string.</p> Source code in <code>src/albert/resources/property_data.py</code> <pre><code>@field_validator(\"value\", mode=\"before\")\ndef set_string_value(cls, v):\n    \"\"\"\n    Converts a string to TaskPropertyValue if the input is a string.\n    \"\"\"\n    if isinstance(v, str):\n        return TaskPropertyValue(value=v)\n    return v\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskTrialData","title":"TaskTrialData","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"TaskDataColumnValue\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"columnId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Columnid\"\n        },\n        \"Value\": {\n          \"$ref\": \"#/$defs/TaskPropertyValue\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"Value\"\n      ],\n      \"title\": \"TaskDataColumnValue\",\n      \"type\": \"object\"\n    },\n    \"TaskPropertyValue\": {\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"TaskPropertyValue\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"trialNo\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Trialno\"\n    },\n    \"DataColumns\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/TaskDataColumnValue\"\n      },\n      \"title\": \"Datacolumns\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"TaskTrialData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>trial_number</code>                 (<code>int | None</code>)             </li> <li> <code>data_columns</code>                 (<code>list[TaskDataColumnValue]</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.TaskTrialData.trial_number","title":"trial_number","text":"<pre><code>trial_number: int | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskTrialData.data_columns","title":"data_columns","text":"<pre><code>data_columns: list[TaskDataColumnValue]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryDataColumn","title":"InventoryDataColumn","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    }\n  },\n  \"title\": \"InventoryDataColumn\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data_column_id</code>                 (<code>DataColumnId | None</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryDataColumn.data_column_id","title":"data_column_id","text":"<pre><code>data_column_id: DataColumnId | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryDataColumn.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyCreate","title":"TaskPropertyCreate","text":"<p>               Bases: <code>BaseResource</code></p> <p>Represents a task property to be created.</p> <p>This class is used to create new task properties. Users can use the <code>Workflowe.get_interval_id</code> method to find the correct interval given the names and setpoints of the parameters.</p> Notes <ul> <li>Users can use <code>Workflow.get_interval_id(parameter_values={\"name1\":\"value1\", \"name2\":\"value2\"})</code>   to find the correct interval given the names and setpoints of the parameters.</li> <li>Leave <code>trial_number</code> blank to create a new row/trial.</li> <li><code>visible_trial_number</code> can be used to set the relative row number, allowing you to pass multiple rows of data at once.</li> </ul> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataColumn\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"defalt\": {\n          \"default\": false,\n          \"title\": \"Defalt\",\n          \"type\": \"boolean\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"albertId\": {\n          \"default\": null,\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataColumn\",\n      \"type\": \"object\"\n    },\n    \"DataColumnValue\": {\n      \"properties\": {\n        \"data_column\": {\n          \"$ref\": \"#/$defs/DataColumn\",\n          \"default\": null\n        },\n        \"id\": {\n          \"default\": null,\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"hidden\": {\n          \"default\": false,\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        }\n      },\n      \"title\": \"DataColumnValue\",\n      \"type\": \"object\"\n    },\n    \"DataTemplate\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"security_class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"DataColumns\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DataColumnValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumns\"\n        },\n        \"Parameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parameters\"\n        },\n        \"DeletedParameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Deletedparameters\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataTemplate\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskDataColumn\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"columnId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Columnid\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"TaskDataColumn\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents a task property to be created.\\n\\nThis class is used to create new task properties. Users can use the `Workflowe.get_interval_id`\\nmethod to find the correct interval given the names and setpoints of the parameters.\\n\\n\\nNotes\\n-----\\n- Users can use `Workflow.get_interval_id(parameter_values={\\\"name1\\\":\\\"value1\\\", \\\"name2\\\":\\\"value2\\\"})`\\n  to find the correct interval given the names and setpoints of the parameters.\\n- Leave `trial_number` blank to create a new row/trial.\\n- `visible_trial_number` can be used to set the relative row number, allowing you to pass multiple rows of data at once.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"entity\": {\n      \"const\": \"task\",\n      \"default\": \"task\",\n      \"description\": \"The entity type, which is always `DataEntity.TASK` for task properties.\",\n      \"title\": \"Entity\",\n      \"type\": \"string\"\n    },\n    \"intervalCombination\": {\n      \"default\": \"default\",\n      \"description\": \"The interval combination, which can be found using `Workflow.get_interval_id`.\",\n      \"examples\": [\n        \"default\",\n        \"ROW4XROW2\",\n        \"ROW2\"\n      ],\n      \"title\": \"Intervalcombination\",\n      \"type\": \"string\"\n    },\n    \"DataColumns\": {\n      \"$ref\": \"#/$defs/TaskDataColumn\",\n      \"description\": \"The data column associated with the task property.\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The value of the task property.\",\n      \"title\": \"Value\"\n    },\n    \"trialNo\": {\n      \"default\": null,\n      \"description\": \"The trial number/ row number. Leave blank to create a new row/trial.\",\n      \"title\": \"Trialno\",\n      \"type\": \"integer\"\n    },\n    \"DataTemplate\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/DataTemplate\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        }\n      ],\n      \"description\": \"The data template associated with the task property.\",\n      \"title\": \"Datatemplate\"\n    },\n    \"visibleTrialNo\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Can be used to set the relative row number, allowing you to pass multiple rows of data at once.\",\n      \"title\": \"Visibletrialno\"\n    }\n  },\n  \"required\": [\n    \"DataColumns\",\n    \"DataTemplate\"\n  ],\n  \"title\": \"TaskPropertyCreate\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>entity</code>                 (<code>Literal[TASK]</code>)             </li> <li> <code>interval_combination</code>                 (<code>str</code>)             </li> <li> <code>data_column</code>                 (<code>TaskDataColumn</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> <li> <code>trial_number</code>                 (<code>int</code>)             </li> <li> <code>data_template</code>                 (<code>SerializeAsEntityLink[DataTemplate]</code>)             </li> <li> <code>visible_trial_number</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>set_visible_trial_number</code> </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyCreate.entity","title":"entity","text":"<pre><code>entity: Literal[TASK] = TASK\n</code></pre> <p>The entity type, which is always <code>DataEntity.TASK</code> for task properties.</p>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyCreate.interval_combination","title":"interval_combination","text":"<pre><code>interval_combination: str = 'default'\n</code></pre> <p>The interval combination, which can be found using <code>Workflow.get_interval_id</code>.</p>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyCreate.data_column","title":"data_column","text":"<pre><code>data_column: TaskDataColumn\n</code></pre> <p>The data column associated with the task property.</p>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyCreate.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre> <p>The value of the task property.</p>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyCreate.trial_number","title":"trial_number","text":"<pre><code>trial_number: int = None\n</code></pre> <p>The trial number/ row number. Leave blank to create a new row/trial.</p>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyCreate.data_template","title":"data_template","text":"<pre><code>data_template: SerializeAsEntityLink[DataTemplate]\n</code></pre> <p>The data template associated with the task property.</p>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyCreate.visible_trial_number","title":"visible_trial_number","text":"<pre><code>visible_trial_number: int | None = None\n</code></pre> <p>Can be used to set the relative row number, allowing you to pass multiple rows of data at once.</p>"},{"location":"resources/property_data/#albert.resources.property_data.TaskPropertyCreate.set_visible_trial_number","title":"set_visible_trial_number","text":"<pre><code>set_visible_trial_number() -&gt; TaskPropertyCreate\n</code></pre> Source code in <code>src/albert/resources/property_data.py</code> <pre><code>@model_validator(mode=\"after\")\ndef set_visible_trial_number(self) -&gt; \"TaskPropertyCreate\":\n    if self.visible_trial_number is None:\n        if self.trial_number is not None:\n            self.visible_trial_number = self.trial_number\n        else:\n            self.visible_trial_number = \"1\"\n    return self\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataPatchDatum","title":"PropertyDataPatchDatum","text":"<p>               Bases: <code>PatchDatum</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"operation\": {\n      \"title\": \"Operation\",\n      \"type\": \"string\"\n    },\n    \"attribute\": {\n      \"title\": \"Attribute\",\n      \"type\": \"string\"\n    },\n    \"newValue\": {\n      \"anyOf\": [\n        {},\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Newvalue\"\n    },\n    \"oldValue\": {\n      \"anyOf\": [\n        {},\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Oldvalue\"\n    },\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"operation\",\n    \"attribute\",\n    \"id\"\n  ],\n  \"title\": \"PropertyDataPatchDatum\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>operation</code>                 (<code>str</code>)             </li> <li> <code>attribute</code>                 (<code>str</code>)             </li> <li> <code>new_value</code>                 (<code>Any | None</code>)             </li> <li> <code>old_value</code>                 (<code>Any | None</code>)             </li> <li> <code>property_column_id</code>                 (<code>DataColumnId | PropertyDataId</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataPatchDatum.property_column_id","title":"property_column_id","text":"<pre><code>property_column_id: DataColumnId | PropertyDataId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyDataCreate","title":"InventoryPropertyDataCreate","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"InventoryDataColumn\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"InventoryDataColumn\",\n      \"type\": \"object\"\n    },\n    \"PropertyDataStatus\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"Success\",\n        \"Failed\"\n      ],\n      \"title\": \"PropertyDataStatus\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/PropertyDataStatus\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"entity\": {\n      \"const\": \"inventory\",\n      \"default\": \"inventory\",\n      \"title\": \"Entity\",\n      \"type\": \"string\"\n    },\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"DataColumn\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/InventoryDataColumn\"\n      },\n      \"maxItems\": 1,\n      \"title\": \"Datacolumn\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"parentId\"\n  ],\n  \"title\": \"InventoryPropertyDataCreate\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>entity</code>                 (<code>Literal[INVENTORY]</code>)             </li> <li> <code>inventory_id</code>                 (<code>InventoryId</code>)             </li> <li> <code>data_columns</code>                 (<code>list[InventoryDataColumn]</code>)             </li> <li> <code>status</code>                 (<code>PropertyDataStatus | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyDataCreate.entity","title":"entity","text":"<pre><code>entity: Literal[INVENTORY] = INVENTORY\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyDataCreate.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: InventoryId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyDataCreate.data_columns","title":"data_columns","text":"<pre><code>data_columns: list[InventoryDataColumn]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.InventoryPropertyDataCreate.status","title":"status","text":"<pre><code>status: PropertyDataStatus | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.WorkflowItem","title":"WorkflowItem","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"parameterGroupId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parametergroupid\"\n    },\n    \"valueNumeric\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Valuenumeric\"\n    },\n    \"unitName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unitname\"\n    },\n    \"unitId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unitid\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"id\"\n  ],\n  \"title\": \"WorkflowItem\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>ParameterId</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> <li> <code>parameter_group_id</code>                 (<code>ParameterGroupId | None</code>)             </li> <li> <code>value_numeric</code>                 (<code>float | None</code>)             </li> <li> <code>unit_name</code>                 (<code>str | None</code>)             </li> <li> <code>unit_id</code>                 (<code>UnitId | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.WorkflowItem.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.WorkflowItem.id","title":"id","text":"<pre><code>id: ParameterId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.WorkflowItem.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.WorkflowItem.parameter_group_id","title":"parameter_group_id","text":"<pre><code>parameter_group_id: ParameterGroupId | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.WorkflowItem.value_numeric","title":"value_numeric","text":"<pre><code>value_numeric: float | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.WorkflowItem.unit_name","title":"unit_name","text":"<pre><code>unit_name: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.WorkflowItem.unit_id","title":"unit_id","text":"<pre><code>unit_id: UnitId | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataResult","title":"PropertyDataResult","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"valueNumeric\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Valuenumeric\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"trial\": {\n      \"title\": \"Trial\",\n      \"type\": \"string\"\n    },\n    \"valueString\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Valuestring\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"id\",\n    \"trial\"\n  ],\n  \"title\": \"PropertyDataResult\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>value_numeric</code>                 (<code>float | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>data_column_id</code>                 (<code>DataColumnId</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> <li> <code>trial</code>                 (<code>str</code>)             </li> <li> <code>value_string</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataResult.value_numeric","title":"value_numeric","text":"<pre><code>value_numeric: float | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataResult.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataResult.data_column_id","title":"data_column_id","text":"<pre><code>data_column_id: DataColumnId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataResult.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataResult.trial","title":"trial","text":"<pre><code>trial: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataResult.value_string","title":"value_string","text":"<pre><code>value_string: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem","title":"PropertyDataSearchItem","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"PropertyDataResult\": {\n      \"properties\": {\n        \"valueNumeric\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuenumeric\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"trial\": {\n          \"title\": \"Trial\",\n          \"type\": \"string\"\n        },\n        \"valueString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuestring\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"id\",\n        \"trial\"\n      ],\n      \"title\": \"PropertyDataResult\",\n      \"type\": \"object\"\n    },\n    \"WorkflowItem\": {\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"parameterGroupId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parametergroupid\"\n        },\n        \"valueNumeric\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuenumeric\"\n        },\n        \"unitName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unitname\"\n        },\n        \"unitId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unitid\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"id\"\n      ],\n      \"title\": \"WorkflowItem\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"workflow\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/WorkflowItem\"\n      },\n      \"title\": \"Workflow\",\n      \"type\": \"array\"\n    },\n    \"result\": {\n      \"$ref\": \"#/$defs/PropertyDataResult\"\n    },\n    \"dataTemplateId\": {\n      \"title\": \"Datatemplateid\",\n      \"type\": \"string\"\n    },\n    \"workflowName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Workflowname\"\n    },\n    \"parentId\": {\n      \"title\": \"Parentid\",\n      \"type\": \"string\"\n    },\n    \"dataTemplateName\": {\n      \"title\": \"Datatemplatename\",\n      \"type\": \"string\"\n    },\n    \"createdBy\": {\n      \"title\": \"Createdby\",\n      \"type\": \"string\"\n    },\n    \"inventoryId\": {\n      \"title\": \"Inventoryid\",\n      \"type\": \"string\"\n    },\n    \"projectId\": {\n      \"title\": \"Projectid\",\n      \"type\": \"string\"\n    },\n    \"workflowId\": {\n      \"title\": \"Workflowid\",\n      \"type\": \"string\"\n    },\n    \"taskId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Taskid\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"category\",\n    \"workflow\",\n    \"result\",\n    \"dataTemplateId\",\n    \"parentId\",\n    \"dataTemplateName\",\n    \"createdBy\",\n    \"inventoryId\",\n    \"projectId\",\n    \"workflowId\"\n  ],\n  \"title\": \"PropertyDataSearchItem\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>PropertyDataId</code>)             </li> <li> <code>category</code>                 (<code>str</code>)             </li> <li> <code>workflow</code>                 (<code>list[WorkflowItem]</code>)             </li> <li> <code>result</code>                 (<code>PropertyDataResult</code>)             </li> <li> <code>data_template_id</code>                 (<code>DataTemplateId</code>)             </li> <li> <code>workflow_name</code>                 (<code>str | None</code>)             </li> <li> <code>parent_id</code>                 (<code>TaskId | InventoryId</code>)             </li> <li> <code>data_template_name</code>                 (<code>str</code>)             </li> <li> <code>created_by</code>                 (<code>str</code>)             </li> <li> <code>inventory_id</code>                 (<code>InventoryId</code>)             </li> <li> <code>project_id</code>                 (<code>ProjectId</code>)             </li> <li> <code>workflow_id</code>                 (<code>WorkflowId</code>)             </li> <li> <code>task_id</code>                 (<code>TaskId | None</code>)             </li> </ul>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.id","title":"id","text":"<pre><code>id: PropertyDataId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.category","title":"category","text":"<pre><code>category: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.workflow","title":"workflow","text":"<pre><code>workflow: list[WorkflowItem]\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.result","title":"result","text":"<pre><code>result: PropertyDataResult\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.data_template_id","title":"data_template_id","text":"<pre><code>data_template_id: DataTemplateId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.workflow_name","title":"workflow_name","text":"<pre><code>workflow_name: str | None = None\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.parent_id","title":"parent_id","text":"<pre><code>parent_id: TaskId | InventoryId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.data_template_name","title":"data_template_name","text":"<pre><code>data_template_name: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.created_by","title":"created_by","text":"<pre><code>created_by: str\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: InventoryId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.project_id","title":"project_id","text":"<pre><code>project_id: ProjectId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.workflow_id","title":"workflow_id","text":"<pre><code>workflow_id: WorkflowId\n</code></pre>"},{"location":"resources/property_data/#albert.resources.property_data.PropertyDataSearchItem.task_id","title":"task_id","text":"<pre><code>task_id: TaskId | None = None\n</code></pre>"},{"location":"resources/reports/","title":"Reports","text":""},{"location":"resources/reports/#albert.resources.reports","title":"albert.resources.reports","text":"<p>Attributes:</p> Name Type Description <code>ReportItem</code>"},{"location":"resources/reports/#albert.resources.reports.ReportItem","title":"ReportItem","text":"<pre><code>ReportItem = dict[str, Any] | list[dict[str, Any]] | None\n</code></pre>"},{"location":"resources/reports/#albert.resources.reports.ReportInfo","title":"ReportInfo","text":"<p>               Bases: <code>BaseResource</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"reportTypeId\": {\n      \"title\": \"Reporttypeid\",\n      \"type\": \"string\"\n    },\n    \"reportType\": {\n      \"title\": \"Reporttype\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"Items\": {\n      \"items\": {\n        \"anyOf\": [\n          {\n            \"additionalProperties\": true,\n            \"type\": \"object\"\n          },\n          {\n            \"items\": {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          {\n            \"type\": \"null\"\n          }\n        ]\n      },\n      \"title\": \"Items\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"reportTypeId\",\n    \"reportType\",\n    \"category\",\n    \"Items\"\n  ],\n  \"title\": \"ReportInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>report_type_id</code>                 (<code>str</code>)             </li> <li> <code>report_type</code>                 (<code>str</code>)             </li> <li> <code>category</code>                 (<code>str</code>)             </li> <li> <code>items</code>                 (<code>list[ReportItem]</code>)             </li> </ul>"},{"location":"resources/reports/#albert.resources.reports.ReportInfo.report_type_id","title":"report_type_id","text":"<pre><code>report_type_id: str\n</code></pre>"},{"location":"resources/reports/#albert.resources.reports.ReportInfo.report_type","title":"report_type","text":"<pre><code>report_type: str\n</code></pre>"},{"location":"resources/reports/#albert.resources.reports.ReportInfo.category","title":"category","text":"<pre><code>category: str\n</code></pre>"},{"location":"resources/reports/#albert.resources.reports.ReportInfo.items","title":"items","text":"<pre><code>items: list[ReportItem]\n</code></pre>"},{"location":"resources/roles/","title":"Roles","text":""},{"location":"resources/roles/#albert.resources.roles","title":"albert.resources.roles","text":""},{"location":"resources/roles/#albert.resources.roles.Role","title":"Role","text":"<p>               Bases: <code>BaseResource</code></p> <p>A role in Albert. Note: Roles are not currently creatable via the SDK.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the role.</p> <code>id</code> <code>str</code> <p>The Albert ID of the role. Set when the role is retrieved from Albert.</p> <code>policies</code> <code>list[Any] | None</code> <p>The policies associated with the role.</p> <code>tenant</code> <code>str</code> <p>The tenant ID of the role.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"policies\": {\n      \"anyOf\": [\n        {\n          \"items\": {},\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Policies\"\n    },\n    \"tenant\": {\n      \"title\": \"Tenant\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"tenant\"\n  ],\n  \"title\": \"Role\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>policies</code>                 (<code>list[Any] | None</code>)             </li> <li> <code>tenant</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/roles/#albert.resources.roles.Role.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/roles/#albert.resources.roles.Role.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/roles/#albert.resources.roles.Role.policies","title":"policies","text":"<pre><code>policies: list[Any] | None = None\n</code></pre>"},{"location":"resources/roles/#albert.resources.roles.Role.tenant","title":"tenant","text":"<pre><code>tenant: str\n</code></pre>"},{"location":"resources/sheets/","title":"Sheets","text":""},{"location":"resources/sheets/#albert.resources.sheets","title":"albert.resources.sheets","text":""},{"location":"resources/sheets/#albert.resources.sheets.CellColor","title":"CellColor","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The allowed colors for a cell</p> <p>Attributes:</p> Name Type Description <code>WHITE</code> <code>RED</code> <code>GREEN</code> <code>BLUE</code> <code>YELLOW</code> <code>ORANGE</code> <code>PURPLE</code>"},{"location":"resources/sheets/#albert.resources.sheets.CellColor.WHITE","title":"WHITE","text":"<pre><code>WHITE = 'RGB(255, 255, 255)'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellColor.RED","title":"RED","text":"<pre><code>RED = 'RGB(255, 161, 161)'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellColor.GREEN","title":"GREEN","text":"<pre><code>GREEN = 'RGB(130, 222, 198)'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellColor.BLUE","title":"BLUE","text":"<pre><code>BLUE = 'RGB(214, 233, 255)'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellColor.YELLOW","title":"YELLOW","text":"<pre><code>YELLOW = 'RGB(254, 240, 159)'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellColor.ORANGE","title":"ORANGE","text":"<pre><code>ORANGE = 'RGB(255, 227, 210)'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellColor.PURPLE","title":"PURPLE","text":"<pre><code>PURPLE = 'RGB(238, 215, 255)'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType","title":"CellType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The type of information in the Cell</p> <p>Attributes:</p> Name Type Description <code>INVENTORY</code> <code>APP</code> <code>BLANK</code> <code>FORMULA</code> <code>TAG</code> <code>PRICE</code> <code>PDC</code> <code>BAT</code> <code>TOTAL</code> <code>TAS</code> <code>DEF</code> <code>LKP</code> <code>FOR</code> <code>EXTINV</code> <code>BTI</code>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.INVENTORY","title":"INVENTORY","text":"<pre><code>INVENTORY = 'INV'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.APP","title":"APP","text":"<pre><code>APP = 'APP'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.BLANK","title":"BLANK","text":"<pre><code>BLANK = 'BLK'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.FORMULA","title":"FORMULA","text":"<pre><code>FORMULA = 'Formula'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.TAG","title":"TAG","text":"<pre><code>TAG = 'TAG'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.PRICE","title":"PRICE","text":"<pre><code>PRICE = 'PRC'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.PDC","title":"PDC","text":"<pre><code>PDC = 'PDC'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.BAT","title":"BAT","text":"<pre><code>BAT = 'BAT'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.TOTAL","title":"TOTAL","text":"<pre><code>TOTAL = 'TOT'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.TAS","title":"TAS","text":"<pre><code>TAS = 'TAS'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.DEF","title":"DEF","text":"<pre><code>DEF = 'DEF'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.LKP","title":"LKP","text":"<pre><code>LKP = 'LKP'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.FOR","title":"FOR","text":"<pre><code>FOR = 'FOR'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.EXTINV","title":"EXTINV","text":"<pre><code>EXTINV = 'EXTINV'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.CellType.BTI","title":"BTI","text":"<pre><code>BTI = 'BTI'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.DesignType","title":"DesignType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The type of Design</p> <p>Attributes:</p> Name Type Description <code>APPS</code> <code>PRODUCTS</code> <code>RESULTS</code>"},{"location":"resources/sheets/#albert.resources.sheets.DesignType.APPS","title":"APPS","text":"<pre><code>APPS = 'apps'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.DesignType.PRODUCTS","title":"PRODUCTS","text":"<pre><code>PRODUCTS = 'products'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.DesignType.RESULTS","title":"RESULTS","text":"<pre><code>RESULTS = 'results'\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell","title":"Cell","text":"<p>               Bases: <code>BaseResource</code></p> <p>A Cell in a Sheet</p> <p>Attributes:</p> Name Type Description <code>column_id</code> <code>str</code> <p>The column ID of the cell.</p> <code>row_id</code> <code>str</code> <p>The row ID of the cell.</p> <code>value</code> <code>str | dict</code> <p>The value of the cell. If the cell is an inventory item, this will be a dict.</p> <code>type</code> <code>CellType</code> <p>The type of the cell. Allowed values are <code>INV</code>, <code>APP</code>, <code>BLK</code>, <code>Formula</code>, <code>TAG</code>, <code>PRC</code>, <code>PDC</code>, <code>BAT</code>, <code>TOT</code>, <code>TAS</code>, <code>DEF</code>, <code>LKP</code>, <code>FOR</code>, and <code>EXTINV</code>.</p> <code>name</code> <code>str | None</code> <p>The name of the cell. Optional. Default is None.</p> <code>calculation</code> <code>str</code> <p>The calculation of the cell. Optional. Default is \"\".</p> <code>design_id</code> <code>str</code> <p>The design ID of the design this cell is in.</p> <code>format</code> <code>dict</code> <p>The format of the cell. Optional. Default is {}. The format is a dict with the keys <code>bgColor</code> and <code>fontColor</code>. The values are strings in the format <code>RGB(255, 255, 255)</code>.</p> <code>raw_value</code> <code>str</code> <p>The raw value of the cell. If the cell is an inventory item, this will be the value of the inventory item. Read-only.</p> <code>color</code> <code>str | None</code> <p>The color of the cell. Read only.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"CellType\": {\n      \"description\": \"The type of information in the Cell\",\n      \"enum\": [\n        \"INV\",\n        \"APP\",\n        \"BLK\",\n        \"Formula\",\n        \"TAG\",\n        \"PRC\",\n        \"PDC\",\n        \"BAT\",\n        \"TOT\",\n        \"TAS\",\n        \"DEF\",\n        \"LKP\",\n        \"FOR\",\n        \"EXTINV\",\n        \"BTI\"\n      ],\n      \"title\": \"CellType\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A Cell in a Sheet\\n\\nAttributes\\n----------\\ncolumn_id : str\\n    The column ID of the cell.\\nrow_id : str\\n    The row ID of the cell.\\nvalue : str | dict\\n    The value of the cell. If the cell is an inventory item, this will be a dict.\\ntype : CellType\\n    The type of the cell. Allowed values are `INV`, `APP`, `BLK`, `Formula`, `TAG`, `PRC`, `PDC`, `BAT`, `TOT`, `TAS`, `DEF`, `LKP`, `FOR`, and `EXTINV`.\\nname : str | None\\n    The name of the cell. Optional. Default is None.\\ncalculation : str\\n    The calculation of the cell. Optional. Default is \\\"\\\".\\ndesign_id : str\\n    The design ID of the design this cell is in.\\nformat : dict\\n    The format of the cell. Optional. Default is {}. The format is a dict with the keys `bgColor` and `fontColor`. The values are strings in the format `RGB(255, 255, 255)`.\\nraw_value : str\\n    The raw value of the cell. If the cell is an inventory item, this will be the value of the inventory item. Read-only.\\ncolor : str | None\\n    The color of the cell. Read only.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"colId\": {\n      \"title\": \"Colid\",\n      \"type\": \"string\"\n    },\n    \"rowId\": {\n      \"title\": \"Rowid\",\n      \"type\": \"string\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        }\n      ],\n      \"default\": \"\",\n      \"title\": \"Value\"\n    },\n    \"type\": {\n      \"$ref\": \"#/$defs/CellType\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"calculation\": {\n      \"default\": \"\",\n      \"title\": \"Calculation\",\n      \"type\": \"string\"\n    },\n    \"design_id\": {\n      \"title\": \"Design Id\",\n      \"type\": \"string\"\n    },\n    \"cellFormat\": {\n      \"additionalProperties\": true,\n      \"title\": \"Cellformat\",\n      \"type\": \"object\"\n    },\n    \"inventory_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventory Id\"\n    }\n  },\n  \"required\": [\n    \"colId\",\n    \"rowId\",\n    \"type\",\n    \"design_id\"\n  ],\n  \"title\": \"Cell\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>column_id</code>                 (<code>str</code>)             </li> <li> <code>row_id</code>                 (<code>str</code>)             </li> <li> <code>value</code>                 (<code>str | dict</code>)             </li> <li> <code>type</code>                 (<code>CellType</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>calculation</code>                 (<code>str</code>)             </li> <li> <code>design_id</code>                 (<code>str</code>)             </li> <li> <code>format</code>                 (<code>dict</code>)             </li> <li> <code>inventory_id</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.column_id","title":"column_id","text":"<pre><code>column_id: str\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.row_id","title":"row_id","text":"<pre><code>row_id: str\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.value","title":"value","text":"<pre><code>value: str | dict = ''\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.type","title":"type","text":"<pre><code>type: CellType\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.calculation","title":"calculation","text":"<pre><code>calculation: str = ''\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.design_id","title":"design_id","text":"<pre><code>design_id: str\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.format","title":"format","text":"<pre><code>format: dict\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: str | None = None\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.raw_value","title":"raw_value","text":"<pre><code>raw_value\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Cell.color","title":"color","text":"<pre><code>color\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Component","title":"Component","text":"<p>               Bases: <code>BaseResource</code></p> <p>Represents an amount of an inventory item in a formulation</p> <p>Attributes:</p> Name Type Description <code>inventory_item</code> <code>InventoryItem</code> <p>The inventory item in the component</p> <code>amount</code> <code>float</code> <p>The amount of the inventory item in the component</p> <code>cell</code> <code>Cell</code> <p>The cell that the component is in. Read-only.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents an amount of an inventory item in a formulation\\n\\nAttributes\\n----------\\ninventory_item : InventoryItem\\n    The inventory item in the component\\namount : float\\n    The amount of the inventory item in the component\\ncell : Cell\\n    The cell that the component is in. Read-only.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"inventory_item\": {\n      \"$ref\": \"#/$defs/InventoryItem\"\n    },\n    \"amount\": {\n      \"title\": \"Amount\",\n      \"type\": \"number\"\n    }\n  },\n  \"required\": [\n    \"inventory_item\",\n    \"amount\"\n  ],\n  \"title\": \"Component\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>inventory_item</code>                 (<code>InventoryItem</code>)             </li> <li> <code>amount</code>                 (<code>float</code>)             </li> <li> <code>_cell</code>                 (<code>Cell</code>)             </li> </ul>"},{"location":"resources/sheets/#albert.resources.sheets.Component.inventory_item","title":"inventory_item","text":"<pre><code>inventory_item: InventoryItem\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Component.amount","title":"amount","text":"<pre><code>amount: float\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Component.cell","title":"cell","text":"<pre><code>cell\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.DesignState","title":"DesignState","text":"<p>               Bases: <code>BaseResource</code></p> <p>The state of a Design</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"The state of a Design\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"collapsed\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": false,\n      \"title\": \"Collapsed\"\n    }\n  },\n  \"title\": \"DesignState\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>collapsed</code>                 (<code>bool | None</code>)             </li> </ul>"},{"location":"resources/sheets/#albert.resources.sheets.DesignState.collapsed","title":"collapsed","text":"<pre><code>collapsed: bool | None = False\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Design","title":"Design","text":"<pre><code>Design(**data)\n</code></pre> <p>               Bases: <code>BaseSessionResource</code></p> <p>A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <p>The Albert ID of the design.</p> <code>design_type</code> <code>DesignType</code> <p>The type of the design. Allowed values are <code>apps</code>, <code>products</code>, and <code>results</code>.</p> <code>state</code> <code>DesignState | None</code> <p>The state of the design. Optional. Default is None.</p> <code>grid</code> <code>DataFrame | None</code> <p>The grid of the design. Optional. Default is None. Read-only.</p> <code>rows</code> <code>list[Row] | None</code> <p>The rows of the design. Optional. Default is None. Read-only.</p> <code>columns</code> <code>list[Column] | None</code> <p>The columns of the design. Optional. Default is None. Read-only.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"state\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/DesignState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": {}\n    },\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"designType\": {\n      \"$ref\": \"#/$defs/DesignType\"\n    }\n  },\n  \"required\": [\n    \"albertId\",\n    \"designType\"\n  ],\n  \"title\": \"Design\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>_session</code>                 (<code>AlbertSession | None</code>)             </li> <li> <code>state</code>                 (<code>DesignState | None</code>)             </li> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>design_type</code>                 (<code>DesignType</code>)             </li> <li> <code>_grid</code>                 (<code>DataFrame | None</code>)             </li> <li> <code>_rows</code>                 (<code>list[Row] | None</code>)             </li> <li> <code>_columns</code>                 (<code>list[Column] | None</code>)             </li> <li> <code>_sheet</code>                 (<code>Union[Sheet, None]</code>)             </li> <li> <code>_leftmost_pinned_column</code>                 (<code>str | None</code>)             </li> </ul> Source code in <code>src/albert/resources/base.py</code> <pre><code>def __init__(self, **data):\n    super().__init__(**data)\n    self._session = data.get(\"session\")\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Design.state","title":"state","text":"<pre><code>state: DesignState | None = {}\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Design.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Design.design_type","title":"design_type","text":"<pre><code>design_type: DesignType\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Design.sheet","title":"sheet","text":"<pre><code>sheet\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Design.grid","title":"grid","text":"<pre><code>grid\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Design.columns","title":"columns","text":"<pre><code>columns: list[Column]\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Design.rows","title":"rows","text":"<pre><code>rows: list[Row]\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.SheetFormulationRef","title":"SheetFormulationRef","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>A reference to a formulation in a sheet</p> Show JSON schema: <pre><code>{\n  \"description\": \"A reference to a formulation in a sheet\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"The Albert ID of the inventory item that is the formulation\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"description\": \"The name of the formulation\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"hidden\": {\n      \"description\": \"Whether the formulation is hidden\",\n      \"title\": \"Hidden\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"name\",\n    \"hidden\"\n  ],\n  \"title\": \"SheetFormulationRef\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>hidden</code>                 (<code>bool</code>)             </li> </ul>"},{"location":"resources/sheets/#albert.resources.sheets.SheetFormulationRef.id","title":"id","text":"<pre><code>id: str\n</code></pre> <p>The Albert ID of the inventory item that is the formulation</p>"},{"location":"resources/sheets/#albert.resources.sheets.SheetFormulationRef.name","title":"name","text":"<pre><code>name: str\n</code></pre> <p>The name of the formulation</p>"},{"location":"resources/sheets/#albert.resources.sheets.SheetFormulationRef.hidden","title":"hidden","text":"<pre><code>hidden: bool\n</code></pre> <p>Whether the formulation is hidden</p>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet","title":"Sheet","text":"<pre><code>Sheet(**data)\n</code></pre> <p>               Bases: <code>BaseSessionResource</code></p> <p>A Sheet in Albert</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <p>The Albert ID of the sheet.</p> <code>name</code> <code>str</code> <p>The name of the sheet.</p> <code>hidden</code> <code>bool</code> <p>Whether the sheet is hidden.</p> <code>designs</code> <code>list[Design]</code> <p>The designs of the sheet.</p> <code>project_id</code> <code>str</code> <p>The Albert ID of the project the sheet is in.</p> <code>grid</code> <code>DataFrame | None</code> <p>The grid of the sheet. Optional. Default is None. Read-only.</p> <code>columns</code> <code>list[Column]</code> <p>The columns of the sheet. Read-only.</p> <code>rows</code> <code>list[Row]</code> <p>The rows of the sheet. Read-only.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Design\": {\n      \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DesignState\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"designType\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"designType\"\n      ],\n      \"title\": \"Design\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"SheetFormulationRef\": {\n      \"description\": \"A reference to a formulation in a sheet\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The Albert ID of the inventory item that is the formulation\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"The name of the formulation\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"hidden\": {\n          \"description\": \"Whether the formulation is hidden\",\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"hidden\"\n      ],\n      \"title\": \"SheetFormulationRef\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A Sheet in Albert\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the sheet.\\nname : str\\n    The name of the sheet.\\nhidden : bool\\n    Whether the sheet is hidden.\\ndesigns : list[Design]\\n    The designs of the sheet.\\nproject_id : str\\n    The Albert ID of the project the sheet is in.\\ngrid : pd.DataFrame | None\\n    The grid of the sheet. Optional. Default is None. Read-only.\\ncolumns : list[Column]\\n    The columns of the sheet. Read-only.\\nrows : list[Row]\\n    The rows of the sheet. Read-only.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"Formulas\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/SheetFormulationRef\"\n      },\n      \"title\": \"Formulas\",\n      \"type\": \"array\"\n    },\n    \"hidden\": {\n      \"title\": \"Hidden\",\n      \"type\": \"boolean\"\n    },\n    \"Designs\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/Design\"\n      },\n      \"title\": \"Designs\",\n      \"type\": \"array\"\n    },\n    \"project_id\": {\n      \"title\": \"Project Id\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"albertId\",\n    \"name\",\n    \"hidden\",\n    \"Designs\",\n    \"project_id\"\n  ],\n  \"title\": \"Sheet\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>_session</code>                 (<code>AlbertSession | None</code>)             </li> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>formulations</code>                 (<code>list[SheetFormulationRef]</code>)             </li> <li> <code>hidden</code>                 (<code>bool</code>)             </li> <li> <code>_app_design</code>                 (<code>Design</code>)             </li> <li> <code>_product_design</code>                 (<code>Design</code>)             </li> <li> <code>_result_design</code>                 (<code>Design</code>)             </li> <li> <code>designs</code>                 (<code>list[Design]</code>)             </li> <li> <code>project_id</code>                 (<code>str</code>)             </li> <li> <code>_grid</code>                 (<code>DataFrame</code>)             </li> <li> <code>_leftmost_pinned_column</code>                 (<code>str | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>set_session</code> </li> <li> <code>set_sheet_fields</code> </li> </ul> Source code in <code>src/albert/resources/base.py</code> <pre><code>def __init__(self, **data):\n    super().__init__(**data)\n    self._session = data.get(\"session\")\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.formulations","title":"formulations","text":"<pre><code>formulations: list[SheetFormulationRef]\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.hidden","title":"hidden","text":"<pre><code>hidden: bool\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.designs","title":"designs","text":"<pre><code>designs: list[Design]\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.project_id","title":"project_id","text":"<pre><code>project_id: str\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.app_design","title":"app_design","text":"<pre><code>app_design\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.product_design","title":"product_design","text":"<pre><code>product_design\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.result_design","title":"result_design","text":"<pre><code>result_design\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.grid","title":"grid","text":"<pre><code>grid\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.leftmost_pinned_column","title":"leftmost_pinned_column","text":"<pre><code>leftmost_pinned_column\n</code></pre> <p>The leftmost pinned column in the sheet</p>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.columns","title":"columns","text":"<pre><code>columns: list[Column]\n</code></pre> <p>The columns of a given sheet</p>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.rows","title":"rows","text":"<pre><code>rows: list[Row]\n</code></pre> <p>The rows of a given sheet</p>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.set_session","title":"set_session","text":"<pre><code>set_session()\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>@model_validator(mode=\"after\")\ndef set_session(self):\n    if self.session is not None:\n        for d in self.designs:\n            d._session = self.session\n    return self\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.set_sheet_fields","title":"set_sheet_fields","text":"<pre><code>set_sheet_fields() -&gt; Sheet\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>@model_validator(mode=\"after\")\ndef set_sheet_fields(self: \"Sheet\") -&gt; \"Sheet\":\n    for _idx, d in enumerate(self.designs):  # Instead of creating a new list\n        d._sheet = self  # Set the reference to the sheet\n        if d.design_type == DesignType.APPS:\n            self._app_design = d\n        elif d.design_type == DesignType.PRODUCTS:\n            self._product_design = d\n        elif d.design_type == DesignType.RESULTS:\n            self._result_design = d\n    return self\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.rename","title":"rename","text":"<pre><code>rename(*, new_name: str)\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def rename(self, *, new_name: str):\n    endpoint = f\"/api/v3/worksheet/sheet/{self.id}\"\n\n    payload = [{\"attribute\": \"name\", \"operation\": \"update\", \"newValue\": new_name}]\n\n    self.session.patch(endpoint, json=payload)\n\n    self.name = new_name\n    return self\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.add_formulation","title":"add_formulation","text":"<pre><code>add_formulation(\n    *,\n    formulation_name: str,\n    components: list[Component],\n    enforce_order: bool = False,\n) -&gt; Column\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def add_formulation(\n    self, *, formulation_name: str, components: list[Component], enforce_order: bool = False\n) -&gt; \"Column\":\n    existing_formulation_names = [x.name for x in self.columns]\n    if formulation_name not in existing_formulation_names:\n        col = self.add_formulation_columns(formulation_names=[formulation_name])[0]\n    else:\n        # get the existing column and clear it out to put the new formulation in\n        col = self.get_column(column_name=formulation_name)\n        self._clear_formulation_from_column(column=col)\n    col_id = col.column_id\n\n    all_cells = []\n    self.grid = None  # reset the grid for saftey\n\n    for component in components:\n        row_id = self._get_row_id_for_component(\n            inventory_item=component.inventory_item,\n            existing_cells=all_cells,\n            enforce_order=enforce_order,\n        )\n        if row_id is None:\n            raise AlbertException(f\"no component with id {component.inventory_item.id}\")\n        this_cell = Cell(\n            column_id=col_id,\n            row_id=row_id,\n            value=str(component.amount),\n            calculation=\"\",\n            type=CellType.INVENTORY,\n            design_id=self.product_design.id,\n            name=formulation_name,\n            inventory_id=col.inventory_id,\n        )\n        all_cells.append(this_cell)\n\n    self.update_cells(cells=all_cells)\n    return self.get_column(column_id=col_id)\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.add_formulation_columns","title":"add_formulation_columns","text":"<pre><code>add_formulation_columns(\n    *,\n    formulation_names: list[str],\n    starting_position: dict | None = None,\n) -&gt; list[Column]\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def add_formulation_columns(\n    self,\n    *,\n    formulation_names: list[str],\n    starting_position: dict | None = None,\n) -&gt; list[\"Column\"]:\n    if starting_position is None:\n        starting_position = {\n            \"reference_id\": self.leftmost_pinned_column,\n            \"position\": \"rightOf\",\n        }\n    sheet_id = self.id\n\n    endpoint = f\"/api/v3/worksheet/sheet/{sheet_id}/columns\"\n\n    # In case a user supplied a single formulation name instead of a list\n    formulation_names = (\n        formulation_names if isinstance(formulation_names, list) else [formulation_names]\n    )\n\n    payload = []\n    for formulation_name in (\n        formulation_names\n    ):  # IS there a limit to the number I can add at once? Need to check this.\n        # define payload for this item\n        payload.append(\n            {\n                \"type\": \"INV\",\n                \"name\": formulation_name,\n                \"referenceId\": starting_position[\"reference_id\"],  # initially defined column\n                \"position\": starting_position[\"position\"],\n            }\n        )\n    response = self.session.post(endpoint, json=payload)\n\n    self.grid = None\n    new_dicts = self._reformat_formulation_addition_payload(response_json=response.json())\n    return [Column(**x) for x in new_dicts]\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.add_blank_row","title":"add_blank_row","text":"<pre><code>add_blank_row(\n    *,\n    row_name: str,\n    design: DesignType | str | None = PRODUCTS,\n    position: dict | None = None,\n)\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def add_blank_row(\n    self,\n    *,\n    row_name: str,\n    design: DesignType | str | None = DesignType.PRODUCTS,\n    position: dict | None = None,\n):\n    if design == DesignType.RESULTS:\n        raise AlbertException(\"You cannot add rows to the results design\")\n    if position is None:\n        position = {\"reference_id\": \"ROW1\", \"position\": \"above\"}\n    endpoint = f\"/api/v3/worksheet/design/{self._get_design_id(design=design)}/rows\"\n\n    payload = [\n        {\n            \"type\": \"BLK\",\n            \"name\": row_name,\n            \"referenceId\": position[\"reference_id\"],\n            \"position\": position[\"position\"],\n        }\n    ]\n\n    response = self.session.post(endpoint, json=payload)\n\n    self.grid = None\n    row_dict = response.json()[0]\n    return Row(\n        rowId=row_dict[\"rowId\"],\n        type=row_dict[\"type\"],\n        session=self.session,\n        design=self._get_design(design=design),\n        name=row_dict[\"name\"],\n        sheet=self,\n    )\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.add_inventory_row","title":"add_inventory_row","text":"<pre><code>add_inventory_row(\n    *, inventory_id: str, position: dict | None = None\n)\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def add_inventory_row(\n    self,\n    *,\n    inventory_id: str,\n    position: dict | None = None,\n):\n    if position is None:\n        position = {\"reference_id\": \"ROW1\", \"position\": \"above\"}\n    design_id = self.product_design.id\n    endpoint = f\"/api/v3/worksheet/design/{design_id}/rows\"\n\n    payload = {\n        \"type\": \"INV\",\n        \"id\": (\"INV\" + inventory_id if not inventory_id.startswith(\"INV\") else inventory_id),\n        \"referenceId\": position[\"reference_id\"],\n        \"position\": position[\"position\"],\n    }\n\n    response = self.session.post(endpoint, json=payload)\n\n    self.grid = None\n    row_dict = response.json()\n    return Row(\n        rowId=row_dict[\"rowId\"],\n        inventory_id=inventory_id,\n        type=row_dict[\"type\"],\n        session=self.session,\n        design=self.product_design,\n        sheet=self,\n        name=row_dict[\"name\"],\n        id=row_dict[\"id\"],\n        manufacturer=row_dict[\"manufacturer\"],\n    )\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.update_cells","title":"update_cells","text":"<pre><code>update_cells(*, cells: list[Cell])\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def update_cells(self, *, cells: list[Cell]):\n    request_path_dict = {}\n    updated = []\n    failed = []\n    # sort by design ID\n    for c in cells:\n        if c.design_id not in request_path_dict:\n            request_path_dict[c.design_id] = [c]\n        else:\n            request_path_dict[c.design_id].append(c)\n\n    for design_id, cell_list in request_path_dict.items():\n        payload = []\n        for cell in cell_list:\n            change_dict = self._get_cell_changes(cell=cell)\n            if change_dict is not None:\n                payload.append(change_dict)\n\n        if payload == []:\n            continue\n\n        this_url = f\"/api/v3/worksheet/{design_id}/values\"\n        response = self.session.patch(\n            this_url,\n            json=payload,\n        )\n\n        if response.status_code == 204:\n            # They all updated\n            updated.extend(cell_list)\n        elif response.status_code == 206:\n            # Some updated and some did not.\n            cell_results = self._filter_cells(cells=cell_list, response_dict=response.json())\n            updated.extend(cell_results[0])\n            failed.extend(cell_results[1])\n    # reset the in-memory grid after updates\n    self.grid = None\n    return (updated, failed)\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.add_blank_column","title":"add_blank_column","text":"<pre><code>add_blank_column(*, name: str, position: dict = None)\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def add_blank_column(self, *, name: str, position: dict = None):\n    if position is None:\n        position = {\"reference_id\": self.leftmost_pinned_column, \"position\": \"rightOf\"}\n    endpoint = f\"/api/v3/worksheet/sheet/{self.id}/columns\"\n    payload = [\n        {\n            \"type\": \"BLK\",\n            \"name\": name,\n            \"referenceId\": position[\"reference_id\"],\n            \"position\": position[\"position\"],\n        }\n    ]\n\n    response = self.session.post(endpoint, json=payload)\n\n    data = response.json()\n    data[0][\"sheet\"] = self\n    data[0][\"session\"] = self.session\n    self.grid = None  # reset the known grid. We could probably make this nicer later.\n    return Column(**data[0])\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.delete_column","title":"delete_column","text":"<pre><code>delete_column(*, column_id: str) -&gt; None\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def delete_column(self, *, column_id: str) -&gt; None:\n    endpoint = f\"/api/v3/worksheet/sheet/{self.id}/columns\"\n    payload = [{\"colId\": column_id}]\n    self.session.delete(endpoint, json=payload)\n\n    if self._grid is not None:  # if I have a grid loaded into memory, adjust it.\n        self.grid = None\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.delete_row","title":"delete_row","text":"<pre><code>delete_row(*, row_id: str, design_id: str) -&gt; None\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def delete_row(self, *, row_id: str, design_id: str) -&gt; None:\n    endpoint = f\"/api/v3/worksheet/design/{design_id}/rows\"\n    payload = [{\"rowId\": row_id}]\n    self.session.delete(endpoint, json=payload)\n\n    if self._grid is not None:  # if I have a grid loaded into memory, adjust it.\n        self.grid = None\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Sheet.get_column","title":"get_column","text":"<pre><code>get_column(\n    *,\n    column_id: None | str = None,\n    column_name: str | None = None,\n)\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def get_column(self, *, column_id: None | str = None, column_name: str | None = None):\n    if column_id is None and column_name is None:\n        raise AlbertException(\"Either a column name or id must be provided\")\n    else:\n        matching_series = self._find_column(column_id=column_id, column_name=column_name)\n        first_item = matching_series.iloc[0]\n        inv_id = first_item.inventory_id\n        if inv_id is not None and not inv_id.startswith(\"INV\"):\n            inv_id = \"INV\" + inv_id\n        return Column(\n            name=first_item.name,\n            colId=first_item.column_id,\n            type=first_item.type,\n            sheet=self,\n            session=self.session,\n            inventory_id=first_item.inventory_id,\n        )\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column","title":"Column","text":"<pre><code>Column(**data)\n</code></pre> <p>               Bases: <code>BaseSessionResource</code></p> <p>A column in a Sheet</p> <p>Attributes:</p> Name Type Description <code>column_id</code> <code>str</code> <p>The column ID of the column.</p> <code>name</code> <code>str | None</code> <p>The name of the column. Optional. Default is None.</p> <code>type</code> <code>CellType</code> <p>The type of the column. Allowed values are <code>INV</code>, <code>APP</code>, <code>BLK</code>, <code>Formula</code>, <code>TAG</code>, <code>PRC</code>, <code>PDC</code>, <code>BAT</code>, <code>TOT</code>, <code>TAS</code>, <code>DEF</code>, <code>LKP</code>, <code>FOR</code>, and <code>EXTINV</code>.</p> <code>sheet</code> <code>Sheet</code> <p>The sheet the column is in.</p> <code>cells</code> <code>list[Cell]</code> <p>The cells in the column. Read-only.</p> <code>df_name</code> <code>str</code> <p>The name of the column in the DataFrame. Read-only</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"CellType\": {\n      \"description\": \"The type of information in the Cell\",\n      \"enum\": [\n        \"INV\",\n        \"APP\",\n        \"BLK\",\n        \"Formula\",\n        \"TAG\",\n        \"PRC\",\n        \"PDC\",\n        \"BAT\",\n        \"TOT\",\n        \"TAS\",\n        \"DEF\",\n        \"LKP\",\n        \"FOR\",\n        \"EXTINV\",\n        \"BTI\"\n      ],\n      \"title\": \"CellType\",\n      \"type\": \"string\"\n    },\n    \"Design\": {\n      \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DesignState\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"designType\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"designType\"\n      ],\n      \"title\": \"Design\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"Sheet\": {\n      \"description\": \"A Sheet in Albert\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the sheet.\\nname : str\\n    The name of the sheet.\\nhidden : bool\\n    Whether the sheet is hidden.\\ndesigns : list[Design]\\n    The designs of the sheet.\\nproject_id : str\\n    The Albert ID of the project the sheet is in.\\ngrid : pd.DataFrame | None\\n    The grid of the sheet. Optional. Default is None. Read-only.\\ncolumns : list[Column]\\n    The columns of the sheet. Read-only.\\nrows : list[Row]\\n    The rows of the sheet. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"Formulas\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/SheetFormulationRef\"\n          },\n          \"title\": \"Formulas\",\n          \"type\": \"array\"\n        },\n        \"hidden\": {\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Designs\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Design\"\n          },\n          \"title\": \"Designs\",\n          \"type\": \"array\"\n        },\n        \"project_id\": {\n          \"title\": \"Project Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"name\",\n        \"hidden\",\n        \"Designs\",\n        \"project_id\"\n      ],\n      \"title\": \"Sheet\",\n      \"type\": \"object\"\n    },\n    \"SheetFormulationRef\": {\n      \"description\": \"A reference to a formulation in a sheet\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The Albert ID of the inventory item that is the formulation\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"The name of the formulation\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"hidden\": {\n          \"description\": \"Whether the formulation is hidden\",\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"hidden\"\n      ],\n      \"title\": \"SheetFormulationRef\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A column in a Sheet\\n\\nAttributes\\n----------\\ncolumn_id : str\\n    The column ID of the column.\\nname : str | None\\n    The name of the column. Optional. Default is None.\\ntype : CellType\\n    The type of the column. Allowed values are `INV`, `APP`, `BLK`, `Formula`, `TAG`, `PRC`, `PDC`, `BAT`, `TOT`, `TAS`, `DEF`, `LKP`, `FOR`, and `EXTINV`.\\nsheet : Sheet\\n    The sheet the column is in.\\ncells : list[Cell]\\n    The cells in the column. Read-only.\\ndf_name : str\\n    The name of the column in the DataFrame. Read-only\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"colId\": {\n      \"title\": \"Colid\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"type\": {\n      \"$ref\": \"#/$defs/CellType\"\n    },\n    \"sheet\": {\n      \"$ref\": \"#/$defs/Sheet\"\n    },\n    \"inventory_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventory Id\"\n    }\n  },\n  \"required\": [\n    \"colId\",\n    \"type\",\n    \"sheet\"\n  ],\n  \"title\": \"Column\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>_session</code>                 (<code>AlbertSession | None</code>)             </li> <li> <code>column_id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>type</code>                 (<code>CellType</code>)             </li> <li> <code>sheet</code>                 (<code>Sheet</code>)             </li> <li> <code>inventory_id</code>                 (<code>str | None</code>)             </li> <li> <code>_cells</code>                 (<code>list[Cell] | None</code>)             </li> </ul> Source code in <code>src/albert/resources/base.py</code> <pre><code>def __init__(self, **data):\n    super().__init__(**data)\n    self._session = data.get(\"session\")\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column.column_id","title":"column_id","text":"<pre><code>column_id: str\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column.type","title":"type","text":"<pre><code>type: CellType\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column.sheet","title":"sheet","text":"<pre><code>sheet: Sheet\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: str | None = None\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column.df_name","title":"df_name","text":"<pre><code>df_name\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column.cells","title":"cells","text":"<pre><code>cells: list[Cell]\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column.rename","title":"rename","text":"<pre><code>rename(new_name)\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def rename(self, new_name):\n    payload = {\n        \"data\": [\n            {\n                \"operation\": \"update\",\n                \"attribute\": \"name\",\n                \"colId\": self.column_id,\n                \"oldValue\": self.name,\n                \"newValue\": new_name,\n            }\n        ]\n    }\n\n    self.session.patch(\n        url=f\"/api/v3/worksheet/sheet/{self.sheet.id}/columns\",\n        json=payload,\n    )\n\n    if self.sheet._grid is not None:  # if I have a grid loaded into memory, adjust it.\n        self.sheet.grid = None\n        # self.sheet._grid.rename(axis=1, mapper={self.name:new_name})\n    self.name = new_name\n    return self\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Column.recolor_cells","title":"recolor_cells","text":"<pre><code>recolor_cells(color: CellColor)\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def recolor_cells(self, color: CellColor):\n    new_cells = []\n    for c in self.cells:\n        cell_copy = c.model_copy(update={\"format\": {\"bgColor\": color.value}})\n        new_cells.append(cell_copy)\n    return self.sheet.update_cells(cells=new_cells)\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row","title":"Row","text":"<pre><code>Row(**data)\n</code></pre> <p>               Bases: <code>BaseSessionResource</code></p> <p>A row in a Sheet</p> <p>Attributes:</p> Name Type Description <code>row_id</code> <code>str</code> <p>The row ID of the row.</p> <code>type</code> <code>CellType</code> <p>The type of the row. Allowed values are <code>INV</code>, <code>APP</code>, <code>BLK</code>, <code>Formula</code>, <code>TAG</code>, <code>PRC</code>, <code>PDC</code>, <code>BAT</code>, <code>TOT</code>, <code>TAS</code>, <code>DEF</code>, <code>LKP</code>, <code>FOR</code>, and <code>EXTINV</code>.</p> <code>design</code> <code>Design</code> <p>The design the row is in.</p> <code>sheet</code> <code>Sheet</code> <p>The sheet the row is in.</p> <code>name</code> <code>str | None</code> <p>The name of the row. Optional. Default is None.</p> <code>inventory_id</code> <code>str | None</code> <p>The inventory ID of the row. Optional. Default is None.</p> <code>manufacturer</code> <code>str | None</code> <p>The manufacturer of the row. Optional. Default is None.</p> <code>row_unique_id</code> <code>str</code> <p>The unique ID of the row. Read-only.</p> <code>cells</code> <code>list[Cell]</code> <p>The cells in the row. Read-only.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"CellType\": {\n      \"description\": \"The type of information in the Cell\",\n      \"enum\": [\n        \"INV\",\n        \"APP\",\n        \"BLK\",\n        \"Formula\",\n        \"TAG\",\n        \"PRC\",\n        \"PDC\",\n        \"BAT\",\n        \"TOT\",\n        \"TAS\",\n        \"DEF\",\n        \"LKP\",\n        \"FOR\",\n        \"EXTINV\",\n        \"BTI\"\n      ],\n      \"title\": \"CellType\",\n      \"type\": \"string\"\n    },\n    \"Design\": {\n      \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DesignState\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"designType\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"designType\"\n      ],\n      \"title\": \"Design\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"Sheet\": {\n      \"description\": \"A Sheet in Albert\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the sheet.\\nname : str\\n    The name of the sheet.\\nhidden : bool\\n    Whether the sheet is hidden.\\ndesigns : list[Design]\\n    The designs of the sheet.\\nproject_id : str\\n    The Albert ID of the project the sheet is in.\\ngrid : pd.DataFrame | None\\n    The grid of the sheet. Optional. Default is None. Read-only.\\ncolumns : list[Column]\\n    The columns of the sheet. Read-only.\\nrows : list[Row]\\n    The rows of the sheet. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"Formulas\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/SheetFormulationRef\"\n          },\n          \"title\": \"Formulas\",\n          \"type\": \"array\"\n        },\n        \"hidden\": {\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Designs\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Design\"\n          },\n          \"title\": \"Designs\",\n          \"type\": \"array\"\n        },\n        \"project_id\": {\n          \"title\": \"Project Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"name\",\n        \"hidden\",\n        \"Designs\",\n        \"project_id\"\n      ],\n      \"title\": \"Sheet\",\n      \"type\": \"object\"\n    },\n    \"SheetFormulationRef\": {\n      \"description\": \"A reference to a formulation in a sheet\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The Albert ID of the inventory item that is the formulation\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"The name of the formulation\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"hidden\": {\n          \"description\": \"Whether the formulation is hidden\",\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"hidden\"\n      ],\n      \"title\": \"SheetFormulationRef\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A row in a Sheet\\n\\nAttributes\\n----------\\nrow_id : str\\n    The row ID of the row.\\ntype : CellType\\n    The type of the row. Allowed values are `INV`, `APP`, `BLK`, `Formula`, `TAG`, `PRC`, `PDC`, `BAT`, `TOT`, `TAS`, `DEF`, `LKP`, `FOR`, and `EXTINV`.\\ndesign : Design\\n    The design the row is in.\\nsheet : Sheet\\n    The sheet the row is in.\\nname : str | None\\n    The name of the row. Optional. Default is None.\\ninventory_id : str | None\\n    The inventory ID of the row. Optional. Default is None.\\nmanufacturer : str | None\\n    The manufacturer of the row. Optional. Default is None.\\nrow_unique_id : str\\n    The unique ID of the row. Read-only.\\ncells : list[Cell]\\n    The cells in the row. Read-only.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"rowId\": {\n      \"title\": \"Rowid\",\n      \"type\": \"string\"\n    },\n    \"type\": {\n      \"$ref\": \"#/$defs/CellType\"\n    },\n    \"design\": {\n      \"$ref\": \"#/$defs/Design\"\n    },\n    \"sheet\": {\n      \"$ref\": \"#/$defs/Sheet\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"manufacturer\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Manufacturer\"\n    }\n  },\n  \"required\": [\n    \"rowId\",\n    \"type\",\n    \"design\",\n    \"sheet\"\n  ],\n  \"title\": \"Row\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>_session</code>                 (<code>AlbertSession | None</code>)             </li> <li> <code>row_id</code>                 (<code>str</code>)             </li> <li> <code>type</code>                 (<code>CellType</code>)             </li> <li> <code>design</code>                 (<code>Design</code>)             </li> <li> <code>sheet</code>                 (<code>Sheet</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>inventory_id</code>                 (<code>str | None</code>)             </li> <li> <code>manufacturer</code>                 (<code>str | None</code>)             </li> </ul> Source code in <code>src/albert/resources/base.py</code> <pre><code>def __init__(self, **data):\n    super().__init__(**data)\n    self._session = data.get(\"session\")\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.row_id","title":"row_id","text":"<pre><code>row_id: str\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.type","title":"type","text":"<pre><code>type: CellType\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.design","title":"design","text":"<pre><code>design: Design\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.sheet","title":"sheet","text":"<pre><code>sheet: Sheet\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: str | None = None\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.manufacturer","title":"manufacturer","text":"<pre><code>manufacturer: str | None = None\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.row_unique_id","title":"row_unique_id","text":"<pre><code>row_unique_id\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.cells","title":"cells","text":"<pre><code>cells: list[Cell]\n</code></pre>"},{"location":"resources/sheets/#albert.resources.sheets.Row.recolor_cells","title":"recolor_cells","text":"<pre><code>recolor_cells(color: CellColor)\n</code></pre> Source code in <code>src/albert/resources/sheets.py</code> <pre><code>def recolor_cells(self, color: CellColor):\n    new_cells = []\n    for c in self.cells:\n        cell_copy = c.model_copy(update={\"format\": {\"bgColor\": color.value}})\n        cell_copy.format = {\"bgColor\": color.value}\n        new_cells.append(cell_copy)\n    return self.sheet.update_cells(cells=new_cells)\n</code></pre>"},{"location":"resources/storage_locations/","title":"Storage Locations","text":""},{"location":"resources/storage_locations/#albert.resources.storage_locations","title":"albert.resources.storage_locations","text":""},{"location":"resources/storage_locations/#albert.resources.storage_locations.StorageLocation","title":"StorageLocation","text":"<p>               Bases: <code>BaseResource</code></p> <p>A storage location entity. For example, a specific flammables cabinet or a storage room.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the storage location.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the storage location. Set when the storage location is retrieved from Albert.</p> <code>location</code> <code>Location</code> <p>The location entity link of the storage location.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A storage location entity. For example, a specific flammables cabinet or a storage room.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the storage location.\\nid : str | None\\n    The Albert ID of the storage location. Set when the storage location is retrieved from Albert.\\nlocation : Location\\n    The location entity link of the storage location.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"maxLength\": 255,\n      \"minLength\": 2,\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        }\n      ],\n      \"title\": \"Location\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"Location\"\n  ],\n  \"title\": \"StorageLocation\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location]</code>)             </li> </ul>"},{"location":"resources/storage_locations/#albert.resources.storage_locations.StorageLocation.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/storage_locations/#albert.resources.storage_locations.StorageLocation.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/storage_locations/#albert.resources.storage_locations.StorageLocation.location","title":"location","text":"<pre><code>location: SerializeAsEntityLink[Location]\n</code></pre>"},{"location":"resources/substances/","title":"Substances","text":""},{"location":"resources/substances/#albert.resources.substance","title":"albert.resources.substance","text":""},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo","title":"ToxicityInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>ToxicityInfo is a Pydantic model representing toxicity information.</p> <p>Attributes:</p> Name Type Description <code>result</code> <code>str | None</code> <p>The result of the toxicity test.</p> <code>roe</code> <code>str | None</code> <p>The reference exposure level.</p> <code>unit</code> <code>str | None</code> <p>The unit of the toxicity test.</p> <code>method</code> <code>str | None</code> <p>The method of the toxicity test.</p> <code>value</code> <code>float | None</code> <p>The value of the toxicity test.</p> <code>species</code> <code>str | None</code> <p>The species of the toxicity test.</p> <code>sex</code> <code>str | None</code> <p>The sex of the toxicity test.</p> <code>exposure_time</code> <code>str | None</code> <p>The exposure time of the toxicity test.</p> <code>type</code> <code>str | None</code> <p>The type of the toxicity test.</p> <code>value_type</code> <code>str | None</code> <p>The value type of the toxicity test.</p> <code>temperature</code> <code>str | None</code> <p>The temperature of the toxicity test.</p> Show JSON schema: <pre><code>{\n  \"description\": \"ToxicityInfo is a Pydantic model representing toxicity information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the toxicity test.\\nroe : str | None\\n    The reference exposure level.\\nunit : str | None\\n    The unit of the toxicity test.\\nmethod: str | None\\n    The method of the toxicity test.\\nvalue: float | None\\n    The value of the toxicity test.\\nspecies: str | None\\n    The species of the toxicity test.\\nsex: str | None\\n    The sex of the toxicity test.\\nexposure_time: str | None\\n    The exposure time of the toxicity test.\\ntype: str | None\\n    The type of the toxicity test.\\nvalue_type: str | None\\n    The value type of the toxicity test.\\ntemperature: str | None\\n    The temperature of the toxicity test.\",\n  \"properties\": {\n    \"result\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Result\"\n    },\n    \"roe\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Roe\"\n    },\n    \"unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"method\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Method\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"species\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Species\"\n    },\n    \"sex\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sex\"\n    },\n    \"exposureTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exposuretime\"\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Type\"\n    },\n    \"valueType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Valuetype\"\n    },\n    \"temperature\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Temperature\"\n    }\n  },\n  \"title\": \"ToxicityInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>result</code>                 (<code>str | None</code>)             </li> <li> <code>roe</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> <li> <code>method</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>species</code>                 (<code>str | None</code>)             </li> <li> <code>sex</code>                 (<code>str | None</code>)             </li> <li> <code>exposure_time</code>                 (<code>str | None</code>)             </li> <li> <code>type</code>                 (<code>str | None</code>)             </li> <li> <code>value_type</code>                 (<code>str | None</code>)             </li> <li> <code>temperature</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.result","title":"result","text":"<pre><code>result: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.roe","title":"roe","text":"<pre><code>roe: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.method","title":"method","text":"<pre><code>method: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.species","title":"species","text":"<pre><code>species: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.sex","title":"sex","text":"<pre><code>sex: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.exposure_time","title":"exposure_time","text":"<pre><code>exposure_time: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.type","title":"type","text":"<pre><code>type: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.value_type","title":"value_type","text":"<pre><code>value_type: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ToxicityInfo.temperature","title":"temperature","text":"<pre><code>temperature: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BioAccumulativeInfo","title":"BioAccumulativeInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>BioAccumulativeInfo is a Pydantic model representing bioaccumulative information.</p> <p>Attributes:</p> Name Type Description <code>bcf_value</code> <code>str | None</code> <p>The bioaccumulative factor value.</p> <code>temperature</code> <code>str | None</code> <p>The temperature of the bioaccumulative test.</p> <code>exposure_time</code> <code>str | None</code> <p>The exposure time of the bioaccumulative test.</p> <code>method</code> <code>str | None</code> <p>The method of the bioaccumulative test.</p> <code>species</code> <code>str | None</code> <p>The species of the bioaccumulative test.</p> Show JSON schema: <pre><code>{\n  \"description\": \"BioAccumulativeInfo is a Pydantic model representing bioaccumulative information.\\n\\nAttributes\\n----------\\nbcf_value : str | None\\n    The bioaccumulative factor value.\\ntemperature : str | None\\n    The temperature of the bioaccumulative test.\\nexposure_time : str | None\\n    The exposure time of the bioaccumulative test.\\nmethod : str | None\\n    The method of the bioaccumulative test.\\nspecies : str | None\\n    The species of the bioaccumulative test.\",\n  \"properties\": {\n    \"bcfValue\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Bcfvalue\"\n    },\n    \"temperature\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Temperature\"\n    },\n    \"exposureTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exposuretime\"\n    },\n    \"method\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Method\"\n    },\n    \"species\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Species\"\n    }\n  },\n  \"title\": \"BioAccumulativeInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>bcf_value</code>                 (<code>str | None</code>)             </li> <li> <code>temperature</code>                 (<code>str | None</code>)             </li> <li> <code>exposure_time</code>                 (<code>str | None</code>)             </li> <li> <code>method</code>                 (<code>str | None</code>)             </li> <li> <code>species</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.BioAccumulativeInfo.bcf_value","title":"bcf_value","text":"<pre><code>bcf_value: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BioAccumulativeInfo.temperature","title":"temperature","text":"<pre><code>temperature: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BioAccumulativeInfo.exposure_time","title":"exposure_time","text":"<pre><code>exposure_time: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BioAccumulativeInfo.method","title":"method","text":"<pre><code>method: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BioAccumulativeInfo.species","title":"species","text":"<pre><code>species: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointValue","title":"BoilingPointValue","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>BoilingPointValue is a Pydantic model representing a boiling point value.</p> <p>Attributes:</p> Name Type Description <code>min_value</code> <code>str | None</code> <p>The minimum boiling point value.</p> <code>max_value</code> <code>str | None</code> <p>The maximum boiling point value.</p> <code>unit</code> <code>str | None</code> <p>The unit of the boiling point value.</p> Show JSON schema: <pre><code>{\n  \"description\": \"BoilingPointValue is a Pydantic model representing a boiling point value.\\n\\nAttributes\\n----------\\nmin_value : str | None\\n    The minimum boiling point value.\\nmax_value : str | None\\n    The maximum boiling point value.\\nunit : str | None\\n    The unit of the boiling point value.\",\n  \"properties\": {\n    \"minValue\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Minvalue\"\n    },\n    \"maxValue\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Maxvalue\"\n    },\n    \"unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    }\n  },\n  \"title\": \"BoilingPointValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>min_value</code>                 (<code>str | None</code>)             </li> <li> <code>max_value</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointValue.min_value","title":"min_value","text":"<pre><code>min_value: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointValue.max_value","title":"max_value","text":"<pre><code>max_value: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointValue.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointSource","title":"BoilingPointSource","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>BoilingPointSource is a Pydantic model representing a boiling point source.</p> <p>Attributes:</p> Name Type Description <code>note_code</code> <code>str | None</code> <p>The note code of the boiling point source.</p> <code>note</code> <code>str | None</code> <p>The note of the boiling point source.</p> <code>note_field</code> <code>str | None</code> <p>The note field of the boiling point source.</p> Show JSON schema: <pre><code>{\n  \"description\": \"BoilingPointSource is a Pydantic model representing a boiling point source.\\n\\nAttributes\\n----------\\nnote_code : str | None\\n    The note code of the boiling point source.\\nnote : str | None\\n    The note of the boiling point source.\\nnote_field : str | None\\n    The note field of the boiling point source.\",\n  \"properties\": {\n    \"noteCode\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Notecode\"\n    },\n    \"note\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Note\"\n    },\n    \"noteField\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Notefield\"\n    }\n  },\n  \"title\": \"BoilingPointSource\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>note_code</code>                 (<code>str | None</code>)             </li> <li> <code>note</code>                 (<code>str | None</code>)             </li> <li> <code>note_field</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointSource.note_code","title":"note_code","text":"<pre><code>note_code: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointSource.note","title":"note","text":"<pre><code>note: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointSource.note_field","title":"note_field","text":"<pre><code>note_field: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointInfo","title":"BoilingPointInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>BoilingPointInfo is a Pydantic model representing boiling point information.</p> <p>Attributes:</p> Name Type Description <code>source</code> <code>list[BoilingPointSource] | None</code> <p>The source of the boiling point information.</p> <code>values</code> <code>list[BoilingPointValue] | None</code> <p>The values of the boiling point information.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BoilingPointSource\": {\n      \"description\": \"BoilingPointSource is a Pydantic model representing a boiling point source.\\n\\nAttributes\\n----------\\nnote_code : str | None\\n    The note code of the boiling point source.\\nnote : str | None\\n    The note of the boiling point source.\\nnote_field : str | None\\n    The note field of the boiling point source.\",\n      \"properties\": {\n        \"noteCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Notecode\"\n        },\n        \"note\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Note\"\n        },\n        \"noteField\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Notefield\"\n        }\n      },\n      \"title\": \"BoilingPointSource\",\n      \"type\": \"object\"\n    },\n    \"BoilingPointValue\": {\n      \"description\": \"BoilingPointValue is a Pydantic model representing a boiling point value.\\n\\nAttributes\\n----------\\nmin_value : str | None\\n    The minimum boiling point value.\\nmax_value : str | None\\n    The maximum boiling point value.\\nunit : str | None\\n    The unit of the boiling point value.\",\n      \"properties\": {\n        \"minValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minvalue\"\n        },\n        \"maxValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Maxvalue\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"BoilingPointValue\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"BoilingPointInfo is a Pydantic model representing boiling point information.\\n\\nAttributes\\n----------\\nsource : list[BoilingPointSource] | None\\n    The source of the boiling point information.\\nvalues : list[BoilingPointValue] | None\\n    The values of the boiling point information.\",\n  \"properties\": {\n    \"source\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/BoilingPointSource\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Source\"\n    },\n    \"values\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/BoilingPointValue\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Values\"\n    }\n  },\n  \"title\": \"BoilingPointInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>source</code>                 (<code>list[BoilingPointSource] | None</code>)             </li> <li> <code>values</code>                 (<code>list[BoilingPointValue] | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointInfo.source","title":"source","text":"<pre><code>source: list[BoilingPointSource] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.BoilingPointInfo.values","title":"values","text":"<pre><code>values: list[BoilingPointValue] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DegradabilityInfo","title":"DegradabilityInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>DegradabilityInfo is a Pydantic model representing information about the degradability of a substance.</p> <p>Attributes:</p> Name Type Description <code>result</code> <code>str | None</code> <p>The result of the degradability test.</p> <code>unit</code> <code>str | None</code> <p>The unit of measurement for the degradability test.</p> <code>exposure_time</code> <code>str | None</code> <p>The exposure time of the degradability test.</p> <code>method</code> <code>str | None</code> <p>The method used for the degradability test.</p> <code>test_type</code> <code>str | None</code> <p>The type of the degradability test.</p> <code>degradability</code> <code>str | None</code> <p>The degradability classification.</p> <code>value</code> <code>str | None</code> <p>The value of the degradability test.</p> Show JSON schema: <pre><code>{\n  \"description\": \"DegradabilityInfo is a Pydantic model representing information about the degradability of a substance.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the degradability test.\\nunit : str | None\\n    The unit of measurement for the degradability test.\\nexposure_time : str | None\\n    The exposure time of the degradability test.\\nmethod : str | None\\n    The method used for the degradability test.\\ntest_type : str | None\\n    The type of the degradability test.\\ndegradability : str | None\\n    The degradability classification.\\nvalue : str | None\\n    The value of the degradability test.\",\n  \"properties\": {\n    \"result\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Result\"\n    },\n    \"unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"exposureTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exposuretime\"\n    },\n    \"method\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Method\"\n    },\n    \"testType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Testtype\"\n    },\n    \"degradability\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Degradability\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    }\n  },\n  \"title\": \"DegradabilityInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>result</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> <li> <code>exposure_time</code>                 (<code>str | None</code>)             </li> <li> <code>method</code>                 (<code>str | None</code>)             </li> <li> <code>test_type</code>                 (<code>str | None</code>)             </li> <li> <code>degradability</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.DegradabilityInfo.result","title":"result","text":"<pre><code>result: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DegradabilityInfo.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DegradabilityInfo.exposure_time","title":"exposure_time","text":"<pre><code>exposure_time: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DegradabilityInfo.method","title":"method","text":"<pre><code>method: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DegradabilityInfo.test_type","title":"test_type","text":"<pre><code>test_type: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DegradabilityInfo.degradability","title":"degradability","text":"<pre><code>degradability: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DegradabilityInfo.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DNELInfo","title":"DNELInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>DNELInfo is a Pydantic model representing the Derived No Effect Level (DNEL) information.</p> <p>Attributes:</p> Name Type Description <code>roe</code> <code>str | None</code> <p>The reference exposure level.</p> <code>health_effect</code> <code>str | None</code> <p>The health effect associated with the exposure.</p> <code>exposure_time</code> <code>str | None</code> <p>The exposure time for the DNEL.</p> <code>application_area</code> <code>str | None</code> <p>The area of application for the DNEL.</p> <code>value</code> <code>str | None</code> <p>The DNEL value.</p> <code>remarks</code> <code>str | None</code> <p>Any additional remarks regarding the DNEL.</p> Show JSON schema: <pre><code>{\n  \"description\": \"DNELInfo is a Pydantic model representing the Derived No Effect Level (DNEL) information.\\n\\nAttributes\\n----------\\nroe : str | None\\n    The reference exposure level.\\nhealth_effect : str | None\\n    The health effect associated with the exposure.\\nexposure_time : str | None\\n    The exposure time for the DNEL.\\napplication_area : str | None\\n    The area of application for the DNEL.\\nvalue : str | None\\n    The DNEL value.\\nremarks : str | None\\n    Any additional remarks regarding the DNEL.\",\n  \"properties\": {\n    \"roe\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Roe\"\n    },\n    \"healthEffect\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Healtheffect\"\n    },\n    \"exposureTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exposuretime\"\n    },\n    \"applicationArea\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Applicationarea\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"remarks\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Remarks\"\n    }\n  },\n  \"title\": \"DNELInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>roe</code>                 (<code>str | None</code>)             </li> <li> <code>health_effect</code>                 (<code>str | None</code>)             </li> <li> <code>exposure_time</code>                 (<code>str | None</code>)             </li> <li> <code>application_area</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> <li> <code>remarks</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.DNELInfo.roe","title":"roe","text":"<pre><code>roe: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DNELInfo.health_effect","title":"health_effect","text":"<pre><code>health_effect: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DNELInfo.exposure_time","title":"exposure_time","text":"<pre><code>exposure_time: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DNELInfo.application_area","title":"application_area","text":"<pre><code>application_area: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DNELInfo.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.DNELInfo.remarks","title":"remarks","text":"<pre><code>remarks: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration","title":"LethalDoseConcentration","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>LethalDoseConcentration is a Pydantic model representing lethal dose and concentration information.</p> <p>Attributes:</p> Name Type Description <code>duration</code> <code>str | None</code> <p>The duration of the exposure.</p> <code>unit</code> <code>str | None</code> <p>The unit of measurement for the lethal dose.</p> <code>type</code> <code>str | None</code> <p>The type of the lethal dose.</p> <code>species</code> <code>str | None</code> <p>The species tested.</p> <code>value</code> <code>float | None</code> <p>The lethal dose value.</p> <code>sex</code> <code>str | None</code> <p>The sex of the species tested.</p> <code>exposure_time</code> <code>str | None</code> <p>The exposure time for the lethal dose test.</p> <code>method</code> <code>str | None</code> <p>The method used for the lethal dose test.</p> <code>test_atmosphere</code> <code>str | None</code> <p>The atmosphere in which the test was conducted.</p> Show JSON schema: <pre><code>{\n  \"description\": \"LethalDoseConcentration is a Pydantic model representing lethal dose and concentration information.\\n\\nAttributes\\n----------\\nduration : str | None\\n    The duration of the exposure.\\nunit : str | None\\n    The unit of measurement for the lethal dose.\\ntype : str | None\\n    The type of the lethal dose.\\nspecies : str | None\\n    The species tested.\\nvalue : float | None\\n    The lethal dose value.\\nsex : str | None\\n    The sex of the species tested.\\nexposure_time : str | None\\n    The exposure time for the lethal dose test.\\nmethod : str | None\\n    The method used for the lethal dose test.\\ntest_atmosphere : str | None\\n    The atmosphere in which the test was conducted.\",\n  \"properties\": {\n    \"duration\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Duration\"\n    },\n    \"unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Type\"\n    },\n    \"species\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Species\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"sex\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sex\"\n    },\n    \"exposureTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exposuretime\"\n    },\n    \"method\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Method\"\n    },\n    \"testAtmosphere\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Testatmosphere\"\n    }\n  },\n  \"title\": \"LethalDoseConcentration\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>duration</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> <li> <code>type</code>                 (<code>str | None</code>)             </li> <li> <code>species</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>sex</code>                 (<code>str | None</code>)             </li> <li> <code>exposure_time</code>                 (<code>str | None</code>)             </li> <li> <code>method</code>                 (<code>str | None</code>)             </li> <li> <code>test_atmosphere</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration.duration","title":"duration","text":"<pre><code>duration: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration.type","title":"type","text":"<pre><code>type: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration.species","title":"species","text":"<pre><code>species: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration.sex","title":"sex","text":"<pre><code>sex: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration.exposure_time","title":"exposure_time","text":"<pre><code>exposure_time: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration.method","title":"method","text":"<pre><code>method: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.LethalDoseConcentration.test_atmosphere","title":"test_atmosphere","text":"<pre><code>test_atmosphere: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ExposureControl","title":"ExposureControl","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>ExposureControl is a Pydantic model representing exposure control measures.</p> <p>Attributes:</p> Name Type Description <code>type</code> <code>str | None</code> <p>The type of exposure control.</p> <code>value</code> <code>float | None</code> <p>The value associated with the exposure control.</p> <code>unit</code> <code>str | None</code> <p>The unit of measurement for the exposure control.</p> Show JSON schema: <pre><code>{\n  \"description\": \"ExposureControl is a Pydantic model representing exposure control measures.\\n\\nAttributes\\n----------\\ntype : str | None\\n    The type of exposure control.\\nvalue : float | None\\n    The value associated with the exposure control.\\nunit : str | None\\n    The unit of measurement for the exposure control.\",\n  \"properties\": {\n    \"type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Type\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    }\n  },\n  \"title\": \"ExposureControl\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>type</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.ExposureControl.type","title":"type","text":"<pre><code>type: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ExposureControl.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.ExposureControl.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.Hazard","title":"Hazard","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>Hazard is a Pydantic model representing hazard information.</p> <p>Attributes:</p> Name Type Description <code>h_code</code> <code>str | None</code> <p>The hazard code.</p> <code>category</code> <code>str | None</code> <p>The category of the hazard.</p> <code>class_</code> <code>str | None</code> <p>The class of the hazard.</p> <code>sub_category</code> <code>str | None</code> <p>The sub-category of the hazard.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Hazard is a Pydantic model representing hazard information.\\n\\nAttributes\\n----------\\nh_code : str | None\\n    The hazard code.\\ncategory : str | None\\n    The category of the hazard.\\nclass_ : str | None\\n    The class of the hazard.\\nsub_category : str | None\\n    The sub-category of the hazard.\",\n  \"properties\": {\n    \"hCode\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Hcode\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Category\"\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Class\"\n    },\n    \"subCategory\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Subcategory\"\n    }\n  },\n  \"title\": \"Hazard\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>h_code</code>                 (<code>str | None</code>)             </li> <li> <code>category</code>                 (<code>int | str | None</code>)             </li> <li> <code>class_</code>                 (<code>str | None</code>)             </li> <li> <code>sub_category</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.Hazard.h_code","title":"h_code","text":"<pre><code>h_code: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.Hazard.category","title":"category","text":"<pre><code>category: int | str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.Hazard.class_","title":"class_","text":"<pre><code>class_: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.Hazard.sub_category","title":"sub_category","text":"<pre><code>sub_category: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceName","title":"SubstanceName","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>SubstanceName is a Pydantic model representing the name of a substance.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str | None</code> <p>The name of the substance.</p> <code>language_code</code> <code>str | None</code> <p>The language code for the substance name.</p> <code>cloaked_name</code> <code>str | None</code> <p>The cloaked name of the substance, if applicable.</p> Show JSON schema: <pre><code>{\n  \"description\": \"SubstanceName is a Pydantic model representing the name of a substance.\\n\\nAttributes\\n----------\\nname : str | None\\n    The name of the substance.\\nlanguage_code : str | None\\n    The language code for the substance name.\\ncloaked_name : str | None\\n    The cloaked name of the substance, if applicable.\",\n  \"properties\": {\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"language_code\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Language Code\"\n    },\n    \"cloakedName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cloakedname\"\n    }\n  },\n  \"title\": \"SubstanceName\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>language_code</code>                 (<code>str | None</code>)             </li> <li> <code>cloaked_name</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.SubstanceName.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceName.language_code","title":"language_code","text":"<pre><code>language_code: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceName.cloaked_name","title":"cloaked_name","text":"<pre><code>cloaked_name: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SpecificConcentration","title":"SpecificConcentration","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>SpecificConcentration is a Pydantic model representing specific concentration information.</p> <p>Attributes:</p> Name Type Description <code>specific_conc</code> <code>str | None</code> <p>The specific concentration value.</p> <code>sub_category</code> <code>str | None</code> <p>The sub-category of the specific concentration.</p> <code>category</code> <code>int | None</code> <p>The category of the specific concentration.</p> <code>h_code</code> <code>str | None</code> <p>The hazard code associated with the specific concentration.</p> <code>class_</code> <code>str | None</code> <p>The class of the specific concentration.</p> Show JSON schema: <pre><code>{\n  \"description\": \"SpecificConcentration is a Pydantic model representing specific concentration information.\\n\\nAttributes\\n----------\\nspecific_conc : str | None\\n    The specific concentration value.\\nsub_category : str | None\\n    The sub-category of the specific concentration.\\ncategory : int | None\\n    The category of the specific concentration.\\nh_code : str | None\\n    The hazard code associated with the specific concentration.\\nclass_ : str | None\\n    The class of the specific concentration.\",\n  \"properties\": {\n    \"specific_conc\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Specific Conc\"\n    },\n    \"subCategory\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Subcategory\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Category\"\n    },\n    \"hCode\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Hcode\"\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Class\"\n    }\n  },\n  \"title\": \"SpecificConcentration\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>specific_conc</code>                 (<code>str | None</code>)             </li> <li> <code>sub_category</code>                 (<code>str | None</code>)             </li> <li> <code>category</code>                 (<code>int | None</code>)             </li> <li> <code>h_code</code>                 (<code>str | None</code>)             </li> <li> <code>class_</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.SpecificConcentration.specific_conc","title":"specific_conc","text":"<pre><code>specific_conc: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SpecificConcentration.sub_category","title":"sub_category","text":"<pre><code>sub_category: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SpecificConcentration.category","title":"category","text":"<pre><code>category: int | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SpecificConcentration.h_code","title":"h_code","text":"<pre><code>h_code: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SpecificConcentration.class_","title":"class_","text":"<pre><code>class_: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.MolecularWeightValue","title":"MolecularWeightValue","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>MolecularWeightValue is a Pydantic model representing a molecular weight value.</p> <p>Attributes:</p> Name Type Description <code>min_value</code> <code>str | None</code> <p>The minimum molecular weight value.</p> <code>max_value</code> <code>str | None</code> <p>The maximum molecular weight value.</p> <code>unit</code> <code>str | None</code> <p>The unit of measurement for the molecular weight.</p> Show JSON schema: <pre><code>{\n  \"description\": \"MolecularWeightValue is a Pydantic model representing a molecular weight value.\\n\\nAttributes\\n----------\\nmin_value : str | None\\n    The minimum molecular weight value.\\nmax_value : str | None\\n    The maximum molecular weight value.\\nunit : str | None\\n    The unit of measurement for the molecular weight.\",\n  \"properties\": {\n    \"minValue\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Minvalue\"\n    },\n    \"maxValue\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Maxvalue\"\n    },\n    \"unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    }\n  },\n  \"title\": \"MolecularWeightValue\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>min_value</code>                 (<code>str | None</code>)             </li> <li> <code>max_value</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.MolecularWeightValue.min_value","title":"min_value","text":"<pre><code>min_value: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.MolecularWeightValue.max_value","title":"max_value","text":"<pre><code>max_value: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.MolecularWeightValue.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.MolecularWeight","title":"MolecularWeight","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>MolecularWeight is a Pydantic model representing molecular weight information.</p> <p>Attributes:</p> Name Type Description <code>values</code> <code>list[MolecularWeightValue] | None</code> <p>The list of molecular weight values.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"MolecularWeightValue\": {\n      \"description\": \"MolecularWeightValue is a Pydantic model representing a molecular weight value.\\n\\nAttributes\\n----------\\nmin_value : str | None\\n    The minimum molecular weight value.\\nmax_value : str | None\\n    The maximum molecular weight value.\\nunit : str | None\\n    The unit of measurement for the molecular weight.\",\n      \"properties\": {\n        \"minValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minvalue\"\n        },\n        \"maxValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Maxvalue\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"MolecularWeightValue\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"MolecularWeight is a Pydantic model representing molecular weight information.\\n\\nAttributes\\n----------\\nvalues : list[MolecularWeightValue] | None\\n    The list of molecular weight values.\",\n  \"properties\": {\n    \"values\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/MolecularWeightValue\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Values\"\n    }\n  },\n  \"title\": \"MolecularWeight\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>values</code>                 (<code>list[MolecularWeightValue] | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.MolecularWeight.values","title":"values","text":"<pre><code>values: list[MolecularWeightValue] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.RSLSanitizer","title":"RSLSanitizer","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>RSLSanitizer is a Pydantic model representing sanitizer information.</p> <p>Attributes:</p> Name Type Description <code>value</code> <code>float | None</code> <p>The value of the sanitizer.</p> <code>unit</code> <code>str | None</code> <p>The unit of measurement for the sanitizer.</p> Show JSON schema: <pre><code>{\n  \"description\": \"RSLSanitizer is a Pydantic model representing sanitizer information.\\n\\nAttributes\\n----------\\nvalue : float | None\\n    The value of the sanitizer.\\nunit : str | None\\n    The unit of measurement for the sanitizer.\",\n  \"properties\": {\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    }\n  },\n  \"title\": \"RSLSanitizer\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.RSLSanitizer.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.RSLSanitizer.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.RSL","title":"RSL","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>RSL is a Pydantic model representing the regulatory substance list (RSL) information.</p> <p>Attributes:</p> Name Type Description <code>sanitizer</code> <code>RSLSanitizer | None</code> <p>The sanitizer information associated with the RSL.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"RSLSanitizer\": {\n      \"description\": \"RSLSanitizer is a Pydantic model representing sanitizer information.\\n\\nAttributes\\n----------\\nvalue : float | None\\n    The value of the sanitizer.\\nunit : str | None\\n    The unit of measurement for the sanitizer.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"RSLSanitizer\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"RSL is a Pydantic model representing the regulatory substance list (RSL) information.\\n\\nAttributes\\n----------\\nsanitizer : RSLSanitizer | None\\n    The sanitizer information associated with the RSL.\",\n  \"properties\": {\n    \"sanitizer\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/RSLSanitizer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"title\": \"RSL\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>sanitizer</code>                 (<code>RSLSanitizer | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.RSL.sanitizer","title":"sanitizer","text":"<pre><code>sanitizer: RSLSanitizer | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SkinCorrosionInfo","title":"SkinCorrosionInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>SkinCorrosionInfo is a Pydantic model representing skin corrosion information.</p> <p>Attributes:</p> Name Type Description <code>result</code> <code>str | None</code> <p>The result of the skin corrosion test.</p> <code>roe</code> <code>str | None</code> <p>The reference exposure level.</p> <code>unit</code> <code>str | None</code> <p>The unit of measurement for the skin corrosion test.</p> <code>method</code> <code>str | None</code> <p>The method used for the skin corrosion test.</p> <code>value</code> <code>float | None</code> <p>The value of the skin corrosion test.</p> <code>species</code> <code>str | None</code> <p>The species tested for skin corrosion.</p> Show JSON schema: <pre><code>{\n  \"description\": \"SkinCorrosionInfo is a Pydantic model representing skin corrosion information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the skin corrosion test.\\nroe : str | None\\n    The reference exposure level.\\nunit : str | None\\n    The unit of measurement for the skin corrosion test.\\nmethod : str | None\\n    The method used for the skin corrosion test.\\nvalue : float | None\\n    The value of the skin corrosion test.\\nspecies : str | None\\n    The species tested for skin corrosion.\",\n  \"properties\": {\n    \"result\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Result\"\n    },\n    \"roe\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Roe\"\n    },\n    \"unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"method\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Method\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"species\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Species\"\n    }\n  },\n  \"title\": \"SkinCorrosionInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>result</code>                 (<code>str | None</code>)             </li> <li> <code>roe</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> <li> <code>method</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>species</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.SkinCorrosionInfo.result","title":"result","text":"<pre><code>result: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SkinCorrosionInfo.roe","title":"roe","text":"<pre><code>roe: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SkinCorrosionInfo.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SkinCorrosionInfo.method","title":"method","text":"<pre><code>method: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SkinCorrosionInfo.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SkinCorrosionInfo.species","title":"species","text":"<pre><code>species: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SeriousEyeDamageInfo","title":"SeriousEyeDamageInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>SeriousEyeDamageInfo is a Pydantic model representing serious eye damage information.</p> <p>Attributes:</p> Name Type Description <code>result</code> <code>str | None</code> <p>The result of the serious eye damage test.</p> <code>roe</code> <code>str | None</code> <p>The reference exposure level.</p> <code>unit</code> <code>str | None</code> <p>The unit of measurement for the serious eye damage test.</p> <code>method</code> <code>str | None</code> <p>The method used for the serious eye damage test.</p> <code>value</code> <code>float | None</code> <p>The value of the serious eye damage test.</p> <code>species</code> <code>str | None</code> <p>The species tested for serious eye damage.</p> Show JSON schema: <pre><code>{\n  \"description\": \"SeriousEyeDamageInfo is a Pydantic model representing serious eye damage information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the serious eye damage test.\\nroe : str | None\\n    The reference exposure level.\\nunit : str | None\\n    The unit of measurement for the serious eye damage test.\\nmethod : str | None\\n    The method used for the serious eye damage test.\\nvalue : float | None\\n    The value of the serious eye damage test.\\nspecies : str | None\\n    The species tested for serious eye damage.\",\n  \"properties\": {\n    \"result\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Result\"\n    },\n    \"roe\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Roe\"\n    },\n    \"unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"method\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Method\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"species\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Species\"\n    }\n  },\n  \"title\": \"SeriousEyeDamageInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>result</code>                 (<code>str | None</code>)             </li> <li> <code>roe</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>str | None</code>)             </li> <li> <code>method</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>float | None</code>)             </li> <li> <code>species</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.SeriousEyeDamageInfo.result","title":"result","text":"<pre><code>result: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SeriousEyeDamageInfo.roe","title":"roe","text":"<pre><code>roe: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SeriousEyeDamageInfo.unit","title":"unit","text":"<pre><code>unit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SeriousEyeDamageInfo.method","title":"method","text":"<pre><code>method: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SeriousEyeDamageInfo.value","title":"value","text":"<pre><code>value: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SeriousEyeDamageInfo.species","title":"species","text":"<pre><code>species: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.RespiratorySkinSensInfo","title":"RespiratorySkinSensInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>RespiratorySkinSensInfo is a Pydantic model representing respiratory and skin sensitization information.</p> <p>Attributes:</p> Name Type Description <code>result</code> <code>str | None</code> <p>The result of the respiratory skin sensitization test.</p> <code>roe</code> <code>str | None</code> <p>The reference exposure level.</p> <code>method</code> <code>str | None</code> <p>The method used for the respiratory skin sensitization test.</p> <code>species</code> <code>str | None</code> <p>The species tested for respiratory skin sensitization.</p> Show JSON schema: <pre><code>{\n  \"description\": \"RespiratorySkinSensInfo is a Pydantic model representing respiratory and skin sensitization information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the respiratory skin sensitization test.\\nroe : str | None\\n    The reference exposure level.\\nmethod : str | None\\n    The method used for the respiratory skin sensitization test.\\nspecies : str | None\\n    The species tested for respiratory skin sensitization.\",\n  \"properties\": {\n    \"result\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Result\"\n    },\n    \"roe\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Roe\"\n    },\n    \"method\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Method\"\n    },\n    \"species\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Species\"\n    }\n  },\n  \"title\": \"RespiratorySkinSensInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>result</code>                 (<code>str | None</code>)             </li> <li> <code>roe</code>                 (<code>str | None</code>)             </li> <li> <code>method</code>                 (<code>str | None</code>)             </li> <li> <code>species</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.RespiratorySkinSensInfo.result","title":"result","text":"<pre><code>result: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.RespiratorySkinSensInfo.roe","title":"roe","text":"<pre><code>roe: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.RespiratorySkinSensInfo.method","title":"method","text":"<pre><code>method: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.RespiratorySkinSensInfo.species","title":"species","text":"<pre><code>species: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo","title":"SubstanceInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>SubstanceInfo is a Pydantic model representing information about a chemical substance.</p> <p>Attributes:</p> Name Type Description <code>acute_dermal_tox_info</code> <code>list[ToxicityInfo] | None</code> <p>Information about acute dermal toxicity.</p> <code>acute_inhalation_tox_info</code> <code>list[ToxicityInfo] | None</code> <p>Information about acute inhalation toxicity.</p> <code>acute_oral_tox_info</code> <code>list[ToxicityInfo] | None</code> <p>Information about acute oral toxicity.</p> <code>acute_tox_info</code> <code>list[ToxicityInfo] | None</code> <p>General acute toxicity information.</p> <code>bio_accumulative_info</code> <code>list[BioAccumulativeInfo] | None</code> <p>Information about bioaccumulation.</p> <code>boiling_point_info</code> <code>list[BoilingPointInfo] | None</code> <p>Information about boiling points.</p> <code>cas_id</code> <code>str</code> <p>The CAS ID of the substance.</p> <code>classification</code> <code>str | None</code> <p>The classification of the substance.</p> <code>classification_type</code> <code>str</code> <p>The type of classification.</p> <code>degradability_info</code> <code>list[DegradabilityInfo] | None</code> <p>Information about degradability.</p> <code>dnel_info</code> <code>list[DNELInfo] | None</code> <p>Information about the Derived No Effect Level (DNEL).</p> <code>ec_list_no</code> <code>str</code> <p>The EC list number.</p> <code>exposure_controls_acgih</code> <code>list[ExposureControl] | None</code> <p>ACGIH exposure controls.</p> <code>hazards</code> <code>list[Hazard] | None</code> <p>List of hazards associated with the substance.</p> <code>iarc_carcinogen</code> <code>str | None</code> <p>IARC carcinogen classification.</p> <code>ntp_carcinogen</code> <code>str | None</code> <p>NTP carcinogen classification.</p> <code>osha_carcinogen</code> <code>bool | None</code> <p>OSHA carcinogen classification.</p> <code>health_effects</code> <code>str | None</code> <p>Information about health effects.</p> <code>name</code> <code>list[SubstanceName] | None</code> <p>Names of the substance.</p> <code>page_number</code> <code>int | None</code> <p>Page number for reference.</p> <code>aicis_notified</code> <code>bool | None</code> <p>Indicates if AICIS has been notified.</p> <code>approved_legal_entities</code> <code>Any | None</code> <p>Approved legal entities for the substance.</p> <code>aspiration_tox_info</code> <code>list[Any] | None</code> <p>Information about aspiration toxicity.</p> <code>basel_conv_list</code> <code>bool | None</code> <p>Indicates if the substance is on the Basel Convention list.</p> <code>bei_info</code> <code>list[Any] | None</code> <p>Information related to BEI.</p> <code>caa_cfr40</code> <code>bool | None</code> <p>Indicates compliance with CAA CFR 40.</p> <code>caa_hpa</code> <code>bool | None</code> <p>Indicates compliance with CAA HPA.</p> <code>canada_inventory_status</code> <code>str | None</code> <p>Status in the Canadian inventory.</p> <code>carcinogen_info</code> <code>list[Any] | None</code> <p>Information about carcinogenicity.</p> <code>chemical_category</code> <code>list[str] | None</code> <p>Categories of the chemical.</p> <code>dermal_acute_toxicity</code> <code>float | None</code> <p>Acute dermal toxicity value.</p> <code>inhalation_acute_toxicity</code> <code>float | None</code> <p>Acute inhalation toxicity value.</p> <code>oral_acute_toxicity</code> <code>float | None</code> <p>Acute oral toxicity value.</p> <code>lethal_dose_and_concentrations</code> <code>list[LethalDoseConcentration] | None</code> <p>Information about lethal doses and concentrations.</p> <code>m_factor</code> <code>int | None</code> <p>M factor for acute toxicity.</p> <code>m_factor_chronic</code> <code>int | None</code> <p>M factor for chronic toxicity.</p> <code>molecular_weight</code> <code>list[MolecularWeight] | None</code> <p>Molecular weight information.</p> <code>rsl</code> <code>RSL | None</code> <p>Risk-based screening level.</p> <code>specific_conc_eu</code> <code>list[SpecificConcentration] | None</code> <p>Specific concentration information for the EU.</p> <code>specific_conc_source</code> <code>str | None</code> <p>Source of specific concentration information.</p> <code>sustainability_status_lbc</code> <code>str | None</code> <p>Sustainability status under LBC.</p> <code>tsca_8b</code> <code>bool | None</code> <p>Indicates compliance with TSCA 8(b).</p> <code>cdsa_list</code> <code>bool | None</code> <p>Indicates if the substance is on the CDSA list.</p> <code>cn_csdc_regulations</code> <code>bool | None</code> <p>Compliance with CN CSDC regulations.</p> <code>cn_pcod_list</code> <code>bool | None</code> <p>Indicates if the substance is on the CN PCOD list.</p> <code>cn_priority_list</code> <code>bool | None</code> <p>Indicates if the substance is on the CN priority list.</p> <code>ec_notified</code> <code>str | None</code> <p>Notification status in the EC.</p> <code>eu_annex_14_substances_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU Annex 14 list.</p> <code>eu_annex_17_restrictions_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU Annex 17 restrictions list.</p> <code>eu_annex_17_substances_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU Annex 17 substances list.</p> <code>eu_candidate_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU candidate list.</p> <code>eu_dang_chem_annex_1_part_1_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU dangerous chemicals Annex 1 Part 1 list.</p> <code>eu_dang_chem_annex_1_part_2_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU dangerous chemicals Annex 1 Part 2 list.</p> <code>eu_dang_chem_annex_1_part_3_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU dangerous chemicals Annex 1 Part 3 list.</p> <code>eu_dang_chem_annex_5_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU dangerous chemicals Annex 5 list.</p> <code>eu_directive_ec_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU directive EC list.</p> <code>eu_explosive_precursors_annex_1_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU explosive precursors Annex 1 list.</p> <code>eu_explosive_precursors_annex_2_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU explosive precursors Annex 2 list.</p> <code>eu_ozone_depletion_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU ozone depletion list.</p> <code>eu_pollutant_annex_2_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU pollutant Annex 2 list.</p> <code>eu_pop_list</code> <code>bool | None</code> <p>Indicates if the substance is on the EU POP list.</p> <code>export_control_list_phrases</code> <code>bool | None</code> <p>Indicates if the substance is on the export control list.</p> <code>green_gas_list</code> <code>bool | None</code> <p>Indicates if the substance is on the green gas list.</p> <code>iecsc_notified</code> <code>bool | None</code> <p>Indicates if the substance is IECSc notified.</p> <code>index_no</code> <code>str | None</code> <p>Index number for the substance.</p> <code>jpencs_notified</code> <code>bool | None</code> <p>Indicates if the substance is JPENCS notified.</p> <code>jpishl_notified</code> <code>bool | None</code> <p>Indicates if the substance is JPISHL notified.</p> <code>koecl_notified</code> <code>bool | None</code> <p>Indicates if the substance is KOECL notified.</p> <code>kyoto_protocol</code> <code>bool | None</code> <p>Indicates compliance with the Kyoto Protocol.</p> <code>massachusetts_rtk</code> <code>bool | None</code> <p>Indicates if the substance is on the Massachusetts RTK list.</p> <code>montreal_protocol</code> <code>bool | None</code> <p>Indicates compliance with the Montreal Protocol.</p> <code>new_jersey_rtk</code> <code>bool | None</code> <p>Indicates if the substance is on the New Jersey RTK list.</p> <code>new_york_rtk</code> <code>bool | None</code> <p>Indicates if the substance is on the New York RTK list.</p> <code>nzioc_notified</code> <code>bool | None</code> <p>Indicates if the substance is NZIOC notified.</p> <code>pcr_regulated</code> <code>bool | None</code> <p>Indicates if the substance is PCR regulated.</p> <code>pennsylvania_rtk</code> <code>bool | None</code> <p>Indicates if the substance is on the Pennsylvania RTK list.</p> <code>peroxide_function_groups</code> <code>int | None</code> <p>Number of peroxide function groups.</p> <code>piccs_notified</code> <code>bool | None</code> <p>Indicates if the substance is PICCS notified.</p> <code>rhode_island_rtk</code> <code>bool | None</code> <p>Indicates if the substance is on the Rhode Island RTK list.</p> <code>rotterdam_conv_list</code> <code>bool | None</code> <p>Indicates if the substance is on the Rotterdam Convention list.</p> <code>sdwa</code> <code>bool | None</code> <p>Indicates compliance with the SDWA.</p> <code>source</code> <code>str | None</code> <p>Source of the substance information.</p> <code>specific_concentration_limit</code> <code>str | None</code> <p>Specific concentration limit for the substance.</p> <code>stockholm_conv_list</code> <code>bool | None</code> <p>Indicates if the substance is on the Stockholm Convention list.</p> <code>stot_affected_organs</code> <code>str | None</code> <p>Organs affected by STOT.</p> <code>stot_route_of_exposure</code> <code>str | None</code> <p>Route of exposure for STOT.</p> <code>tcsi_notified</code> <code>bool | None</code> <p>Indicates if the substance is TCSI notified.</p> <code>trade_secret</code> <code>str | None</code> <p>Information about trade secrets.</p> <code>tw_ghs_clas_list</code> <code>bool | None</code> <p>Indicates if the substance is on the TW GHS classification list.</p> <code>tw_handle_priority_chem</code> <code>bool | None</code> <p>Indicates if the substance is a priority chemical.</p> <code>tw_handle_toxic_chem</code> <code>bool | None</code> <p>Indicates if the substance is a toxic chemical.</p> <code>tw_ind_waste_standards</code> <code>bool | None</code> <p>Indicates compliance with TW industrial waste standards.</p> <code>vinic_notified</code> <code>bool | None</code> <p>Indicates if the substance is VINIC notified.</p> <code>exposure_controls_osha</code> <code>list[ExposureControl] | None</code> <p>OSHA exposure controls.</p> <code>exposure_controls_aiha</code> <code>list[ExposureControl] | None</code> <p>AIHA exposure controls.</p> <code>exposure_controls_niosh</code> <code>list[ExposureControl] | None</code> <p>NIOSH exposure controls.</p> <code>snur</code> <code>bool | dict | None</code> <p>Significant new use rule information.</p> <code>tsca_12b_concentration_limit</code> <code>float | None</code> <p>TSCA 12(b) concentration limit.</p> <code>cercla_rq</code> <code>float | None</code> <p>CERCLA reportable quantity.</p> <code>california_prop_65</code> <code>list[str] | None</code> <p>Information related to California Prop 65.</p> <code>sara_302</code> <code>bool | None</code> <p>Indicates compliance with SARA 302.</p> <code>sara_313_concentration_limit</code> <code>float | None</code> <p>SARA 313 concentration limit.</p> <code>cfr_marine_pollutant</code> <code>dict | None</code> <p>Information about marine pollutants under CFR.</p> <code>cfr_reportable_quantity</code> <code>dict | None</code> <p>Information about reportable quantities under CFR.</p> <code>rohs_concentration</code> <code>float | None</code> <p>ROHS concentration limit.</p> <code>skin_corrosion_info</code> <code>list[SkinCorrosionInfo] | None</code> <p>Information about skin corrosion.</p> <code>serious_eye_damage_info</code> <code>list[SeriousEyeDamageInfo] | None</code> <p>Information about serious eye damage.</p> <code>respiratory_skin_sens_info</code> <code>list[RespiratorySkinSensInfo] | None</code> <p>Information about respiratory skin sensitization.</p> <code>is_known</code> <code>bool</code> <p>Indicates if the substance is known (i.e. has known regulatory or hazard information in the database) (note this is an alias for the isCas field which behaves in a non intuitive way in the API so we have opted to use is_known for usability instead)</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BioAccumulativeInfo\": {\n      \"description\": \"BioAccumulativeInfo is a Pydantic model representing bioaccumulative information.\\n\\nAttributes\\n----------\\nbcf_value : str | None\\n    The bioaccumulative factor value.\\ntemperature : str | None\\n    The temperature of the bioaccumulative test.\\nexposure_time : str | None\\n    The exposure time of the bioaccumulative test.\\nmethod : str | None\\n    The method of the bioaccumulative test.\\nspecies : str | None\\n    The species of the bioaccumulative test.\",\n      \"properties\": {\n        \"bcfValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Bcfvalue\"\n        },\n        \"temperature\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Temperature\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        }\n      },\n      \"title\": \"BioAccumulativeInfo\",\n      \"type\": \"object\"\n    },\n    \"BoilingPointInfo\": {\n      \"description\": \"BoilingPointInfo is a Pydantic model representing boiling point information.\\n\\nAttributes\\n----------\\nsource : list[BoilingPointSource] | None\\n    The source of the boiling point information.\\nvalues : list[BoilingPointValue] | None\\n    The values of the boiling point information.\",\n      \"properties\": {\n        \"source\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BoilingPointSource\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Source\"\n        },\n        \"values\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BoilingPointValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Values\"\n        }\n      },\n      \"title\": \"BoilingPointInfo\",\n      \"type\": \"object\"\n    },\n    \"BoilingPointSource\": {\n      \"description\": \"BoilingPointSource is a Pydantic model representing a boiling point source.\\n\\nAttributes\\n----------\\nnote_code : str | None\\n    The note code of the boiling point source.\\nnote : str | None\\n    The note of the boiling point source.\\nnote_field : str | None\\n    The note field of the boiling point source.\",\n      \"properties\": {\n        \"noteCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Notecode\"\n        },\n        \"note\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Note\"\n        },\n        \"noteField\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Notefield\"\n        }\n      },\n      \"title\": \"BoilingPointSource\",\n      \"type\": \"object\"\n    },\n    \"BoilingPointValue\": {\n      \"description\": \"BoilingPointValue is a Pydantic model representing a boiling point value.\\n\\nAttributes\\n----------\\nmin_value : str | None\\n    The minimum boiling point value.\\nmax_value : str | None\\n    The maximum boiling point value.\\nunit : str | None\\n    The unit of the boiling point value.\",\n      \"properties\": {\n        \"minValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minvalue\"\n        },\n        \"maxValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Maxvalue\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"BoilingPointValue\",\n      \"type\": \"object\"\n    },\n    \"DNELInfo\": {\n      \"description\": \"DNELInfo is a Pydantic model representing the Derived No Effect Level (DNEL) information.\\n\\nAttributes\\n----------\\nroe : str | None\\n    The reference exposure level.\\nhealth_effect : str | None\\n    The health effect associated with the exposure.\\nexposure_time : str | None\\n    The exposure time for the DNEL.\\napplication_area : str | None\\n    The area of application for the DNEL.\\nvalue : str | None\\n    The DNEL value.\\nremarks : str | None\\n    Any additional remarks regarding the DNEL.\",\n      \"properties\": {\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"healthEffect\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Healtheffect\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"applicationArea\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Applicationarea\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"remarks\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Remarks\"\n        }\n      },\n      \"title\": \"DNELInfo\",\n      \"type\": \"object\"\n    },\n    \"DegradabilityInfo\": {\n      \"description\": \"DegradabilityInfo is a Pydantic model representing information about the degradability of a substance.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the degradability test.\\nunit : str | None\\n    The unit of measurement for the degradability test.\\nexposure_time : str | None\\n    The exposure time of the degradability test.\\nmethod : str | None\\n    The method used for the degradability test.\\ntest_type : str | None\\n    The type of the degradability test.\\ndegradability : str | None\\n    The degradability classification.\\nvalue : str | None\\n    The value of the degradability test.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"testType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Testtype\"\n        },\n        \"degradability\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Degradability\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"DegradabilityInfo\",\n      \"type\": \"object\"\n    },\n    \"ExposureControl\": {\n      \"description\": \"ExposureControl is a Pydantic model representing exposure control measures.\\n\\nAttributes\\n----------\\ntype : str | None\\n    The type of exposure control.\\nvalue : float | None\\n    The value associated with the exposure control.\\nunit : str | None\\n    The unit of measurement for the exposure control.\",\n      \"properties\": {\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"ExposureControl\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Hazard is a Pydantic model representing hazard information.\\n\\nAttributes\\n----------\\nh_code : str | None\\n    The hazard code.\\ncategory : str | None\\n    The category of the hazard.\\nclass_ : str | None\\n    The class of the hazard.\\nsub_category : str | None\\n    The sub-category of the hazard.\",\n      \"properties\": {\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Class\"\n        },\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Subcategory\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"LethalDoseConcentration\": {\n      \"description\": \"LethalDoseConcentration is a Pydantic model representing lethal dose and concentration information.\\n\\nAttributes\\n----------\\nduration : str | None\\n    The duration of the exposure.\\nunit : str | None\\n    The unit of measurement for the lethal dose.\\ntype : str | None\\n    The type of the lethal dose.\\nspecies : str | None\\n    The species tested.\\nvalue : float | None\\n    The lethal dose value.\\nsex : str | None\\n    The sex of the species tested.\\nexposure_time : str | None\\n    The exposure time for the lethal dose test.\\nmethod : str | None\\n    The method used for the lethal dose test.\\ntest_atmosphere : str | None\\n    The atmosphere in which the test was conducted.\",\n      \"properties\": {\n        \"duration\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Duration\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"sex\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sex\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"testAtmosphere\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Testatmosphere\"\n        }\n      },\n      \"title\": \"LethalDoseConcentration\",\n      \"type\": \"object\"\n    },\n    \"MolecularWeight\": {\n      \"description\": \"MolecularWeight is a Pydantic model representing molecular weight information.\\n\\nAttributes\\n----------\\nvalues : list[MolecularWeightValue] | None\\n    The list of molecular weight values.\",\n      \"properties\": {\n        \"values\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/MolecularWeightValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Values\"\n        }\n      },\n      \"title\": \"MolecularWeight\",\n      \"type\": \"object\"\n    },\n    \"MolecularWeightValue\": {\n      \"description\": \"MolecularWeightValue is a Pydantic model representing a molecular weight value.\\n\\nAttributes\\n----------\\nmin_value : str | None\\n    The minimum molecular weight value.\\nmax_value : str | None\\n    The maximum molecular weight value.\\nunit : str | None\\n    The unit of measurement for the molecular weight.\",\n      \"properties\": {\n        \"minValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minvalue\"\n        },\n        \"maxValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Maxvalue\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"MolecularWeightValue\",\n      \"type\": \"object\"\n    },\n    \"RSL\": {\n      \"description\": \"RSL is a Pydantic model representing the regulatory substance list (RSL) information.\\n\\nAttributes\\n----------\\nsanitizer : RSLSanitizer | None\\n    The sanitizer information associated with the RSL.\",\n      \"properties\": {\n        \"sanitizer\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/RSLSanitizer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"title\": \"RSL\",\n      \"type\": \"object\"\n    },\n    \"RSLSanitizer\": {\n      \"description\": \"RSLSanitizer is a Pydantic model representing sanitizer information.\\n\\nAttributes\\n----------\\nvalue : float | None\\n    The value of the sanitizer.\\nunit : str | None\\n    The unit of measurement for the sanitizer.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"RSLSanitizer\",\n      \"type\": \"object\"\n    },\n    \"RespiratorySkinSensInfo\": {\n      \"description\": \"RespiratorySkinSensInfo is a Pydantic model representing respiratory and skin sensitization information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the respiratory skin sensitization test.\\nroe : str | None\\n    The reference exposure level.\\nmethod : str | None\\n    The method used for the respiratory skin sensitization test.\\nspecies : str | None\\n    The species tested for respiratory skin sensitization.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        }\n      },\n      \"title\": \"RespiratorySkinSensInfo\",\n      \"type\": \"object\"\n    },\n    \"SeriousEyeDamageInfo\": {\n      \"description\": \"SeriousEyeDamageInfo is a Pydantic model representing serious eye damage information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the serious eye damage test.\\nroe : str | None\\n    The reference exposure level.\\nunit : str | None\\n    The unit of measurement for the serious eye damage test.\\nmethod : str | None\\n    The method used for the serious eye damage test.\\nvalue : float | None\\n    The value of the serious eye damage test.\\nspecies : str | None\\n    The species tested for serious eye damage.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        }\n      },\n      \"title\": \"SeriousEyeDamageInfo\",\n      \"type\": \"object\"\n    },\n    \"SkinCorrosionInfo\": {\n      \"description\": \"SkinCorrosionInfo is a Pydantic model representing skin corrosion information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the skin corrosion test.\\nroe : str | None\\n    The reference exposure level.\\nunit : str | None\\n    The unit of measurement for the skin corrosion test.\\nmethod : str | None\\n    The method used for the skin corrosion test.\\nvalue : float | None\\n    The value of the skin corrosion test.\\nspecies : str | None\\n    The species tested for skin corrosion.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        }\n      },\n      \"title\": \"SkinCorrosionInfo\",\n      \"type\": \"object\"\n    },\n    \"SpecificConcentration\": {\n      \"description\": \"SpecificConcentration is a Pydantic model representing specific concentration information.\\n\\nAttributes\\n----------\\nspecific_conc : str | None\\n    The specific concentration value.\\nsub_category : str | None\\n    The sub-category of the specific concentration.\\ncategory : int | None\\n    The category of the specific concentration.\\nh_code : str | None\\n    The hazard code associated with the specific concentration.\\nclass_ : str | None\\n    The class of the specific concentration.\",\n      \"properties\": {\n        \"specific_conc\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Specific Conc\"\n        },\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Subcategory\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Category\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Hcode\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Class\"\n        }\n      },\n      \"title\": \"SpecificConcentration\",\n      \"type\": \"object\"\n    },\n    \"SubstanceName\": {\n      \"description\": \"SubstanceName is a Pydantic model representing the name of a substance.\\n\\nAttributes\\n----------\\nname : str | None\\n    The name of the substance.\\nlanguage_code : str | None\\n    The language code for the substance name.\\ncloaked_name : str | None\\n    The cloaked name of the substance, if applicable.\",\n      \"properties\": {\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"language_code\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Language Code\"\n        },\n        \"cloakedName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cloakedname\"\n        }\n      },\n      \"title\": \"SubstanceName\",\n      \"type\": \"object\"\n    },\n    \"ToxicityInfo\": {\n      \"description\": \"ToxicityInfo is a Pydantic model representing toxicity information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the toxicity test.\\nroe : str | None\\n    The reference exposure level.\\nunit : str | None\\n    The unit of the toxicity test.\\nmethod: str | None\\n    The method of the toxicity test.\\nvalue: float | None\\n    The value of the toxicity test.\\nspecies: str | None\\n    The species of the toxicity test.\\nsex: str | None\\n    The sex of the toxicity test.\\nexposure_time: str | None\\n    The exposure time of the toxicity test.\\ntype: str | None\\n    The type of the toxicity test.\\nvalue_type: str | None\\n    The value type of the toxicity test.\\ntemperature: str | None\\n    The temperature of the toxicity test.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        },\n        \"sex\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sex\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"valueType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuetype\"\n        },\n        \"temperature\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Temperature\"\n        }\n      },\n      \"title\": \"ToxicityInfo\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"SubstanceInfo is a Pydantic model representing information about a chemical substance.\\n\\nAttributes\\n----------\\nacute_dermal_tox_info : list[ToxicityInfo] | None\\n    Information about acute dermal toxicity.\\nacute_inhalation_tox_info : list[ToxicityInfo] | None\\n    Information about acute inhalation toxicity.\\nacute_oral_tox_info : list[ToxicityInfo] | None\\n    Information about acute oral toxicity.\\nacute_tox_info : list[ToxicityInfo] | None\\n    General acute toxicity information.\\nbio_accumulative_info : list[BioAccumulativeInfo] | None\\n    Information about bioaccumulation.\\nboiling_point_info : list[BoilingPointInfo] | None\\n    Information about boiling points.\\ncas_id : str\\n    The CAS ID of the substance.\\nclassification : str | None\\n    The classification of the substance.\\nclassification_type : str\\n    The type of classification.\\ndegradability_info : list[DegradabilityInfo] | None\\n    Information about degradability.\\ndnel_info : list[DNELInfo] | None\\n    Information about the Derived No Effect Level (DNEL).\\nec_list_no : str\\n    The EC list number.\\nexposure_controls_acgih : list[ExposureControl] | None\\n    ACGIH exposure controls.\\nhazards : list[Hazard] | None\\n    List of hazards associated with the substance.\\niarc_carcinogen : str | None\\n    IARC carcinogen classification.\\nntp_carcinogen : str | None\\n    NTP carcinogen classification.\\nosha_carcinogen : bool | None\\n    OSHA carcinogen classification.\\nhealth_effects : str | None\\n    Information about health effects.\\nname : list[SubstanceName] | None\\n    Names of the substance.\\npage_number : int | None\\n    Page number for reference.\\naicis_notified : bool | None\\n    Indicates if AICIS has been notified.\\napproved_legal_entities : Any | None\\n    Approved legal entities for the substance.\\naspiration_tox_info : list[Any] | None\\n    Information about aspiration toxicity.\\nbasel_conv_list : bool | None\\n    Indicates if the substance is on the Basel Convention list.\\nbei_info : list[Any] | None\\n    Information related to BEI.\\ncaa_cfr40 : bool | None\\n    Indicates compliance with CAA CFR 40.\\ncaa_hpa : bool | None\\n    Indicates compliance with CAA HPA.\\ncanada_inventory_status : str | None\\n    Status in the Canadian inventory.\\ncarcinogen_info : list[Any] | None\\n    Information about carcinogenicity.\\nchemical_category : list[str] | None\\n    Categories of the chemical.\\ndermal_acute_toxicity : float | None\\n    Acute dermal toxicity value.\\ninhalation_acute_toxicity : float | None\\n    Acute inhalation toxicity value.\\noral_acute_toxicity : float | None\\n    Acute oral toxicity value.\\nlethal_dose_and_concentrations : list[LethalDoseConcentration] | None\\n    Information about lethal doses and concentrations.\\nm_factor : int | None\\n    M factor for acute toxicity.\\nm_factor_chronic : int | None\\n    M factor for chronic toxicity.\\nmolecular_weight : list[MolecularWeight] | None\\n    Molecular weight information.\\nrsl : RSL | None\\n    Risk-based screening level.\\nspecific_conc_eu : list[SpecificConcentration] | None\\n    Specific concentration information for the EU.\\nspecific_conc_source : str | None\\n    Source of specific concentration information.\\nsustainability_status_lbc : str | None\\n    Sustainability status under LBC.\\ntsca_8b : bool | None\\n    Indicates compliance with TSCA 8(b).\\ncdsa_list : bool | None\\n    Indicates if the substance is on the CDSA list.\\ncn_csdc_regulations : bool | None\\n    Compliance with CN CSDC regulations.\\ncn_pcod_list : bool | None\\n    Indicates if the substance is on the CN PCOD list.\\ncn_priority_list : bool | None\\n    Indicates if the substance is on the CN priority list.\\nec_notified : str | None\\n    Notification status in the EC.\\neu_annex_14_substances_list : bool | None\\n    Indicates if the substance is on the EU Annex 14 list.\\neu_annex_17_restrictions_list : bool | None\\n    Indicates if the substance is on the EU Annex 17 restrictions list.\\neu_annex_17_substances_list : bool | None\\n    Indicates if the substance is on the EU Annex 17 substances list.\\neu_candidate_list : bool | None\\n    Indicates if the substance is on the EU candidate list.\\neu_dang_chem_annex_1_part_1_list : bool | None\\n    Indicates if the substance is on the EU dangerous chemicals Annex 1 Part 1 list.\\neu_dang_chem_annex_1_part_2_list : bool | None\\n    Indicates if the substance is on the EU dangerous chemicals Annex 1 Part 2 list.\\neu_dang_chem_annex_1_part_3_list : bool | None\\n    Indicates if the substance is on the EU dangerous chemicals Annex 1 Part 3 list.\\neu_dang_chem_annex_5_list : bool | None\\n    Indicates if the substance is on the EU dangerous chemicals Annex 5 list.\\neu_directive_ec_list : bool | None\\n    Indicates if the substance is on the EU directive EC list.\\neu_explosive_precursors_annex_1_list : bool | None\\n    Indicates if the substance is on the EU explosive precursors Annex 1 list.\\neu_explosive_precursors_annex_2_list : bool | None\\n    Indicates if the substance is on the EU explosive precursors Annex 2 list.\\neu_ozone_depletion_list : bool | None\\n    Indicates if the substance is on the EU ozone depletion list.\\neu_pollutant_annex_2_list : bool | None\\n    Indicates if the substance is on the EU pollutant Annex 2 list.\\neu_pop_list : bool | None\\n    Indicates if the substance is on the EU POP list.\\nexport_control_list_phrases : bool | None\\n    Indicates if the substance is on the export control list.\\ngreen_gas_list : bool | None\\n    Indicates if the substance is on the green gas list.\\niecsc_notified : bool | None\\n    Indicates if the substance is IECSc notified.\\nindex_no : str | None\\n    Index number for the substance.\\njpencs_notified : bool | None\\n    Indicates if the substance is JPENCS notified.\\njpishl_notified : bool | None\\n    Indicates if the substance is JPISHL notified.\\nkoecl_notified : bool | None\\n    Indicates if the substance is KOECL notified.\\nkyoto_protocol : bool | None\\n    Indicates compliance with the Kyoto Protocol.\\nmassachusetts_rtk : bool | None\\n    Indicates if the substance is on the Massachusetts RTK list.\\nmontreal_protocol : bool | None\\n    Indicates compliance with the Montreal Protocol.\\nnew_jersey_rtk : bool | None\\n    Indicates if the substance is on the New Jersey RTK list.\\nnew_york_rtk : bool | None\\n    Indicates if the substance is on the New York RTK list.\\nnzioc_notified : bool | None\\n    Indicates if the substance is NZIOC notified.\\npcr_regulated : bool | None\\n    Indicates if the substance is PCR regulated.\\npennsylvania_rtk : bool | None\\n    Indicates if the substance is on the Pennsylvania RTK list.\\nperoxide_function_groups : int | None\\n    Number of peroxide function groups.\\npiccs_notified : bool | None\\n    Indicates if the substance is PICCS notified.\\nrhode_island_rtk : bool | None\\n    Indicates if the substance is on the Rhode Island RTK list.\\nrotterdam_conv_list : bool | None\\n    Indicates if the substance is on the Rotterdam Convention list.\\nsdwa : bool | None\\n    Indicates compliance with the SDWA.\\nsource : str | None\\n    Source of the substance information.\\nspecific_concentration_limit : str | None\\n    Specific concentration limit for the substance.\\nstockholm_conv_list : bool | None\\n    Indicates if the substance is on the Stockholm Convention list.\\nstot_affected_organs : str | None\\n    Organs affected by STOT.\\nstot_route_of_exposure : str | None\\n    Route of exposure for STOT.\\ntcsi_notified : bool | None\\n    Indicates if the substance is TCSI notified.\\ntrade_secret : str | None\\n    Information about trade secrets.\\ntw_ghs_clas_list : bool | None\\n    Indicates if the substance is on the TW GHS classification list.\\ntw_handle_priority_chem : bool | None\\n    Indicates if the substance is a priority chemical.\\ntw_handle_toxic_chem : bool | None\\n    Indicates if the substance is a toxic chemical.\\ntw_ind_waste_standards : bool | None\\n    Indicates compliance with TW industrial waste standards.\\nvinic_notified : bool | None\\n    Indicates if the substance is VINIC notified.\\nexposure_controls_osha : list[ExposureControl] | None\\n    OSHA exposure controls.\\nexposure_controls_aiha : list[ExposureControl] | None\\n    AIHA exposure controls.\\nexposure_controls_niosh : list[ExposureControl] | None\\n    NIOSH exposure controls.\\nsnur : bool | dict | None\\n    Significant new use rule information.\\ntsca_12b_concentration_limit : float | None\\n    TSCA 12(b) concentration limit.\\ncercla_rq : float | None\\n    CERCLA reportable quantity.\\ncalifornia_prop_65 : list[str] | None\\n    Information related to California Prop 65.\\nsara_302 : bool | None\\n    Indicates compliance with SARA 302.\\nsara_313_concentration_limit : float | None\\n    SARA 313 concentration limit.\\ncfr_marine_pollutant : dict | None\\n    Information about marine pollutants under CFR.\\ncfr_reportable_quantity : dict | None\\n    Information about reportable quantities under CFR.\\nrohs_concentration : float | None\\n    ROHS concentration limit.\\nskin_corrosion_info : list[SkinCorrosionInfo] | None\\n    Information about skin corrosion.\\nserious_eye_damage_info : list[SeriousEyeDamageInfo] | None\\n    Information about serious eye damage.\\nrespiratory_skin_sens_info : list[RespiratorySkinSensInfo] | None\\n    Information about respiratory skin sensitization.\\nis_known : bool\\n    Indicates if the substance is known (i.e. has known regulatory or hazard information in the database)\\n    (note this is an alias for the isCas field which behaves in a non intuitive way in the API so we have opted to use is_known for usability instead)\",\n  \"properties\": {\n    \"type\": {\n      \"const\": \"Substance\",\n      \"default\": \"Substance\",\n      \"title\": \"Type\",\n      \"type\": \"string\"\n    },\n    \"acuteDermalToxInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ToxicityInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Acutedermaltoxinfo\"\n    },\n    \"acuteInhalationToxInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ToxicityInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Acuteinhalationtoxinfo\"\n    },\n    \"acuteOralToxInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ToxicityInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Acuteoraltoxinfo\"\n    },\n    \"acuteToxInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ToxicityInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Acutetoxinfo\"\n    },\n    \"bioAccumulativeInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/BioAccumulativeInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Bioaccumulativeinfo\"\n    },\n    \"boilingpointInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/BoilingPointInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Boilingpointinfo\"\n    },\n    \"casID\": {\n      \"title\": \"Casid\",\n      \"type\": \"string\"\n    },\n    \"classification\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Classification\"\n    },\n    \"classificationType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Classificationtype\"\n    },\n    \"degradabilityInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/DegradabilityInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Degradabilityinfo\"\n    },\n    \"dnelInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/DNELInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Dnelinfo\"\n    },\n    \"ecListNo\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Eclistno\"\n    },\n    \"exposureControlsACGIH\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ExposureControl\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exposurecontrolsacgih\"\n    },\n    \"hazards\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/Hazard\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Hazards\"\n    },\n    \"iarcCarcinogen\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Iarccarcinogen\"\n    },\n    \"ntpCarcinogen\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Ntpcarcinogen\"\n    },\n    \"oshaCarcinogen\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Oshacarcinogen\"\n    },\n    \"healthEffects\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Healtheffects\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/SubstanceName\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"pageNumber\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Pagenumber\"\n    },\n    \"aicisNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Aicisnotified\"\n    },\n    \"approvedLegalEntities\": {\n      \"anyOf\": [\n        {},\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Approvedlegalentities\"\n    },\n    \"aspirationToxInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {},\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Aspirationtoxinfo\"\n    },\n    \"baselConvList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Baselconvlist\"\n    },\n    \"beiInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {},\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Beiinfo\"\n    },\n    \"caaCFR40\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Caacfr40\"\n    },\n    \"caaHPA\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Caahpa\"\n    },\n    \"canadaInventoryStatus\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Canadainventorystatus\"\n    },\n    \"carcinogenInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {},\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Carcinogeninfo\"\n    },\n    \"chemicalCategory\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Chemicalcategory\"\n    },\n    \"dermalAcuteToxicity\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Dermalacutetoxicity\"\n    },\n    \"inhalationAcuteToxicity\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inhalationacutetoxicity\"\n    },\n    \"oralAcuteToxicity\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Oralacutetoxicity\"\n    },\n    \"lethalDoseAndConcentrations\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/LethalDoseConcentration\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lethaldoseandconcentrations\"\n    },\n    \"mFactor\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Mfactor\"\n    },\n    \"mFactorChronic\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Mfactorchronic\"\n    },\n    \"molecularWeight\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/MolecularWeight\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Molecularweight\"\n    },\n    \"rsl\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/RSL\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"specificConcEU\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/SpecificConcentration\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Specificconceu\"\n    },\n    \"specificConcSource\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Specificconcsource\"\n    },\n    \"sustainabilityStatusLBC\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sustainabilitystatuslbc\"\n    },\n    \"tsca8B\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tsca8B\"\n    },\n    \"cdsaList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cdsalist\"\n    },\n    \"cnCSDCRegulations\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cncsdcregulations\"\n    },\n    \"cnPCODList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cnpcodlist\"\n    },\n    \"cnPriorityList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cnprioritylist\"\n    },\n    \"ecNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Ecnotified\"\n    },\n    \"euAnnex14SubstancesList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Euannex14Substanceslist\"\n    },\n    \"euAnnex17RestrictionsList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Euannex17Restrictionslist\"\n    },\n    \"euAnnex17SubstancesList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Euannex17Substanceslist\"\n    },\n    \"euCandidateList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Eucandidatelist\"\n    },\n    \"euDangChemAnnex1Part1List\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Eudangchemannex1Part1List\"\n    },\n    \"euDangChemAnnex1Part2List\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Eudangchemannex1Part2List\"\n    },\n    \"euDangChemAnnex1Part3List\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Eudangchemannex1Part3List\"\n    },\n    \"euDangChemAnnex5List\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Eudangchemannex5List\"\n    },\n    \"euDirectiveEcList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Eudirectiveeclist\"\n    },\n    \"euExplosivePrecursorsAnnex1List\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Euexplosiveprecursorsannex1List\"\n    },\n    \"euExplosivePrecursorsAnnex2List\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Euexplosiveprecursorsannex2List\"\n    },\n    \"euOzoneDepletionList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Euozonedepletionlist\"\n    },\n    \"euPollutantAnnex2List\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Eupollutantannex2List\"\n    },\n    \"euPopList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Eupoplist\"\n    },\n    \"exportControlListPhrases\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exportcontrollistphrases\"\n    },\n    \"greenGasList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Greengaslist\"\n    },\n    \"iecscNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Iecscnotified\"\n    },\n    \"indexNo\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Indexno\"\n    },\n    \"jpencsNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Jpencsnotified\"\n    },\n    \"jpishlNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Jpishlnotified\"\n    },\n    \"koeclNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Koeclnotified\"\n    },\n    \"kyotoProtocol\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Kyotoprotocol\"\n    },\n    \"massachusettsRTK\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Massachusettsrtk\"\n    },\n    \"montrealProtocol\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Montrealprotocol\"\n    },\n    \"newJerseyRTK\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Newjerseyrtk\"\n    },\n    \"newYorkRTK\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Newyorkrtk\"\n    },\n    \"nziocNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Nziocnotified\"\n    },\n    \"pcrRegulated\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Pcrregulated\"\n    },\n    \"pennsylvaniaRTK\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Pennsylvaniartk\"\n    },\n    \"peroxideFunctionGroups\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Peroxidefunctiongroups\"\n    },\n    \"piccsNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Piccsnotified\"\n    },\n    \"rhodeIslandRTK\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rhodeislandrtk\"\n    },\n    \"rotterdamConvList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rotterdamconvlist\"\n    },\n    \"sdwa\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sdwa\"\n    },\n    \"source\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Source\"\n    },\n    \"specificConcentrationLimit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Specificconcentrationlimit\"\n    },\n    \"stockholmConvList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Stockholmconvlist\"\n    },\n    \"stotAffectedOrgans\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Stotaffectedorgans\"\n    },\n    \"stotRouteOfExposure\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Stotrouteofexposure\"\n    },\n    \"tcsiNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tcsinotified\"\n    },\n    \"tradeSecret\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tradesecret\"\n    },\n    \"twGHSClasList\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Twghsclaslist\"\n    },\n    \"twHandlePriorityChem\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Twhandleprioritychem\"\n    },\n    \"twHandleToxicChem\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Twhandletoxicchem\"\n    },\n    \"twIndWasteStandards\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Twindwastestandards\"\n    },\n    \"vinicNotified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Vinicnotified\"\n    },\n    \"exposureControlsOSHA\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ExposureControl\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exposurecontrolsosha\"\n    },\n    \"exposureControlsAIHA\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ExposureControl\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exposurecontrolsaiha\"\n    },\n    \"exposureControlsNIOSH\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ExposureControl\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exposurecontrolsniosh\"\n    },\n    \"snur\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Snur\"\n    },\n    \"tsca12BConcentrationLimit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tsca12Bconcentrationlimit\"\n    },\n    \"cerclaRQ\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cerclarq\"\n    },\n    \"californiaProp65\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Californiaprop65\"\n    },\n    \"sara302\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sara302\"\n    },\n    \"sara313ConcentrationLimit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sara313Concentrationlimit\"\n    },\n    \"CFRmarinePollutant\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cfrmarinepollutant\"\n    },\n    \"CFRreportableQuantity\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cfrreportablequantity\"\n    },\n    \"rohsConcentration\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rohsconcentration\"\n    },\n    \"skinCorrosionInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/SkinCorrosionInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Skincorrosioninfo\"\n    },\n    \"seriousEyeDamageInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/SeriousEyeDamageInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Seriouseyedamageinfo\"\n    },\n    \"respiratorySkinSensInfo\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/RespiratorySkinSensInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Respiratoryskinsensinfo\"\n    },\n    \"isCas\": {\n      \"default\": true,\n      \"title\": \"Iscas\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"casID\"\n  ],\n  \"title\": \"SubstanceInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>type</code>                 (<code>Literal['Substance']</code>)             </li> <li> <code>acute_dermal_tox_info</code>                 (<code>list[ToxicityInfo] | None</code>)             </li> <li> <code>acute_inhalation_tox_info</code>                 (<code>list[ToxicityInfo] | None</code>)             </li> <li> <code>acute_oral_tox_info</code>                 (<code>list[ToxicityInfo] | None</code>)             </li> <li> <code>acute_tox_info</code>                 (<code>list[ToxicityInfo] | None</code>)             </li> <li> <code>bio_accumulative_info</code>                 (<code>list[BioAccumulativeInfo] | None</code>)             </li> <li> <code>boilingpoint_info</code>                 (<code>list[BoilingPointInfo] | None</code>)             </li> <li> <code>cas_id</code>                 (<code>str</code>)             </li> <li> <code>classification</code>                 (<code>str | None</code>)             </li> <li> <code>classification_type</code>                 (<code>str | None</code>)             </li> <li> <code>degradability_info</code>                 (<code>list[DegradabilityInfo] | None</code>)             </li> <li> <code>dnel_info</code>                 (<code>list[DNELInfo] | None</code>)             </li> <li> <code>ec_list_no</code>                 (<code>str | None</code>)             </li> <li> <code>exposure_controls_acgih</code>                 (<code>list[ExposureControl] | None</code>)             </li> <li> <code>hazards</code>                 (<code>list[Hazard] | None</code>)             </li> <li> <code>iarc_carcinogen</code>                 (<code>str | None</code>)             </li> <li> <code>ntp_carcinogen</code>                 (<code>str | None</code>)             </li> <li> <code>osha_carcinogen</code>                 (<code>bool | None</code>)             </li> <li> <code>health_effects</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>list[SubstanceName] | None</code>)             </li> <li> <code>page_number</code>                 (<code>int | None</code>)             </li> <li> <code>aicis_notified</code>                 (<code>bool | None</code>)             </li> <li> <code>approved_legal_entities</code>                 (<code>Any | None</code>)             </li> <li> <code>aspiration_tox_info</code>                 (<code>list[Any] | None</code>)             </li> <li> <code>basel_conv_list</code>                 (<code>bool | None</code>)             </li> <li> <code>bei_info</code>                 (<code>list[Any] | None</code>)             </li> <li> <code>caa_cfr_40</code>                 (<code>bool | None</code>)             </li> <li> <code>caa_hpa</code>                 (<code>bool | None</code>)             </li> <li> <code>canada_inventory_status</code>                 (<code>str | None</code>)             </li> <li> <code>carcinogen_info</code>                 (<code>list[Any] | None</code>)             </li> <li> <code>chemical_category</code>                 (<code>list[str] | None</code>)             </li> <li> <code>dermal_acute_toxicity</code>                 (<code>float | None</code>)             </li> <li> <code>inhalation_acute_toxicity</code>                 (<code>float | None</code>)             </li> <li> <code>oral_acute_toxicity</code>                 (<code>float | None</code>)             </li> <li> <code>lethal_dose_and_concentrations</code>                 (<code>list[LethalDoseConcentration] | None</code>)             </li> <li> <code>m_factor</code>                 (<code>int | None</code>)             </li> <li> <code>m_factor_chronic</code>                 (<code>int | None</code>)             </li> <li> <code>molecular_weight</code>                 (<code>list[MolecularWeight] | None</code>)             </li> <li> <code>rsl</code>                 (<code>RSL | None</code>)             </li> <li> <code>specific_conc_eu</code>                 (<code>list[SpecificConcentration] | None</code>)             </li> <li> <code>specific_conc_source</code>                 (<code>str | None</code>)             </li> <li> <code>sustainability_status_lbc</code>                 (<code>str | None</code>)             </li> <li> <code>tsca_8b</code>                 (<code>bool | None</code>)             </li> <li> <code>cdsa_list</code>                 (<code>bool | None</code>)             </li> <li> <code>cn_csd_c_regulations</code>                 (<code>bool | None</code>)             </li> <li> <code>cn_pcod_list</code>                 (<code>bool | None</code>)             </li> <li> <code>cn_priority_list</code>                 (<code>bool | None</code>)             </li> <li> <code>ec_notified</code>                 (<code>str | None</code>)             </li> <li> <code>eu_annex_14_substances_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_annex_17_restrictions_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_annex_17_substances_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_candidate_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_dang_chem_annex_1_part_1_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_dang_chem_annex_1_part_2_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_dang_chem_annex_1_part_3_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_dang_chem_annex_5_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_directive_ec_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_explosive_precursors_annex_1_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_explosive_precursors_annex_2_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_ozone_depletion_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_pollutant_annex_2_list</code>                 (<code>bool | None</code>)             </li> <li> <code>eu_pop_list</code>                 (<code>bool | None</code>)             </li> <li> <code>export_control_list_phrases</code>                 (<code>bool | None</code>)             </li> <li> <code>green_gas_list</code>                 (<code>bool | None</code>)             </li> <li> <code>iecsc_notified</code>                 (<code>bool | None</code>)             </li> <li> <code>index_no</code>                 (<code>str | None</code>)             </li> <li> <code>jpencs_notified</code>                 (<code>bool | None</code>)             </li> <li> <code>jpishl_notified</code>                 (<code>bool | None</code>)             </li> <li> <code>koecl_notified</code>                 (<code>bool | None</code>)             </li> <li> <code>kyoto_protocol</code>                 (<code>bool | None</code>)             </li> <li> <code>massachusetts_rtk</code>                 (<code>bool | None</code>)             </li> <li> <code>montreal_protocol</code>                 (<code>bool | None</code>)             </li> <li> <code>new_jersey_rtk</code>                 (<code>bool | None</code>)             </li> <li> <code>new_york_rtk</code>                 (<code>bool | None</code>)             </li> <li> <code>nzioc_notified</code>                 (<code>bool | None</code>)             </li> <li> <code>pcr_regulated</code>                 (<code>bool | None</code>)             </li> <li> <code>pennsylvania_rtk</code>                 (<code>bool | None</code>)             </li> <li> <code>peroxide_function_groups</code>                 (<code>int | None</code>)             </li> <li> <code>piccs_notified</code>                 (<code>bool | None</code>)             </li> <li> <code>rhode_island_rtk</code>                 (<code>bool | None</code>)             </li> <li> <code>rotterdam_conv_list</code>                 (<code>bool | None</code>)             </li> <li> <code>sdwa</code>                 (<code>bool | None</code>)             </li> <li> <code>source</code>                 (<code>str | None</code>)             </li> <li> <code>specific_concentration_limit</code>                 (<code>str | None</code>)             </li> <li> <code>stockholm_conv_list</code>                 (<code>bool | None</code>)             </li> <li> <code>stot_affected_organs</code>                 (<code>str | None</code>)             </li> <li> <code>stot_route_of_exposure</code>                 (<code>str | None</code>)             </li> <li> <code>tcsi_notified</code>                 (<code>bool | None</code>)             </li> <li> <code>trade_secret</code>                 (<code>bool | None</code>)             </li> <li> <code>tw_ghs_clas_list</code>                 (<code>bool | None</code>)             </li> <li> <code>tw_handle_priority_chem</code>                 (<code>bool | None</code>)             </li> <li> <code>tw_handle_toxic_chem</code>                 (<code>bool | None</code>)             </li> <li> <code>tw_ind_waste_standards</code>                 (<code>bool | None</code>)             </li> <li> <code>vinic_notified</code>                 (<code>bool | None</code>)             </li> <li> <code>exposure_controls_osha</code>                 (<code>list[ExposureControl] | None</code>)             </li> <li> <code>exposure_controls_aiha</code>                 (<code>list[ExposureControl] | None</code>)             </li> <li> <code>exposure_controls_niosh</code>                 (<code>list[ExposureControl] | None</code>)             </li> <li> <code>snur</code>                 (<code>bool | dict | None</code>)             </li> <li> <code>tsca_12b_concentration_limit</code>                 (<code>float | None</code>)             </li> <li> <code>cercla_rq</code>                 (<code>float | None</code>)             </li> <li> <code>california_prop_65</code>                 (<code>list[str] | None</code>)             </li> <li> <code>sara_302</code>                 (<code>bool | None</code>)             </li> <li> <code>sara_313_concentration_limit</code>                 (<code>float | None</code>)             </li> <li> <code>cfr_marine_pollutant</code>                 (<code>dict | None</code>)             </li> <li> <code>cfr_reportable_quantity</code>                 (<code>dict | None</code>)             </li> <li> <code>rohs_concentration</code>                 (<code>float | None</code>)             </li> <li> <code>skin_corrosion_info</code>                 (<code>list[SkinCorrosionInfo] | None</code>)             </li> <li> <code>serious_eye_damage_info</code>                 (<code>list[SeriousEyeDamageInfo] | None</code>)             </li> <li> <code>respiratory_skin_sens_info</code>                 (<code>list[RespiratorySkinSensInfo] | None</code>)             </li> <li> <code>is_known</code>                 (<code>bool</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.type","title":"type","text":"<pre><code>type: Literal['Substance'] = 'Substance'\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.acute_dermal_tox_info","title":"acute_dermal_tox_info","text":"<pre><code>acute_dermal_tox_info: list[ToxicityInfo] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.acute_inhalation_tox_info","title":"acute_inhalation_tox_info","text":"<pre><code>acute_inhalation_tox_info: list[ToxicityInfo] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.acute_oral_tox_info","title":"acute_oral_tox_info","text":"<pre><code>acute_oral_tox_info: list[ToxicityInfo] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.acute_tox_info","title":"acute_tox_info","text":"<pre><code>acute_tox_info: list[ToxicityInfo] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.bio_accumulative_info","title":"bio_accumulative_info","text":"<pre><code>bio_accumulative_info: list[BioAccumulativeInfo] | None = (\n    None\n)\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.boilingpoint_info","title":"boilingpoint_info","text":"<pre><code>boilingpoint_info: list[BoilingPointInfo] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.cas_id","title":"cas_id","text":"<pre><code>cas_id: str\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.classification","title":"classification","text":"<pre><code>classification: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.classification_type","title":"classification_type","text":"<pre><code>classification_type: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.degradability_info","title":"degradability_info","text":"<pre><code>degradability_info: list[DegradabilityInfo] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.dnel_info","title":"dnel_info","text":"<pre><code>dnel_info: list[DNELInfo] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.ec_list_no","title":"ec_list_no","text":"<pre><code>ec_list_no: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.exposure_controls_acgih","title":"exposure_controls_acgih","text":"<pre><code>exposure_controls_acgih: list[ExposureControl] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.hazards","title":"hazards","text":"<pre><code>hazards: list[Hazard] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.iarc_carcinogen","title":"iarc_carcinogen","text":"<pre><code>iarc_carcinogen: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.ntp_carcinogen","title":"ntp_carcinogen","text":"<pre><code>ntp_carcinogen: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.osha_carcinogen","title":"osha_carcinogen","text":"<pre><code>osha_carcinogen: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.health_effects","title":"health_effects","text":"<pre><code>health_effects: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.name","title":"name","text":"<pre><code>name: list[SubstanceName] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.page_number","title":"page_number","text":"<pre><code>page_number: int | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.aicis_notified","title":"aicis_notified","text":"<pre><code>aicis_notified: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.approved_legal_entities","title":"approved_legal_entities","text":"<pre><code>approved_legal_entities: Any | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.aspiration_tox_info","title":"aspiration_tox_info","text":"<pre><code>aspiration_tox_info: list[Any] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.basel_conv_list","title":"basel_conv_list","text":"<pre><code>basel_conv_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.bei_info","title":"bei_info","text":"<pre><code>bei_info: list[Any] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.caa_cfr_40","title":"caa_cfr_40","text":"<pre><code>caa_cfr_40: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.caa_hpa","title":"caa_hpa","text":"<pre><code>caa_hpa: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.canada_inventory_status","title":"canada_inventory_status","text":"<pre><code>canada_inventory_status: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.carcinogen_info","title":"carcinogen_info","text":"<pre><code>carcinogen_info: list[Any] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.chemical_category","title":"chemical_category","text":"<pre><code>chemical_category: list[str] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.dermal_acute_toxicity","title":"dermal_acute_toxicity","text":"<pre><code>dermal_acute_toxicity: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.inhalation_acute_toxicity","title":"inhalation_acute_toxicity","text":"<pre><code>inhalation_acute_toxicity: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.oral_acute_toxicity","title":"oral_acute_toxicity","text":"<pre><code>oral_acute_toxicity: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.lethal_dose_and_concentrations","title":"lethal_dose_and_concentrations","text":"<pre><code>lethal_dose_and_concentrations: (\n    list[LethalDoseConcentration] | None\n) = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.m_factor","title":"m_factor","text":"<pre><code>m_factor: int | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.m_factor_chronic","title":"m_factor_chronic","text":"<pre><code>m_factor_chronic: int | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.molecular_weight","title":"molecular_weight","text":"<pre><code>molecular_weight: list[MolecularWeight] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.rsl","title":"rsl","text":"<pre><code>rsl: RSL | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.specific_conc_eu","title":"specific_conc_eu","text":"<pre><code>specific_conc_eu: list[SpecificConcentration] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.specific_conc_source","title":"specific_conc_source","text":"<pre><code>specific_conc_source: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.sustainability_status_lbc","title":"sustainability_status_lbc","text":"<pre><code>sustainability_status_lbc: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.tsca_8b","title":"tsca_8b","text":"<pre><code>tsca_8b: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.cdsa_list","title":"cdsa_list","text":"<pre><code>cdsa_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.cn_csd_c_regulations","title":"cn_csd_c_regulations","text":"<pre><code>cn_csd_c_regulations: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.cn_pcod_list","title":"cn_pcod_list","text":"<pre><code>cn_pcod_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.cn_priority_list","title":"cn_priority_list","text":"<pre><code>cn_priority_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.ec_notified","title":"ec_notified","text":"<pre><code>ec_notified: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_annex_14_substances_list","title":"eu_annex_14_substances_list","text":"<pre><code>eu_annex_14_substances_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_annex_17_restrictions_list","title":"eu_annex_17_restrictions_list","text":"<pre><code>eu_annex_17_restrictions_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_annex_17_substances_list","title":"eu_annex_17_substances_list","text":"<pre><code>eu_annex_17_substances_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_candidate_list","title":"eu_candidate_list","text":"<pre><code>eu_candidate_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_dang_chem_annex_1_part_1_list","title":"eu_dang_chem_annex_1_part_1_list","text":"<pre><code>eu_dang_chem_annex_1_part_1_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_dang_chem_annex_1_part_2_list","title":"eu_dang_chem_annex_1_part_2_list","text":"<pre><code>eu_dang_chem_annex_1_part_2_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_dang_chem_annex_1_part_3_list","title":"eu_dang_chem_annex_1_part_3_list","text":"<pre><code>eu_dang_chem_annex_1_part_3_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_dang_chem_annex_5_list","title":"eu_dang_chem_annex_5_list","text":"<pre><code>eu_dang_chem_annex_5_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_directive_ec_list","title":"eu_directive_ec_list","text":"<pre><code>eu_directive_ec_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_explosive_precursors_annex_1_list","title":"eu_explosive_precursors_annex_1_list","text":"<pre><code>eu_explosive_precursors_annex_1_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_explosive_precursors_annex_2_list","title":"eu_explosive_precursors_annex_2_list","text":"<pre><code>eu_explosive_precursors_annex_2_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_ozone_depletion_list","title":"eu_ozone_depletion_list","text":"<pre><code>eu_ozone_depletion_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_pollutant_annex_2_list","title":"eu_pollutant_annex_2_list","text":"<pre><code>eu_pollutant_annex_2_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.eu_pop_list","title":"eu_pop_list","text":"<pre><code>eu_pop_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.export_control_list_phrases","title":"export_control_list_phrases","text":"<pre><code>export_control_list_phrases: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.green_gas_list","title":"green_gas_list","text":"<pre><code>green_gas_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.iecsc_notified","title":"iecsc_notified","text":"<pre><code>iecsc_notified: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.index_no","title":"index_no","text":"<pre><code>index_no: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.jpencs_notified","title":"jpencs_notified","text":"<pre><code>jpencs_notified: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.jpishl_notified","title":"jpishl_notified","text":"<pre><code>jpishl_notified: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.koecl_notified","title":"koecl_notified","text":"<pre><code>koecl_notified: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.kyoto_protocol","title":"kyoto_protocol","text":"<pre><code>kyoto_protocol: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.massachusetts_rtk","title":"massachusetts_rtk","text":"<pre><code>massachusetts_rtk: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.montreal_protocol","title":"montreal_protocol","text":"<pre><code>montreal_protocol: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.new_jersey_rtk","title":"new_jersey_rtk","text":"<pre><code>new_jersey_rtk: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.new_york_rtk","title":"new_york_rtk","text":"<pre><code>new_york_rtk: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.nzioc_notified","title":"nzioc_notified","text":"<pre><code>nzioc_notified: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.pcr_regulated","title":"pcr_regulated","text":"<pre><code>pcr_regulated: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.pennsylvania_rtk","title":"pennsylvania_rtk","text":"<pre><code>pennsylvania_rtk: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.peroxide_function_groups","title":"peroxide_function_groups","text":"<pre><code>peroxide_function_groups: int | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.piccs_notified","title":"piccs_notified","text":"<pre><code>piccs_notified: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.rhode_island_rtk","title":"rhode_island_rtk","text":"<pre><code>rhode_island_rtk: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.rotterdam_conv_list","title":"rotterdam_conv_list","text":"<pre><code>rotterdam_conv_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.sdwa","title":"sdwa","text":"<pre><code>sdwa: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.source","title":"source","text":"<pre><code>source: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.specific_concentration_limit","title":"specific_concentration_limit","text":"<pre><code>specific_concentration_limit: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.stockholm_conv_list","title":"stockholm_conv_list","text":"<pre><code>stockholm_conv_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.stot_affected_organs","title":"stot_affected_organs","text":"<pre><code>stot_affected_organs: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.stot_route_of_exposure","title":"stot_route_of_exposure","text":"<pre><code>stot_route_of_exposure: str | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.tcsi_notified","title":"tcsi_notified","text":"<pre><code>tcsi_notified: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.trade_secret","title":"trade_secret","text":"<pre><code>trade_secret: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.tw_ghs_clas_list","title":"tw_ghs_clas_list","text":"<pre><code>tw_ghs_clas_list: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.tw_handle_priority_chem","title":"tw_handle_priority_chem","text":"<pre><code>tw_handle_priority_chem: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.tw_handle_toxic_chem","title":"tw_handle_toxic_chem","text":"<pre><code>tw_handle_toxic_chem: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.tw_ind_waste_standards","title":"tw_ind_waste_standards","text":"<pre><code>tw_ind_waste_standards: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.vinic_notified","title":"vinic_notified","text":"<pre><code>vinic_notified: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.exposure_controls_osha","title":"exposure_controls_osha","text":"<pre><code>exposure_controls_osha: list[ExposureControl] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.exposure_controls_aiha","title":"exposure_controls_aiha","text":"<pre><code>exposure_controls_aiha: list[ExposureControl] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.exposure_controls_niosh","title":"exposure_controls_niosh","text":"<pre><code>exposure_controls_niosh: list[ExposureControl] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.snur","title":"snur","text":"<pre><code>snur: bool | dict | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.tsca_12b_concentration_limit","title":"tsca_12b_concentration_limit","text":"<pre><code>tsca_12b_concentration_limit: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.cercla_rq","title":"cercla_rq","text":"<pre><code>cercla_rq: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.california_prop_65","title":"california_prop_65","text":"<pre><code>california_prop_65: list[str] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.sara_302","title":"sara_302","text":"<pre><code>sara_302: bool | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.sara_313_concentration_limit","title":"sara_313_concentration_limit","text":"<pre><code>sara_313_concentration_limit: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.cfr_marine_pollutant","title":"cfr_marine_pollutant","text":"<pre><code>cfr_marine_pollutant: dict | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.cfr_reportable_quantity","title":"cfr_reportable_quantity","text":"<pre><code>cfr_reportable_quantity: dict | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.rohs_concentration","title":"rohs_concentration","text":"<pre><code>rohs_concentration: float | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.skin_corrosion_info","title":"skin_corrosion_info","text":"<pre><code>skin_corrosion_info: list[SkinCorrosionInfo] | None = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.serious_eye_damage_info","title":"serious_eye_damage_info","text":"<pre><code>serious_eye_damage_info: (\n    list[SeriousEyeDamageInfo] | None\n) = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.respiratory_skin_sens_info","title":"respiratory_skin_sens_info","text":"<pre><code>respiratory_skin_sens_info: (\n    list[RespiratorySkinSensInfo] | None\n) = None\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceInfo.is_known","title":"is_known","text":"<pre><code>is_known: bool = True\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceResponse","title":"SubstanceResponse","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>SubstanceResponse is a Pydantic model representing the response containing substance information.</p> <p>Attributes:</p> Name Type Description <code>substances</code> <code>list[Substance]</code> <p>A list of substances.</p> <code>substance_errors</code> <code>list[Any] | None</code> <p>A list of errors related to substances, if any.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BioAccumulativeInfo\": {\n      \"description\": \"BioAccumulativeInfo is a Pydantic model representing bioaccumulative information.\\n\\nAttributes\\n----------\\nbcf_value : str | None\\n    The bioaccumulative factor value.\\ntemperature : str | None\\n    The temperature of the bioaccumulative test.\\nexposure_time : str | None\\n    The exposure time of the bioaccumulative test.\\nmethod : str | None\\n    The method of the bioaccumulative test.\\nspecies : str | None\\n    The species of the bioaccumulative test.\",\n      \"properties\": {\n        \"bcfValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Bcfvalue\"\n        },\n        \"temperature\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Temperature\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        }\n      },\n      \"title\": \"BioAccumulativeInfo\",\n      \"type\": \"object\"\n    },\n    \"BoilingPointInfo\": {\n      \"description\": \"BoilingPointInfo is a Pydantic model representing boiling point information.\\n\\nAttributes\\n----------\\nsource : list[BoilingPointSource] | None\\n    The source of the boiling point information.\\nvalues : list[BoilingPointValue] | None\\n    The values of the boiling point information.\",\n      \"properties\": {\n        \"source\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BoilingPointSource\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Source\"\n        },\n        \"values\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BoilingPointValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Values\"\n        }\n      },\n      \"title\": \"BoilingPointInfo\",\n      \"type\": \"object\"\n    },\n    \"BoilingPointSource\": {\n      \"description\": \"BoilingPointSource is a Pydantic model representing a boiling point source.\\n\\nAttributes\\n----------\\nnote_code : str | None\\n    The note code of the boiling point source.\\nnote : str | None\\n    The note of the boiling point source.\\nnote_field : str | None\\n    The note field of the boiling point source.\",\n      \"properties\": {\n        \"noteCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Notecode\"\n        },\n        \"note\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Note\"\n        },\n        \"noteField\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Notefield\"\n        }\n      },\n      \"title\": \"BoilingPointSource\",\n      \"type\": \"object\"\n    },\n    \"BoilingPointValue\": {\n      \"description\": \"BoilingPointValue is a Pydantic model representing a boiling point value.\\n\\nAttributes\\n----------\\nmin_value : str | None\\n    The minimum boiling point value.\\nmax_value : str | None\\n    The maximum boiling point value.\\nunit : str | None\\n    The unit of the boiling point value.\",\n      \"properties\": {\n        \"minValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minvalue\"\n        },\n        \"maxValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Maxvalue\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"BoilingPointValue\",\n      \"type\": \"object\"\n    },\n    \"DNELInfo\": {\n      \"description\": \"DNELInfo is a Pydantic model representing the Derived No Effect Level (DNEL) information.\\n\\nAttributes\\n----------\\nroe : str | None\\n    The reference exposure level.\\nhealth_effect : str | None\\n    The health effect associated with the exposure.\\nexposure_time : str | None\\n    The exposure time for the DNEL.\\napplication_area : str | None\\n    The area of application for the DNEL.\\nvalue : str | None\\n    The DNEL value.\\nremarks : str | None\\n    Any additional remarks regarding the DNEL.\",\n      \"properties\": {\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"healthEffect\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Healtheffect\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"applicationArea\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Applicationarea\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"remarks\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Remarks\"\n        }\n      },\n      \"title\": \"DNELInfo\",\n      \"type\": \"object\"\n    },\n    \"DegradabilityInfo\": {\n      \"description\": \"DegradabilityInfo is a Pydantic model representing information about the degradability of a substance.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the degradability test.\\nunit : str | None\\n    The unit of measurement for the degradability test.\\nexposure_time : str | None\\n    The exposure time of the degradability test.\\nmethod : str | None\\n    The method used for the degradability test.\\ntest_type : str | None\\n    The type of the degradability test.\\ndegradability : str | None\\n    The degradability classification.\\nvalue : str | None\\n    The value of the degradability test.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"testType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Testtype\"\n        },\n        \"degradability\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Degradability\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"DegradabilityInfo\",\n      \"type\": \"object\"\n    },\n    \"ExposureControl\": {\n      \"description\": \"ExposureControl is a Pydantic model representing exposure control measures.\\n\\nAttributes\\n----------\\ntype : str | None\\n    The type of exposure control.\\nvalue : float | None\\n    The value associated with the exposure control.\\nunit : str | None\\n    The unit of measurement for the exposure control.\",\n      \"properties\": {\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"ExposureControl\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Hazard is a Pydantic model representing hazard information.\\n\\nAttributes\\n----------\\nh_code : str | None\\n    The hazard code.\\ncategory : str | None\\n    The category of the hazard.\\nclass_ : str | None\\n    The class of the hazard.\\nsub_category : str | None\\n    The sub-category of the hazard.\",\n      \"properties\": {\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Class\"\n        },\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Subcategory\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"LethalDoseConcentration\": {\n      \"description\": \"LethalDoseConcentration is a Pydantic model representing lethal dose and concentration information.\\n\\nAttributes\\n----------\\nduration : str | None\\n    The duration of the exposure.\\nunit : str | None\\n    The unit of measurement for the lethal dose.\\ntype : str | None\\n    The type of the lethal dose.\\nspecies : str | None\\n    The species tested.\\nvalue : float | None\\n    The lethal dose value.\\nsex : str | None\\n    The sex of the species tested.\\nexposure_time : str | None\\n    The exposure time for the lethal dose test.\\nmethod : str | None\\n    The method used for the lethal dose test.\\ntest_atmosphere : str | None\\n    The atmosphere in which the test was conducted.\",\n      \"properties\": {\n        \"duration\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Duration\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"sex\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sex\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"testAtmosphere\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Testatmosphere\"\n        }\n      },\n      \"title\": \"LethalDoseConcentration\",\n      \"type\": \"object\"\n    },\n    \"MolecularWeight\": {\n      \"description\": \"MolecularWeight is a Pydantic model representing molecular weight information.\\n\\nAttributes\\n----------\\nvalues : list[MolecularWeightValue] | None\\n    The list of molecular weight values.\",\n      \"properties\": {\n        \"values\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/MolecularWeightValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Values\"\n        }\n      },\n      \"title\": \"MolecularWeight\",\n      \"type\": \"object\"\n    },\n    \"MolecularWeightValue\": {\n      \"description\": \"MolecularWeightValue is a Pydantic model representing a molecular weight value.\\n\\nAttributes\\n----------\\nmin_value : str | None\\n    The minimum molecular weight value.\\nmax_value : str | None\\n    The maximum molecular weight value.\\nunit : str | None\\n    The unit of measurement for the molecular weight.\",\n      \"properties\": {\n        \"minValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minvalue\"\n        },\n        \"maxValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Maxvalue\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"MolecularWeightValue\",\n      \"type\": \"object\"\n    },\n    \"RSL\": {\n      \"description\": \"RSL is a Pydantic model representing the regulatory substance list (RSL) information.\\n\\nAttributes\\n----------\\nsanitizer : RSLSanitizer | None\\n    The sanitizer information associated with the RSL.\",\n      \"properties\": {\n        \"sanitizer\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/RSLSanitizer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"title\": \"RSL\",\n      \"type\": \"object\"\n    },\n    \"RSLSanitizer\": {\n      \"description\": \"RSLSanitizer is a Pydantic model representing sanitizer information.\\n\\nAttributes\\n----------\\nvalue : float | None\\n    The value of the sanitizer.\\nunit : str | None\\n    The unit of measurement for the sanitizer.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        }\n      },\n      \"title\": \"RSLSanitizer\",\n      \"type\": \"object\"\n    },\n    \"RespiratorySkinSensInfo\": {\n      \"description\": \"RespiratorySkinSensInfo is a Pydantic model representing respiratory and skin sensitization information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the respiratory skin sensitization test.\\nroe : str | None\\n    The reference exposure level.\\nmethod : str | None\\n    The method used for the respiratory skin sensitization test.\\nspecies : str | None\\n    The species tested for respiratory skin sensitization.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        }\n      },\n      \"title\": \"RespiratorySkinSensInfo\",\n      \"type\": \"object\"\n    },\n    \"SeriousEyeDamageInfo\": {\n      \"description\": \"SeriousEyeDamageInfo is a Pydantic model representing serious eye damage information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the serious eye damage test.\\nroe : str | None\\n    The reference exposure level.\\nunit : str | None\\n    The unit of measurement for the serious eye damage test.\\nmethod : str | None\\n    The method used for the serious eye damage test.\\nvalue : float | None\\n    The value of the serious eye damage test.\\nspecies : str | None\\n    The species tested for serious eye damage.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        }\n      },\n      \"title\": \"SeriousEyeDamageInfo\",\n      \"type\": \"object\"\n    },\n    \"SkinCorrosionInfo\": {\n      \"description\": \"SkinCorrosionInfo is a Pydantic model representing skin corrosion information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the skin corrosion test.\\nroe : str | None\\n    The reference exposure level.\\nunit : str | None\\n    The unit of measurement for the skin corrosion test.\\nmethod : str | None\\n    The method used for the skin corrosion test.\\nvalue : float | None\\n    The value of the skin corrosion test.\\nspecies : str | None\\n    The species tested for skin corrosion.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        }\n      },\n      \"title\": \"SkinCorrosionInfo\",\n      \"type\": \"object\"\n    },\n    \"SpecificConcentration\": {\n      \"description\": \"SpecificConcentration is a Pydantic model representing specific concentration information.\\n\\nAttributes\\n----------\\nspecific_conc : str | None\\n    The specific concentration value.\\nsub_category : str | None\\n    The sub-category of the specific concentration.\\ncategory : int | None\\n    The category of the specific concentration.\\nh_code : str | None\\n    The hazard code associated with the specific concentration.\\nclass_ : str | None\\n    The class of the specific concentration.\",\n      \"properties\": {\n        \"specific_conc\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Specific Conc\"\n        },\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Subcategory\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Category\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Hcode\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Class\"\n        }\n      },\n      \"title\": \"SpecificConcentration\",\n      \"type\": \"object\"\n    },\n    \"SubstanceInfo\": {\n      \"description\": \"SubstanceInfo is a Pydantic model representing information about a chemical substance.\\n\\nAttributes\\n----------\\nacute_dermal_tox_info : list[ToxicityInfo] | None\\n    Information about acute dermal toxicity.\\nacute_inhalation_tox_info : list[ToxicityInfo] | None\\n    Information about acute inhalation toxicity.\\nacute_oral_tox_info : list[ToxicityInfo] | None\\n    Information about acute oral toxicity.\\nacute_tox_info : list[ToxicityInfo] | None\\n    General acute toxicity information.\\nbio_accumulative_info : list[BioAccumulativeInfo] | None\\n    Information about bioaccumulation.\\nboiling_point_info : list[BoilingPointInfo] | None\\n    Information about boiling points.\\ncas_id : str\\n    The CAS ID of the substance.\\nclassification : str | None\\n    The classification of the substance.\\nclassification_type : str\\n    The type of classification.\\ndegradability_info : list[DegradabilityInfo] | None\\n    Information about degradability.\\ndnel_info : list[DNELInfo] | None\\n    Information about the Derived No Effect Level (DNEL).\\nec_list_no : str\\n    The EC list number.\\nexposure_controls_acgih : list[ExposureControl] | None\\n    ACGIH exposure controls.\\nhazards : list[Hazard] | None\\n    List of hazards associated with the substance.\\niarc_carcinogen : str | None\\n    IARC carcinogen classification.\\nntp_carcinogen : str | None\\n    NTP carcinogen classification.\\nosha_carcinogen : bool | None\\n    OSHA carcinogen classification.\\nhealth_effects : str | None\\n    Information about health effects.\\nname : list[SubstanceName] | None\\n    Names of the substance.\\npage_number : int | None\\n    Page number for reference.\\naicis_notified : bool | None\\n    Indicates if AICIS has been notified.\\napproved_legal_entities : Any | None\\n    Approved legal entities for the substance.\\naspiration_tox_info : list[Any] | None\\n    Information about aspiration toxicity.\\nbasel_conv_list : bool | None\\n    Indicates if the substance is on the Basel Convention list.\\nbei_info : list[Any] | None\\n    Information related to BEI.\\ncaa_cfr40 : bool | None\\n    Indicates compliance with CAA CFR 40.\\ncaa_hpa : bool | None\\n    Indicates compliance with CAA HPA.\\ncanada_inventory_status : str | None\\n    Status in the Canadian inventory.\\ncarcinogen_info : list[Any] | None\\n    Information about carcinogenicity.\\nchemical_category : list[str] | None\\n    Categories of the chemical.\\ndermal_acute_toxicity : float | None\\n    Acute dermal toxicity value.\\ninhalation_acute_toxicity : float | None\\n    Acute inhalation toxicity value.\\noral_acute_toxicity : float | None\\n    Acute oral toxicity value.\\nlethal_dose_and_concentrations : list[LethalDoseConcentration] | None\\n    Information about lethal doses and concentrations.\\nm_factor : int | None\\n    M factor for acute toxicity.\\nm_factor_chronic : int | None\\n    M factor for chronic toxicity.\\nmolecular_weight : list[MolecularWeight] | None\\n    Molecular weight information.\\nrsl : RSL | None\\n    Risk-based screening level.\\nspecific_conc_eu : list[SpecificConcentration] | None\\n    Specific concentration information for the EU.\\nspecific_conc_source : str | None\\n    Source of specific concentration information.\\nsustainability_status_lbc : str | None\\n    Sustainability status under LBC.\\ntsca_8b : bool | None\\n    Indicates compliance with TSCA 8(b).\\ncdsa_list : bool | None\\n    Indicates if the substance is on the CDSA list.\\ncn_csdc_regulations : bool | None\\n    Compliance with CN CSDC regulations.\\ncn_pcod_list : bool | None\\n    Indicates if the substance is on the CN PCOD list.\\ncn_priority_list : bool | None\\n    Indicates if the substance is on the CN priority list.\\nec_notified : str | None\\n    Notification status in the EC.\\neu_annex_14_substances_list : bool | None\\n    Indicates if the substance is on the EU Annex 14 list.\\neu_annex_17_restrictions_list : bool | None\\n    Indicates if the substance is on the EU Annex 17 restrictions list.\\neu_annex_17_substances_list : bool | None\\n    Indicates if the substance is on the EU Annex 17 substances list.\\neu_candidate_list : bool | None\\n    Indicates if the substance is on the EU candidate list.\\neu_dang_chem_annex_1_part_1_list : bool | None\\n    Indicates if the substance is on the EU dangerous chemicals Annex 1 Part 1 list.\\neu_dang_chem_annex_1_part_2_list : bool | None\\n    Indicates if the substance is on the EU dangerous chemicals Annex 1 Part 2 list.\\neu_dang_chem_annex_1_part_3_list : bool | None\\n    Indicates if the substance is on the EU dangerous chemicals Annex 1 Part 3 list.\\neu_dang_chem_annex_5_list : bool | None\\n    Indicates if the substance is on the EU dangerous chemicals Annex 5 list.\\neu_directive_ec_list : bool | None\\n    Indicates if the substance is on the EU directive EC list.\\neu_explosive_precursors_annex_1_list : bool | None\\n    Indicates if the substance is on the EU explosive precursors Annex 1 list.\\neu_explosive_precursors_annex_2_list : bool | None\\n    Indicates if the substance is on the EU explosive precursors Annex 2 list.\\neu_ozone_depletion_list : bool | None\\n    Indicates if the substance is on the EU ozone depletion list.\\neu_pollutant_annex_2_list : bool | None\\n    Indicates if the substance is on the EU pollutant Annex 2 list.\\neu_pop_list : bool | None\\n    Indicates if the substance is on the EU POP list.\\nexport_control_list_phrases : bool | None\\n    Indicates if the substance is on the export control list.\\ngreen_gas_list : bool | None\\n    Indicates if the substance is on the green gas list.\\niecsc_notified : bool | None\\n    Indicates if the substance is IECSc notified.\\nindex_no : str | None\\n    Index number for the substance.\\njpencs_notified : bool | None\\n    Indicates if the substance is JPENCS notified.\\njpishl_notified : bool | None\\n    Indicates if the substance is JPISHL notified.\\nkoecl_notified : bool | None\\n    Indicates if the substance is KOECL notified.\\nkyoto_protocol : bool | None\\n    Indicates compliance with the Kyoto Protocol.\\nmassachusetts_rtk : bool | None\\n    Indicates if the substance is on the Massachusetts RTK list.\\nmontreal_protocol : bool | None\\n    Indicates compliance with the Montreal Protocol.\\nnew_jersey_rtk : bool | None\\n    Indicates if the substance is on the New Jersey RTK list.\\nnew_york_rtk : bool | None\\n    Indicates if the substance is on the New York RTK list.\\nnzioc_notified : bool | None\\n    Indicates if the substance is NZIOC notified.\\npcr_regulated : bool | None\\n    Indicates if the substance is PCR regulated.\\npennsylvania_rtk : bool | None\\n    Indicates if the substance is on the Pennsylvania RTK list.\\nperoxide_function_groups : int | None\\n    Number of peroxide function groups.\\npiccs_notified : bool | None\\n    Indicates if the substance is PICCS notified.\\nrhode_island_rtk : bool | None\\n    Indicates if the substance is on the Rhode Island RTK list.\\nrotterdam_conv_list : bool | None\\n    Indicates if the substance is on the Rotterdam Convention list.\\nsdwa : bool | None\\n    Indicates compliance with the SDWA.\\nsource : str | None\\n    Source of the substance information.\\nspecific_concentration_limit : str | None\\n    Specific concentration limit for the substance.\\nstockholm_conv_list : bool | None\\n    Indicates if the substance is on the Stockholm Convention list.\\nstot_affected_organs : str | None\\n    Organs affected by STOT.\\nstot_route_of_exposure : str | None\\n    Route of exposure for STOT.\\ntcsi_notified : bool | None\\n    Indicates if the substance is TCSI notified.\\ntrade_secret : str | None\\n    Information about trade secrets.\\ntw_ghs_clas_list : bool | None\\n    Indicates if the substance is on the TW GHS classification list.\\ntw_handle_priority_chem : bool | None\\n    Indicates if the substance is a priority chemical.\\ntw_handle_toxic_chem : bool | None\\n    Indicates if the substance is a toxic chemical.\\ntw_ind_waste_standards : bool | None\\n    Indicates compliance with TW industrial waste standards.\\nvinic_notified : bool | None\\n    Indicates if the substance is VINIC notified.\\nexposure_controls_osha : list[ExposureControl] | None\\n    OSHA exposure controls.\\nexposure_controls_aiha : list[ExposureControl] | None\\n    AIHA exposure controls.\\nexposure_controls_niosh : list[ExposureControl] | None\\n    NIOSH exposure controls.\\nsnur : bool | dict | None\\n    Significant new use rule information.\\ntsca_12b_concentration_limit : float | None\\n    TSCA 12(b) concentration limit.\\ncercla_rq : float | None\\n    CERCLA reportable quantity.\\ncalifornia_prop_65 : list[str] | None\\n    Information related to California Prop 65.\\nsara_302 : bool | None\\n    Indicates compliance with SARA 302.\\nsara_313_concentration_limit : float | None\\n    SARA 313 concentration limit.\\ncfr_marine_pollutant : dict | None\\n    Information about marine pollutants under CFR.\\ncfr_reportable_quantity : dict | None\\n    Information about reportable quantities under CFR.\\nrohs_concentration : float | None\\n    ROHS concentration limit.\\nskin_corrosion_info : list[SkinCorrosionInfo] | None\\n    Information about skin corrosion.\\nserious_eye_damage_info : list[SeriousEyeDamageInfo] | None\\n    Information about serious eye damage.\\nrespiratory_skin_sens_info : list[RespiratorySkinSensInfo] | None\\n    Information about respiratory skin sensitization.\\nis_known : bool\\n    Indicates if the substance is known (i.e. has known regulatory or hazard information in the database)\\n    (note this is an alias for the isCas field which behaves in a non intuitive way in the API so we have opted to use is_known for usability instead)\",\n      \"properties\": {\n        \"type\": {\n          \"const\": \"Substance\",\n          \"default\": \"Substance\",\n          \"title\": \"Type\",\n          \"type\": \"string\"\n        },\n        \"acuteDermalToxInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ToxicityInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acutedermaltoxinfo\"\n        },\n        \"acuteInhalationToxInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ToxicityInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acuteinhalationtoxinfo\"\n        },\n        \"acuteOralToxInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ToxicityInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acuteoraltoxinfo\"\n        },\n        \"acuteToxInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ToxicityInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acutetoxinfo\"\n        },\n        \"bioAccumulativeInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BioAccumulativeInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Bioaccumulativeinfo\"\n        },\n        \"boilingpointInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BoilingPointInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Boilingpointinfo\"\n        },\n        \"casID\": {\n          \"title\": \"Casid\",\n          \"type\": \"string\"\n        },\n        \"classification\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Classification\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Classificationtype\"\n        },\n        \"degradabilityInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DegradabilityInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Degradabilityinfo\"\n        },\n        \"dnelInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DNELInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Dnelinfo\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Eclistno\"\n        },\n        \"exposureControlsACGIH\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ExposureControl\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposurecontrolsacgih\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Hazards\"\n        },\n        \"iarcCarcinogen\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Iarccarcinogen\"\n        },\n        \"ntpCarcinogen\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Ntpcarcinogen\"\n        },\n        \"oshaCarcinogen\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Oshacarcinogen\"\n        },\n        \"healthEffects\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Healtheffects\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SubstanceName\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"pageNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Pagenumber\"\n        },\n        \"aicisNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Aicisnotified\"\n        },\n        \"approvedLegalEntities\": {\n          \"anyOf\": [\n            {},\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Approvedlegalentities\"\n        },\n        \"aspirationToxInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Aspirationtoxinfo\"\n        },\n        \"baselConvList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Baselconvlist\"\n        },\n        \"beiInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Beiinfo\"\n        },\n        \"caaCFR40\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Caacfr40\"\n        },\n        \"caaHPA\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Caahpa\"\n        },\n        \"canadaInventoryStatus\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Canadainventorystatus\"\n        },\n        \"carcinogenInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Carcinogeninfo\"\n        },\n        \"chemicalCategory\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Chemicalcategory\"\n        },\n        \"dermalAcuteToxicity\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Dermalacutetoxicity\"\n        },\n        \"inhalationAcuteToxicity\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inhalationacutetoxicity\"\n        },\n        \"oralAcuteToxicity\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Oralacutetoxicity\"\n        },\n        \"lethalDoseAndConcentrations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/LethalDoseConcentration\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lethaldoseandconcentrations\"\n        },\n        \"mFactor\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Mfactor\"\n        },\n        \"mFactorChronic\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Mfactorchronic\"\n        },\n        \"molecularWeight\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/MolecularWeight\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Molecularweight\"\n        },\n        \"rsl\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/RSL\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"specificConcEU\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SpecificConcentration\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Specificconceu\"\n        },\n        \"specificConcSource\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Specificconcsource\"\n        },\n        \"sustainabilityStatusLBC\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sustainabilitystatuslbc\"\n        },\n        \"tsca8B\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tsca8B\"\n        },\n        \"cdsaList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cdsalist\"\n        },\n        \"cnCSDCRegulations\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cncsdcregulations\"\n        },\n        \"cnPCODList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cnpcodlist\"\n        },\n        \"cnPriorityList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cnprioritylist\"\n        },\n        \"ecNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Ecnotified\"\n        },\n        \"euAnnex14SubstancesList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Euannex14Substanceslist\"\n        },\n        \"euAnnex17RestrictionsList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Euannex17Restrictionslist\"\n        },\n        \"euAnnex17SubstancesList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Euannex17Substanceslist\"\n        },\n        \"euCandidateList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Eucandidatelist\"\n        },\n        \"euDangChemAnnex1Part1List\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Eudangchemannex1Part1List\"\n        },\n        \"euDangChemAnnex1Part2List\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Eudangchemannex1Part2List\"\n        },\n        \"euDangChemAnnex1Part3List\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Eudangchemannex1Part3List\"\n        },\n        \"euDangChemAnnex5List\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Eudangchemannex5List\"\n        },\n        \"euDirectiveEcList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Eudirectiveeclist\"\n        },\n        \"euExplosivePrecursorsAnnex1List\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Euexplosiveprecursorsannex1List\"\n        },\n        \"euExplosivePrecursorsAnnex2List\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Euexplosiveprecursorsannex2List\"\n        },\n        \"euOzoneDepletionList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Euozonedepletionlist\"\n        },\n        \"euPollutantAnnex2List\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Eupollutantannex2List\"\n        },\n        \"euPopList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Eupoplist\"\n        },\n        \"exportControlListPhrases\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exportcontrollistphrases\"\n        },\n        \"greenGasList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Greengaslist\"\n        },\n        \"iecscNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Iecscnotified\"\n        },\n        \"indexNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Indexno\"\n        },\n        \"jpencsNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Jpencsnotified\"\n        },\n        \"jpishlNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Jpishlnotified\"\n        },\n        \"koeclNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Koeclnotified\"\n        },\n        \"kyotoProtocol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Kyotoprotocol\"\n        },\n        \"massachusettsRTK\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Massachusettsrtk\"\n        },\n        \"montrealProtocol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Montrealprotocol\"\n        },\n        \"newJerseyRTK\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Newjerseyrtk\"\n        },\n        \"newYorkRTK\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Newyorkrtk\"\n        },\n        \"nziocNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Nziocnotified\"\n        },\n        \"pcrRegulated\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Pcrregulated\"\n        },\n        \"pennsylvaniaRTK\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Pennsylvaniartk\"\n        },\n        \"peroxideFunctionGroups\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Peroxidefunctiongroups\"\n        },\n        \"piccsNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Piccsnotified\"\n        },\n        \"rhodeIslandRTK\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rhodeislandrtk\"\n        },\n        \"rotterdamConvList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rotterdamconvlist\"\n        },\n        \"sdwa\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sdwa\"\n        },\n        \"source\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Source\"\n        },\n        \"specificConcentrationLimit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Specificconcentrationlimit\"\n        },\n        \"stockholmConvList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Stockholmconvlist\"\n        },\n        \"stotAffectedOrgans\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Stotaffectedorgans\"\n        },\n        \"stotRouteOfExposure\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Stotrouteofexposure\"\n        },\n        \"tcsiNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tcsinotified\"\n        },\n        \"tradeSecret\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tradesecret\"\n        },\n        \"twGHSClasList\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Twghsclaslist\"\n        },\n        \"twHandlePriorityChem\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Twhandleprioritychem\"\n        },\n        \"twHandleToxicChem\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Twhandletoxicchem\"\n        },\n        \"twIndWasteStandards\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Twindwastestandards\"\n        },\n        \"vinicNotified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Vinicnotified\"\n        },\n        \"exposureControlsOSHA\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ExposureControl\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposurecontrolsosha\"\n        },\n        \"exposureControlsAIHA\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ExposureControl\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposurecontrolsaiha\"\n        },\n        \"exposureControlsNIOSH\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ExposureControl\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposurecontrolsniosh\"\n        },\n        \"snur\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Snur\"\n        },\n        \"tsca12BConcentrationLimit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tsca12Bconcentrationlimit\"\n        },\n        \"cerclaRQ\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cerclarq\"\n        },\n        \"californiaProp65\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Californiaprop65\"\n        },\n        \"sara302\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sara302\"\n        },\n        \"sara313ConcentrationLimit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sara313Concentrationlimit\"\n        },\n        \"CFRmarinePollutant\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cfrmarinepollutant\"\n        },\n        \"CFRreportableQuantity\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cfrreportablequantity\"\n        },\n        \"rohsConcentration\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rohsconcentration\"\n        },\n        \"skinCorrosionInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SkinCorrosionInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Skincorrosioninfo\"\n        },\n        \"seriousEyeDamageInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/SeriousEyeDamageInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Seriouseyedamageinfo\"\n        },\n        \"respiratorySkinSensInfo\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/RespiratorySkinSensInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Respiratoryskinsensinfo\"\n        },\n        \"isCas\": {\n          \"default\": true,\n          \"title\": \"Iscas\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"casID\"\n      ],\n      \"title\": \"SubstanceInfo\",\n      \"type\": \"object\"\n    },\n    \"SubstanceName\": {\n      \"description\": \"SubstanceName is a Pydantic model representing the name of a substance.\\n\\nAttributes\\n----------\\nname : str | None\\n    The name of the substance.\\nlanguage_code : str | None\\n    The language code for the substance name.\\ncloaked_name : str | None\\n    The cloaked name of the substance, if applicable.\",\n      \"properties\": {\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"language_code\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Language Code\"\n        },\n        \"cloakedName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cloakedname\"\n        }\n      },\n      \"title\": \"SubstanceName\",\n      \"type\": \"object\"\n    },\n    \"ToxicityInfo\": {\n      \"description\": \"ToxicityInfo is a Pydantic model representing toxicity information.\\n\\nAttributes\\n----------\\nresult : str | None\\n    The result of the toxicity test.\\nroe : str | None\\n    The reference exposure level.\\nunit : str | None\\n    The unit of the toxicity test.\\nmethod: str | None\\n    The method of the toxicity test.\\nvalue: float | None\\n    The value of the toxicity test.\\nspecies: str | None\\n    The species of the toxicity test.\\nsex: str | None\\n    The sex of the toxicity test.\\nexposure_time: str | None\\n    The exposure time of the toxicity test.\\ntype: str | None\\n    The type of the toxicity test.\\nvalue_type: str | None\\n    The value type of the toxicity test.\\ntemperature: str | None\\n    The temperature of the toxicity test.\",\n      \"properties\": {\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Result\"\n        },\n        \"roe\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Roe\"\n        },\n        \"unit\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"method\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Method\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"species\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Species\"\n        },\n        \"sex\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sex\"\n        },\n        \"exposureTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exposuretime\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Type\"\n        },\n        \"valueType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Valuetype\"\n        },\n        \"temperature\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Temperature\"\n        }\n      },\n      \"title\": \"ToxicityInfo\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"SubstanceResponse is a Pydantic model representing the response containing substance information.\\n\\nAttributes\\n----------\\nsubstances : list[Substance]\\n    A list of substances.\\nsubstance_errors : list[Any] | None\\n    A list of errors related to substances, if any.\",\n  \"properties\": {\n    \"substances\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/SubstanceInfo\"\n      },\n      \"title\": \"Substances\",\n      \"type\": \"array\"\n    },\n    \"substanceErrors\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"additionalProperties\": true,\n            \"type\": \"object\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Substanceerrors\"\n    }\n  },\n  \"required\": [\n    \"substances\"\n  ],\n  \"title\": \"SubstanceResponse\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>substances</code>                 (<code>list[SubstanceInfo]</code>)             </li> <li> <code>substance_errors</code>                 (<code>list[dict[str, Any]] | None</code>)             </li> </ul>"},{"location":"resources/substances/#albert.resources.substance.SubstanceResponse.substances","title":"substances","text":"<pre><code>substances: list[SubstanceInfo]\n</code></pre>"},{"location":"resources/substances/#albert.resources.substance.SubstanceResponse.substance_errors","title":"substance_errors","text":"<pre><code>substance_errors: list[dict[str, Any]] | None = None\n</code></pre>"},{"location":"resources/tags/","title":"Tags","text":""},{"location":"resources/tags/#albert.resources.tags","title":"albert.resources.tags","text":""},{"location":"resources/tags/#albert.resources.tags.TagEntity","title":"TagEntity","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>TagEntity is an enumeration of possible tag entities.</p> <p>Attributes:</p> Name Type Description <code>INVENTORY</code> <code>COMPANY</code>"},{"location":"resources/tags/#albert.resources.tags.TagEntity.INVENTORY","title":"INVENTORY","text":"<pre><code>INVENTORY = 'Inventory'\n</code></pre>"},{"location":"resources/tags/#albert.resources.tags.TagEntity.COMPANY","title":"COMPANY","text":"<pre><code>COMPANY = 'Company'\n</code></pre>"},{"location":"resources/tags/#albert.resources.tags.Tag","title":"Tag","text":"<p>               Bases: <code>BaseResource</code></p> <p>Tag is a Pydantic model representing a tag entity.</p> <p>Attributes:</p> Name Type Description <code>tag</code> <code>str</code> <p>The name of the tag.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the tag. Set when the tag is retrieved from Albert.</p> <p>Methods:</p> Name Description <code>from_string</code> <p>Creates a Tag object from a string.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"Tag\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tag</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/tags/#albert.resources.tags.Tag.tag","title":"tag","text":"<pre><code>tag: str\n</code></pre>"},{"location":"resources/tags/#albert.resources.tags.Tag.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/tags/#albert.resources.tags.Tag.from_string","title":"from_string","text":"<pre><code>from_string(tag: str) -&gt; Tag\n</code></pre> <p>Creates a Tag object from a string.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>str</code> <p>The name of the tag.</p> required <p>Returns:</p> Type Description <code>Tag</code> <p>The Tag object created from the string.</p> Source code in <code>src/albert/resources/tags.py</code> <pre><code>@classmethod\ndef from_string(cls, tag: str) -&gt; \"Tag\":\n    \"\"\"\n    Creates a Tag object from a string.\n\n    Parameters\n    ----------\n    tag : str\n        The name of the tag.\n\n    Returns\n    -------\n    Tag\n        The Tag object created from the string.\n    \"\"\"\n    return cls(tag=tag)\n</code></pre>"},{"location":"resources/tasks/","title":"Tasks","text":""},{"location":"resources/tasks/#albert.resources.tasks","title":"albert.resources.tasks","text":"<p>Attributes:</p> Name Type Description <code>TaskUnion</code> <code>TaskAdapter</code>"},{"location":"resources/tasks/#albert.resources.tasks.TaskUnion","title":"TaskUnion","text":"<pre><code>TaskUnion = Annotated[\n    PropertyTask | BatchTask | GeneralTask,\n    Field(..., discriminator=\"category\"),\n]\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskAdapter","title":"TaskAdapter","text":"<pre><code>TaskAdapter = TypeAdapter(TaskUnion)\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskCategory","title":"TaskCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>PROPERTY</code> <code>BATCH</code> <code>GENERAL</code> <code>BATCH_WITH_QC</code>"},{"location":"resources/tasks/#albert.resources.tasks.TaskCategory.PROPERTY","title":"PROPERTY","text":"<pre><code>PROPERTY = 'Property'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskCategory.BATCH","title":"BATCH","text":"<pre><code>BATCH = 'Batch'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskCategory.GENERAL","title":"GENERAL","text":"<pre><code>GENERAL = 'General'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskCategory.BATCH_WITH_QC","title":"BATCH_WITH_QC","text":"<pre><code>BATCH_WITH_QC = 'BatchWithQC'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchSizeUnit","title":"BatchSizeUnit","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>GRAMS</code> <code>KILOGRAMS</code> <code>POUNDS</code>"},{"location":"resources/tasks/#albert.resources.tasks.BatchSizeUnit.GRAMS","title":"GRAMS","text":"<pre><code>GRAMS = 'g'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchSizeUnit.KILOGRAMS","title":"KILOGRAMS","text":"<pre><code>KILOGRAMS = 'Kg'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchSizeUnit.POUNDS","title":"POUNDS","text":"<pre><code>POUNDS = 'lbs'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskSourceType","title":"TaskSourceType","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>TASK</code> <code>TEMPLATE</code>"},{"location":"resources/tasks/#albert.resources.tasks.TaskSourceType.TASK","title":"TASK","text":"<pre><code>TASK = 'task'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskSourceType.TEMPLATE","title":"TEMPLATE","text":"<pre><code>TEMPLATE = 'template'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskSource","title":"TaskSource","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"TaskSourceType\": {\n      \"enum\": [\n        \"task\",\n        \"template\"\n      ],\n      \"title\": \"TaskSourceType\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"type\": {\n      \"$ref\": \"#/$defs/TaskSourceType\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"type\"\n  ],\n  \"title\": \"TaskSource\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>type</code>                 (<code>TaskSourceType</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.TaskSource.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskSource.type","title":"type","text":"<pre><code>type: TaskSourceType\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskPriority","title":"TaskPriority","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>HIGH</code> <code>MEDIUM</code> <code>LOW</code>"},{"location":"resources/tasks/#albert.resources.tasks.TaskPriority.HIGH","title":"HIGH","text":"<pre><code>HIGH = 'High'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskPriority.MEDIUM","title":"MEDIUM","text":"<pre><code>MEDIUM = 'Medium'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskPriority.LOW","title":"LOW","text":"<pre><code>LOW = 'Low'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.HistoryEntity","title":"HistoryEntity","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>WORKFLOW</code>"},{"location":"resources/tasks/#albert.resources.tasks.HistoryEntity.WORKFLOW","title":"WORKFLOW","text":"<pre><code>WORKFLOW = 'workflow'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.IntervalId","title":"IntervalId","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"IntervalId\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.IntervalId.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockLevelInventoryInformation","title":"BlockLevelInventoryInformation","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"lotId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lotid\"\n    },\n    \"invLotUniqueId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Invlotuniqueid\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"BlockLevelInventoryInformation\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>lot_id</code>                 (<code>str | None</code>)             </li> <li> <code>inv_lot_unique_id</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.BlockLevelInventoryInformation.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockLevelInventoryInformation.lot_id","title":"lot_id","text":"<pre><code>lot_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockLevelInventoryInformation.inv_lot_unique_id","title":"inv_lot_unique_id","text":"<pre><code>inv_lot_unique_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockState","title":"BlockState","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BlockLevelInventoryInformation\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockLevelInventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"IntervalId\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"IntervalId\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"description\": \"The ID of the block.\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"expand\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Expand\"\n    },\n    \"Interval\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/IntervalId\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The IDs of the interval (e.g., id: ROW2XROW4)\",\n      \"title\": \"Interval\"\n    },\n    \"Inventory\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/BlockLevelInventoryInformation\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Inventory\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"BlockState\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>expanded</code>                 (<code>bool | None</code>)             </li> <li> <code>intervals</code>                 (<code>list[IntervalId] | None</code>)             </li> <li> <code>inventory</code>                 (<code>list[BlockLevelInventoryInformation] | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.BlockState.id","title":"id","text":"<pre><code>id: str\n</code></pre> <p>The ID of the block.</p>"},{"location":"resources/tasks/#albert.resources.tasks.BlockState.expanded","title":"expanded","text":"<pre><code>expanded: bool | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockState.intervals","title":"intervals","text":"<pre><code>intervals: list[IntervalId] | None = None\n</code></pre> <p>The IDs of the interval (e.g., id: ROW2XROW4)</p>"},{"location":"resources/tasks/#albert.resources.tasks.BlockState.inventory","title":"inventory","text":"<pre><code>inventory: list[BlockLevelInventoryInformation] | None = (\n    None\n)\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.PageState","title":"PageState","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BlockLevelInventoryInformation\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockLevelInventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"BlockState\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The ID of the block.\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"expand\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Expand\"\n        },\n        \"Interval\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalId\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The IDs of the interval (e.g., id: ROW2XROW4)\",\n          \"title\": \"Interval\"\n        },\n        \"Inventory\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockLevelInventoryInformation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventory\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockState\",\n      \"type\": \"object\"\n    },\n    \"IntervalId\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"IntervalId\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"leftPanelExpand\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Leftpanelexpand\"\n    },\n    \"Block\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/BlockState\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Block\"\n    }\n  },\n  \"title\": \"PageState\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>left_panel_expanded</code>                 (<code>bool | None</code>)             </li> <li> <code>blocks</code>                 (<code>list[BlockState] | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.PageState.left_panel_expanded","title":"left_panel_expanded","text":"<pre><code>left_panel_expanded: bool | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.PageState.blocks","title":"blocks","text":"<pre><code>blocks: list[BlockState] | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Target","title":"Target","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"dataColumnUniqueId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Datacolumnuniqueid\"\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    }\n  },\n  \"title\": \"Target\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data_column_unique_id</code>                 (<code>str | None</code>)             </li> <li> <code>value</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.Target.data_column_unique_id","title":"data_column_unique_id","text":"<pre><code>data_column_unique_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Target.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.DataTemplateAndTargets","title":"DataTemplateAndTargets","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"Target\": {\n      \"properties\": {\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"Target\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"targets\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/Target\"\n      },\n      \"title\": \"Targets\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"targets\"\n  ],\n  \"title\": \"DataTemplateAndTargets\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>targets</code>                 (<code>list[Target]</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.DataTemplateAndTargets.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.DataTemplateAndTargets.targets","title":"targets","text":"<pre><code>targets: list[Target]\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Standard","title":"Standard","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"standardId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Standardid\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"standardOrganization\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Standardorganization\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"Standard\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>standard_id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>standard_organization</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.Standard.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Standard.standard_id","title":"standard_id","text":"<pre><code>standard_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Standard.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Standard.standard_organization","title":"standard_organization","text":"<pre><code>standard_organization: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockDataTemplateInfo","title":"BlockDataTemplateInfo","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"Standard\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"standardId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Standardid\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"standardOrganization\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Standardorganization\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"Standard\",\n      \"type\": \"object\"\n    },\n    \"Target\": {\n      \"properties\": {\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"Target\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"fullName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Fullname\"\n    },\n    \"Standards\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Standard\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Targets\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/Target\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Targets\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"name\"\n  ],\n  \"title\": \"BlockDataTemplateInfo\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>full_name</code>                 (<code>str | None</code>)             </li> <li> <code>standards</code>                 (<code>Standard | None</code>)             </li> <li> <code>targets</code>                 (<code>list[Target] | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.BlockDataTemplateInfo.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockDataTemplateInfo.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockDataTemplateInfo.full_name","title":"full_name","text":"<pre><code>full_name: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockDataTemplateInfo.standards","title":"standards","text":"<pre><code>standards: Standard | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BlockDataTemplateInfo.targets","title":"targets","text":"<pre><code>targets: list[Target] | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskState","title":"TaskState","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Attributes:</p> Name Type Description <code>UNCLAIMED</code> <code>NOT_STARTED</code> <code>IN_PROGRESS</code> <code>COMPLETED</code> <code>CLOSED</code>"},{"location":"resources/tasks/#albert.resources.tasks.TaskState.UNCLAIMED","title":"UNCLAIMED","text":"<pre><code>UNCLAIMED = 'Unclaimed'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskState.NOT_STARTED","title":"NOT_STARTED","text":"<pre><code>NOT_STARTED = 'Not Started'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskState.IN_PROGRESS","title":"IN_PROGRESS","text":"<pre><code>IN_PROGRESS = 'In Progress'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskState.COMPLETED","title":"COMPLETED","text":"<pre><code>COMPLETED = 'Completed'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskState.CLOSED","title":"CLOSED","text":"<pre><code>CLOSED = 'Closed'\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.InventoryInformation","title":"InventoryInformation","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>Represents the Inventory information needed for a task. For a Batch task, inventory_id and batch_size are required. For Property and general tasks, inventory_id and lot_id is recomended is required.</p> <p>Attributes:</p> Name Type Description <code>inventory_id</code> <code>str</code> <p>The inventory id of the item to be used in the task.</p> <code>lot_id</code> <code>(str, optional)</code> <p>The lot id of the item to be used in the task. Reccomended for Property and General tasks.</p> <code>batch_size</code> <code>float, Required for Batch tasks, otherwise optional.</code> <p>The batch size to make of the related InventoryItem. Required for Batch tasks.</p> <code>selected_lot</code> <code>bool, read only</code> <p>Whether the lot is selected for the task. Default is None.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents the Inventory information needed for a task. For a Batch task, inventory_id and batch_size are required.\\nFor Property and general tasks, inventory_id and lot_id is recomended is required.\\n\\nAttributes\\n----------\\ninventory_id : str\\n    The inventory id of the item to be used in the task.\\nlot_id : str, optional\\n    The lot id of the item to be used in the task. Reccomended for Property and General tasks.\\nbatch_size : float, Required for Batch tasks, otherwise optional.\\n    The batch size to make of the related InventoryItem. Required for Batch tasks.\\nselected_lot : bool, read only\\n    Whether the lot is selected for the task. Default is None.\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"lotId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lotid\"\n    },\n    \"invLotUniqueId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Invlotuniqueid\"\n    },\n    \"batchSize\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Batchsize\"\n    },\n    \"selectedLot\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Selectedlot\"\n    },\n    \"barcodeId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Barcodeid\"\n    },\n    \"quantityUsed\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Quantityused\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"InventoryInformation\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>inventory_id</code>                 (<code>InventoryId</code>)             </li> <li> <code>lot_id</code>                 (<code>LotId | None</code>)             </li> <li> <code>inv_lot_unique_id</code>                 (<code>str | None</code>)             </li> <li> <code>batch_size</code>                 (<code>float | None</code>)             </li> <li> <code>selected_lot</code>                 (<code>bool | None</code>)             </li> <li> <code>barcode_id</code>                 (<code>str | None</code>)             </li> <li> <code>quantity_used</code>                 (<code>float | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.InventoryInformation.inventory_id","title":"inventory_id","text":"<pre><code>inventory_id: InventoryId\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.InventoryInformation.lot_id","title":"lot_id","text":"<pre><code>lot_id: LotId | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.InventoryInformation.inv_lot_unique_id","title":"inv_lot_unique_id","text":"<pre><code>inv_lot_unique_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.InventoryInformation.batch_size","title":"batch_size","text":"<pre><code>batch_size: float | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.InventoryInformation.barcode_id","title":"barcode_id","text":"<pre><code>barcode_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.InventoryInformation.quantity_used","title":"quantity_used","text":"<pre><code>quantity_used: float | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.InventoryInformation.selected_lot","title":"selected_lot","text":"<pre><code>selected_lot: bool | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Block","title":"Block","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BlockDataTemplateInfo\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"fullName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Fullname\"\n        },\n        \"Standards\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Standard\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Targets\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Target\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Targets\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"title\": \"BlockDataTemplateInfo\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataColumn\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"defalt\": {\n          \"default\": false,\n          \"title\": \"Defalt\",\n          \"type\": \"boolean\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"albertId\": {\n          \"default\": null,\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataColumn\",\n      \"type\": \"object\"\n    },\n    \"DataColumnValue\": {\n      \"properties\": {\n        \"data_column\": {\n          \"$ref\": \"#/$defs/DataColumn\",\n          \"default\": null\n        },\n        \"id\": {\n          \"default\": null,\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"hidden\": {\n          \"default\": false,\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        }\n      },\n      \"title\": \"DataColumnValue\",\n      \"type\": \"object\"\n    },\n    \"DataTemplate\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"security_class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"DataColumns\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DataColumnValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumns\"\n        },\n        \"Parameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parameters\"\n        },\n        \"DeletedParameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Deletedparameters\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataTemplate\",\n      \"type\": \"object\"\n    },\n    \"DataTemplateAndTargets\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"targets\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Target\"\n          },\n          \"title\": \"Targets\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"targets\"\n      ],\n      \"title\": \"DataTemplateAndTargets\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"Interval\": {\n      \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"Interval\",\n      \"type\": \"object\"\n    },\n    \"IntervalCombination\": {\n      \"description\": \"A class representing the interval combinations of on a workflow.\\nThis is returned by the workflow endpoint when at least one parameter\\nin the workflow has been intervalized.\\n\\nInterval Combinations can be single intervalized parameters or cartesian prodcuts of\\ntwo intervalized parameters.\\n\\nAttributes\\n----------\\ninterval_id: IntervalId | None\\n    forign key reference to the interval id\\n    this combination is associated with\\n    It will have the form ROW# or ROW#XROW# depending on\\n    if it is a single interval or a product of two intervals\\ninterval_params: str | None\\n    The parameters participating in the interval.\\ninterval_string: str | None\\n    The string representation of the interval combination\\n    This will have the form \\\"[Parameter Name]: [Parameter Value] [Parameter Unit]\\\"\\n    for each parameter in the interval combination\",\n      \"properties\": {\n        \"interval\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Interval\"\n        },\n        \"intervalParams\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalparams\"\n        },\n        \"intervalString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalstring\"\n        }\n      },\n      \"title\": \"IntervalCombination\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"PGType\": {\n      \"description\": \"The type of a parameter group\",\n      \"enum\": [\n        \"general\",\n        \"batch\",\n        \"property\"\n      ],\n      \"title\": \"PGType\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterGroup\": {\n      \"description\": \"Use 'Standards' key in metadata to store standards\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PGType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"class\": {\n          \"$ref\": \"#/$defs/SecurityClass\",\n          \"default\": \"restricted\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"Metadata\": {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"title\": \"Metadata\",\n          \"type\": \"object\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"documents\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Documents\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"ParameterGroup\",\n      \"type\": \"object\"\n    },\n    \"ParameterGroupSetpoints\": {\n      \"description\": \"A class that represents the setpoints on a parameter group.\\n\\n\\nAttributes\\n----------\\nparameter_group : ParameterGroup\\n    The parameter group to set the setpoints on. Provide either a parameter_group or a paramerter_group_id\\nparameter_group_id : ParameterGroupId\\n    The id of the parameter group.  Provide either a parameter_group or a paramerter_group_id\\nparameter_group_name : str\\n    The name of the parameter group. This is a read-only field.\\nparameter_setpoints : list[ParameterSetpoint]\\n    The setpoints to apply to the parameter group.\",\n      \"properties\": {\n        \"parameter_group\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterGroup\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterSetpoint\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"ParameterGroupSetpoints\",\n      \"type\": \"object\"\n    },\n    \"ParameterSetpoint\": {\n      \"description\": \"A Pydantic class representing the setpoint or intervals of a parameter to use.\\nFor a single value, provide the value and unit. For multiple values, provide intervals.\\na parameter or parameter_id must be provided.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The parameter to set the setpoint on. Provide either a parameter or a parameter_id.\\nparameter_id : ParameterId\\n    The id of the parameter. Provide either a parameter or a parameter_id.\\nvalue : str | EntityLink\\n    The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.\\nunit : Unit\\n    The unit of the setpoint.\\nintervals : list[Interval]\\n    The intervals of the setpoint. Either ether intervals or value + unit\\ncategory : ParameterCategory\\n    The category of the parameter. Special for InventoryItem (then use name to specify \\\"Equipment\\\", \\\"Consumeable\\\", etc), normal for all others\\nshort_name : str\\n    The short / display name of the parameter. Required if value is a dictionary.\\nrow_id : RowId\\n    The id of the parameter with respect to the interval row id.\",\n      \"properties\": {\n        \"parameter\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Parameter\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Intervals\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Interval\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervals\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"ParameterSetpoint\",\n      \"type\": \"object\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Standard\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"standardId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Standardid\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"standardOrganization\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Standardorganization\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"Standard\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Target\": {\n      \"properties\": {\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"Target\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    },\n    \"Workflow\": {\n      \"description\": \"A Pydantic Class representing a workflow in Albert.\\n\\nWorkflows are combinations of Data Templates and Parameter groups and their associated setpoints.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the workflow.\\nparameter_group_setpoints : list[ParameterGroupSetpoints]\\n    The setpoints to apply to the parameter groups in the workflow.\\nid : str | None\\n    The AlbertID of the workflow. This is set when a workflow is retrived from the platform.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"ParameterGroups\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterGroupSetpoints\"\n          },\n          \"title\": \"Parametergroups\",\n          \"type\": \"array\"\n        },\n        \"IntervalCombinations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalCombination\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalcombinations\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"ParameterGroups\"\n      ],\n      \"title\": \"Workflow\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"Workflow\": {\n      \"items\": {\n        \"anyOf\": [\n          {\n            \"$ref\": \"#/$defs/Workflow\"\n          },\n          {\n            \"$ref\": \"#/$defs/EntityLink\"\n          }\n        ]\n      },\n      \"minItems\": 1,\n      \"title\": \"Workflow\",\n      \"type\": \"array\"\n    },\n    \"Datatemplate\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/BlockDataTemplateInfo\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"$ref\": \"#/$defs/DataTemplateAndTargets\"\n        },\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/DataTemplate\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        }\n      ],\n      \"maxLength\": 1,\n      \"minLength\": 1,\n      \"title\": \"Datatemplate\"\n    },\n    \"parameterQuantityUsed\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": true,\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parameterquantityused\"\n    }\n  },\n  \"required\": [\n    \"Workflow\",\n    \"Datatemplate\"\n  ],\n  \"title\": \"Block\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>workflow</code>                 (<code>list[SerializeAsEntityLink[Workflow]]</code>)             </li> <li> <code>data_template</code>                 (<code>list[BlockDataTemplateInfo] | DataTemplateAndTargets | list[SerializeAsEntityLink[DataTemplate]]</code>)             </li> <li> <code>parameter_quantity_used</code>                 (<code>dict | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.Block.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Block.workflow","title":"workflow","text":"<pre><code>workflow: list[SerializeAsEntityLink[Workflow]]\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Block.data_template","title":"data_template","text":"<pre><code>data_template: (\n    list[BlockDataTemplateInfo]\n    | DataTemplateAndTargets\n    | list[SerializeAsEntityLink[DataTemplate]]\n)\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Block.parameter_quantity_used","title":"parameter_quantity_used","text":"<pre><code>parameter_quantity_used: dict | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.Block.model_dump","title":"model_dump","text":"<pre><code>model_dump(*args, **kwargs)\n</code></pre> Source code in <code>src/albert/resources/tasks.py</code> <pre><code>def model_dump(self, *args, **kwargs):\n    # Use default serialization with customized field output.\n    # Workflow and DataTemplate are both lists of length one, which is annoying to\n    data = super().model_dump(*args, **kwargs)\n    data[\"Workflow\"] = [data[\"Workflow\"]] if \"Workflow\" in data else None\n    data[\"Datatemplate\"] = [data[\"Datatemplate\"]] if \"Datatemplate\" in data else None\n    return data\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.QCTarget","title":"QCTarget","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"formulaId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Formulaid\"\n    },\n    \"target\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Target\"\n    }\n  },\n  \"title\": \"QCTarget\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>formula_id</code>                 (<code>str | None</code>)             </li> <li> <code>target</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.QCTarget.formula_id","title":"formula_id","text":"<pre><code>formula_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.QCTarget.target","title":"target","text":"<pre><code>target: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.QCWorkflowTargets","title":"QCWorkflowTargets","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"QCTarget\": {\n      \"properties\": {\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        }\n      },\n      \"title\": \"QCTarget\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"taskName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Taskname\"\n    },\n    \"Targets\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/QCTarget\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Targets\"\n    }\n  },\n  \"title\": \"QCWorkflowTargets\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>workflow_id</code>                 (<code>str | None</code>)             </li> <li> <code>task_name</code>                 (<code>str | None</code>)             </li> <li> <code>targets</code>                 (<code>list[QCTarget] | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.QCWorkflowTargets.workflow_id","title":"workflow_id","text":"<pre><code>workflow_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.QCWorkflowTargets.task_name","title":"task_name","text":"<pre><code>task_name: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.QCWorkflowTargets.targets","title":"targets","text":"<pre><code>targets: list[QCTarget] | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.QCTaskData","title":"QCTaskData","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"QCTarget\": {\n      \"properties\": {\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        }\n      },\n      \"title\": \"QCTarget\",\n      \"type\": \"object\"\n    },\n    \"QCWorkflowTargets\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"taskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskname\"\n        },\n        \"Targets\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/QCTarget\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Targets\"\n        }\n      },\n      \"title\": \"QCWorkflowTargets\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"datatemplateId\": {\n      \"title\": \"Datatemplateid\",\n      \"type\": \"string\"\n    },\n    \"Workflows\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/QCWorkflowTargets\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Workflows\"\n    }\n  },\n  \"required\": [\n    \"datatemplateId\"\n  ],\n  \"title\": \"QCTaskData\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data_template_id</code>                 (<code>str</code>)             </li> <li> <code>workflows</code>                 (<code>list[QCWorkflowTargets] | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.QCTaskData.data_template_id","title":"data_template_id","text":"<pre><code>data_template_id: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.QCTaskData.workflows","title":"workflows","text":"<pre><code>workflows: list[QCWorkflowTargets] | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask","title":"BaseTask","text":"<p>               Bases: <code>BaseTaggedResource</code></p> <p>Base class for all task types. Use PropertyTask, BatchTask, or GeneralTask for specific task types.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BlockLevelInventoryInformation\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockLevelInventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"BlockState\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The ID of the block.\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"expand\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Expand\"\n        },\n        \"Interval\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalId\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The IDs of the interval (e.g., id: ROW2XROW4)\",\n          \"title\": \"Interval\"\n        },\n        \"Inventory\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockLevelInventoryInformation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventory\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockState\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"IntervalId\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"IntervalId\",\n      \"type\": \"object\"\n    },\n    \"InventoryInformation\": {\n      \"description\": \"Represents the Inventory information needed for a task. For a Batch task, inventory_id and batch_size are required.\\nFor Property and general tasks, inventory_id and lot_id is recomended is required.\\n\\nAttributes\\n----------\\ninventory_id : str\\n    The inventory id of the item to be used in the task.\\nlot_id : str, optional\\n    The lot id of the item to be used in the task. Reccomended for Property and General tasks.\\nbatch_size : float, Required for Batch tasks, otherwise optional.\\n    The batch size to make of the related InventoryItem. Required for Batch tasks.\\nselected_lot : bool, read only\\n    Whether the lot is selected for the task. Default is None.\",\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        },\n        \"batchSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchsize\"\n        },\n        \"selectedLot\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Selectedlot\"\n        },\n        \"barcodeId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Barcodeid\"\n        },\n        \"quantityUsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Quantityused\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"InventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"PageState\": {\n      \"properties\": {\n        \"leftPanelExpand\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Leftpanelexpand\"\n        },\n        \"Block\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockState\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Block\"\n        }\n      },\n      \"title\": \"PageState\",\n      \"type\": \"object\"\n    },\n    \"Project\": {\n      \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"description\": {\n          \"maxLength\": 2000,\n          \"minLength\": 1,\n          \"title\": \"Description\",\n          \"type\": \"string\"\n        },\n        \"Locations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Location\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"maxItems\": 20,\n              \"minItems\": 1,\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Locations\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"private\"\n        },\n        \"prefix\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prefix\"\n        },\n        \"appEngg\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Inventory Ids to be added as application engineering\",\n          \"title\": \"Appengg\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ACL\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Acl\"\n        },\n        \"old_api_params\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Old Api Params\"\n        },\n        \"task_config\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Task Config\"\n        },\n        \"grid\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/GridDefault\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/State\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"description\"\n      ],\n      \"title\": \"Project\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskCategory\": {\n      \"enum\": [\n        \"Property\",\n        \"Batch\",\n        \"General\",\n        \"BatchWithQC\"\n      ],\n      \"title\": \"TaskCategory\",\n      \"type\": \"string\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    },\n    \"TaskPriority\": {\n      \"enum\": [\n        \"High\",\n        \"Medium\",\n        \"Low\"\n      ],\n      \"title\": \"TaskPriority\",\n      \"type\": \"string\"\n    },\n    \"TaskSource\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"$ref\": \"#/$defs/TaskSourceType\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"type\"\n      ],\n      \"title\": \"TaskSource\",\n      \"type\": \"object\"\n    },\n    \"TaskSourceType\": {\n      \"enum\": [\n        \"task\",\n        \"template\"\n      ],\n      \"title\": \"TaskSourceType\",\n      \"type\": \"string\"\n    },\n    \"TaskState\": {\n      \"enum\": [\n        \"Unclaimed\",\n        \"Not Started\",\n        \"In Progress\",\n        \"Completed\",\n        \"Closed\"\n      ],\n      \"title\": \"TaskState\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Base class for all task types. Use PropertyTask, BatchTask, or GeneralTask for specific task types.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"$ref\": \"#/$defs/TaskCategory\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"Metadata\": {\n      \"additionalProperties\": {\n        \"anyOf\": [\n          {\n            \"type\": \"number\"\n          },\n          {\n            \"type\": \"integer\"\n          },\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          {\n            \"items\": {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            \"type\": \"array\"\n          },\n          {\n            \"type\": \"null\"\n          }\n        ]\n      },\n      \"title\": \"Metadata\",\n      \"type\": \"object\"\n    },\n    \"Sources\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/TaskSource\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Sources\"\n    },\n    \"Inventories\": {\n      \"default\": null,\n      \"items\": {\n        \"$ref\": \"#/$defs/InventoryInformation\"\n      },\n      \"title\": \"Inventories\",\n      \"type\": \"array\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"priority\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/TaskPriority\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/SecurityClass\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"passOrFail\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Passorfail\"\n    },\n    \"notes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Notes\"\n    },\n    \"startDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Startdate\"\n    },\n    \"dueDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Duedate\"\n    },\n    \"claimedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Claimeddate\"\n    },\n    \"completedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Completeddate\"\n    },\n    \"closedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Closeddate\"\n    },\n    \"result\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Result\"\n    },\n    \"state\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/TaskState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Project\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Project\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Project\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Project\"\n    },\n    \"AssignedTo\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/User\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignedto\"\n    },\n    \"PageState\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/PageState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"category\"\n  ],\n  \"title\": \"BaseTask\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>category</code>                 (<code>TaskCategory</code>)             </li> <li> <code>parent_id</code>                 (<code>str | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem]</code>)             </li> <li> <code>sources</code>                 (<code>list[TaskSource] | None</code>)             </li> <li> <code>inventory_information</code>                 (<code>list[InventoryInformation]</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>priority</code>                 (<code>TaskPriority | None</code>)             </li> <li> <code>security_class</code>                 (<code>SecurityClass | None</code>)             </li> <li> <code>pass_fail</code>                 (<code>bool | None</code>)             </li> <li> <code>notes</code>                 (<code>str | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>str | None</code>)             </li> <li> <code>claimed_date</code>                 (<code>str | None</code>)             </li> <li> <code>completed_date</code>                 (<code>str | None</code>)             </li> <li> <code>closed_date</code>                 (<code>str | None</code>)             </li> <li> <code>result</code>                 (<code>str | None</code>)             </li> <li> <code>state</code>                 (<code>TaskState | None</code>)             </li> <li> <code>project</code>                 (<code>SerializeAsEntityLink[Project] | list[SerializeAsEntityLink[Project]] | None</code>)             </li> <li> <code>assigned_to</code>                 (<code>SerializeAsEntityLink[User] | None</code>)             </li> <li> <code>page_state</code>                 (<code>PageState | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.category","title":"category","text":"<pre><code>category: TaskCategory\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.parent_id","title":"parent_id","text":"<pre><code>parent_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem]\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.sources","title":"sources","text":"<pre><code>sources: list[TaskSource] | None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.inventory_information","title":"inventory_information","text":"<pre><code>inventory_information: list[InventoryInformation] = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.location","title":"location","text":"<pre><code>location: SerializeAsEntityLink[Location] | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.priority","title":"priority","text":"<pre><code>priority: TaskPriority | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.security_class","title":"security_class","text":"<pre><code>security_class: SecurityClass | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.pass_fail","title":"pass_fail","text":"<pre><code>pass_fail: bool | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.notes","title":"notes","text":"<pre><code>notes: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.start_date","title":"start_date","text":"<pre><code>start_date: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.due_date","title":"due_date","text":"<pre><code>due_date: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.claimed_date","title":"claimed_date","text":"<pre><code>claimed_date: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.completed_date","title":"completed_date","text":"<pre><code>completed_date: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.closed_date","title":"closed_date","text":"<pre><code>closed_date: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.result","title":"result","text":"<pre><code>result: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.state","title":"state","text":"<pre><code>state: TaskState | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.project","title":"project","text":"<pre><code>project: (\n    SerializeAsEntityLink[Project]\n    | list[SerializeAsEntityLink[Project]]\n    | None\n) = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.assigned_to","title":"assigned_to","text":"<pre><code>assigned_to: SerializeAsEntityLink[User] | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BaseTask.page_state","title":"page_state","text":"<pre><code>page_state: PageState | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.PropertyTask","title":"PropertyTask","text":"<p>               Bases: <code>BaseTask</code></p> <p>Represents a batch task.</p> <p>This class is used to create and manage batch tasks. It includes the base task attributes and additional attributes specific to batch tasks.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the batch task.</p> <code>inventory_information</code> <code>list[InventoryInformation]</code> <p>Information about the inventory associated with the batch task.</p> <code>location</code> <code>SerializeAsEntityLink[Location]</code> <p>The location where the batch task is performed.</p> <code>parent_id</code> <code>str</code> <p>The ID of the parent project.</p> <code>blocks</code> <code>list[Block]</code> <p>A list of blocks associated with the batch task.</p> <code>id</code> <code>(str, optional)</code> <p>The ID of the batch task, by default None.</p> <code>metadata</code> <code>(dict[str, MetadataItem], optional)</code> <p>Metadata associated with the batch task, by default an empty dictionary.</p> <code>due_date</code> <code>(str, optional)</code> <p>The due date of the batch task. YYY-MM-DD format, by default None.</p> <code>notes</code> <code>(str, optional)</code> <p>Notes associated with the batch task, by default None.</p> <code>priority</code> <code>(TaskPriority, optional)</code> <p>The priority of the batch task, by default None.</p> <code>assigned_to</code> <code>(SerializeAsEntityLink[User], optional)</code> <p>The user assigned to the batch task, by default None.</p> <code>state</code> <code>(TaskState, optional)</code> <p>The state of the batch task, by default None.</p> <code>sources</code> <code>(list[TaskSource], optional)</code> <p>A list of sources associated with the batch task, by default an empty list.</p> <code>security_class</code> <code>(SecurityClass, optional)</code> <p>The security class of the batch task, by default None.</p> <code>start_date</code> <code>str, read only</code> <p>The start date of the batch task, by default None.</p> <code>claimed_date</code> <code>str, read only</code> <p>The claimed date of the batch task, by default None.</p> <code>completed_date</code> <code>str, read only</code> <p>The completed date of the batch task, by default None.</p> <code>closed_date</code> <code>str, read only</code> <p>The closed date of the batch task, by default None.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Block\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Workflow\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Workflow\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"minItems\": 1,\n          \"title\": \"Workflow\",\n          \"type\": \"array\"\n        },\n        \"Datatemplate\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockDataTemplateInfo\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"$ref\": \"#/$defs/DataTemplateAndTargets\"\n            },\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/DataTemplate\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            }\n          ],\n          \"maxLength\": 1,\n          \"minLength\": 1,\n          \"title\": \"Datatemplate\"\n        },\n        \"parameterQuantityUsed\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parameterquantityused\"\n        }\n      },\n      \"required\": [\n        \"Workflow\",\n        \"Datatemplate\"\n      ],\n      \"title\": \"Block\",\n      \"type\": \"object\"\n    },\n    \"BlockDataTemplateInfo\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"fullName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Fullname\"\n        },\n        \"Standards\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Standard\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Targets\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Target\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Targets\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"title\": \"BlockDataTemplateInfo\",\n      \"type\": \"object\"\n    },\n    \"BlockLevelInventoryInformation\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockLevelInventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"BlockState\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The ID of the block.\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"expand\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Expand\"\n        },\n        \"Interval\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalId\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The IDs of the interval (e.g., id: ROW2XROW4)\",\n          \"title\": \"Interval\"\n        },\n        \"Inventory\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockLevelInventoryInformation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventory\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockState\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataColumn\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"defalt\": {\n          \"default\": false,\n          \"title\": \"Defalt\",\n          \"type\": \"boolean\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"albertId\": {\n          \"default\": null,\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataColumn\",\n      \"type\": \"object\"\n    },\n    \"DataColumnValue\": {\n      \"properties\": {\n        \"data_column\": {\n          \"$ref\": \"#/$defs/DataColumn\",\n          \"default\": null\n        },\n        \"id\": {\n          \"default\": null,\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"hidden\": {\n          \"default\": false,\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"calculation\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Calculation\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        }\n      },\n      \"title\": \"DataColumnValue\",\n      \"type\": \"object\"\n    },\n    \"DataTemplate\": {\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"security_class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"DataColumns\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/DataColumnValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumns\"\n        },\n        \"Parameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parameters\"\n        },\n        \"DeletedParameters\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ParameterValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Deletedparameters\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"DataTemplate\",\n      \"type\": \"object\"\n    },\n    \"DataTemplateAndTargets\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"targets\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Target\"\n          },\n          \"title\": \"Targets\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"targets\"\n      ],\n      \"title\": \"DataTemplateAndTargets\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"Interval\": {\n      \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"Interval\",\n      \"type\": \"object\"\n    },\n    \"IntervalCombination\": {\n      \"description\": \"A class representing the interval combinations of on a workflow.\\nThis is returned by the workflow endpoint when at least one parameter\\nin the workflow has been intervalized.\\n\\nInterval Combinations can be single intervalized parameters or cartesian prodcuts of\\ntwo intervalized parameters.\\n\\nAttributes\\n----------\\ninterval_id: IntervalId | None\\n    forign key reference to the interval id\\n    this combination is associated with\\n    It will have the form ROW# or ROW#XROW# depending on\\n    if it is a single interval or a product of two intervals\\ninterval_params: str | None\\n    The parameters participating in the interval.\\ninterval_string: str | None\\n    The string representation of the interval combination\\n    This will have the form \\\"[Parameter Name]: [Parameter Value] [Parameter Unit]\\\"\\n    for each parameter in the interval combination\",\n      \"properties\": {\n        \"interval\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Interval\"\n        },\n        \"intervalParams\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalparams\"\n        },\n        \"intervalString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalstring\"\n        }\n      },\n      \"title\": \"IntervalCombination\",\n      \"type\": \"object\"\n    },\n    \"IntervalId\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"IntervalId\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryInformation\": {\n      \"description\": \"Represents the Inventory information needed for a task. For a Batch task, inventory_id and batch_size are required.\\nFor Property and general tasks, inventory_id and lot_id is recomended is required.\\n\\nAttributes\\n----------\\ninventory_id : str\\n    The inventory id of the item to be used in the task.\\nlot_id : str, optional\\n    The lot id of the item to be used in the task. Reccomended for Property and General tasks.\\nbatch_size : float, Required for Batch tasks, otherwise optional.\\n    The batch size to make of the related InventoryItem. Required for Batch tasks.\\nselected_lot : bool, read only\\n    Whether the lot is selected for the task. Default is None.\",\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        },\n        \"batchSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchsize\"\n        },\n        \"selectedLot\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Selectedlot\"\n        },\n        \"barcodeId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Barcodeid\"\n        },\n        \"quantityUsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Quantityused\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"InventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"PGType\": {\n      \"description\": \"The type of a parameter group\",\n      \"enum\": [\n        \"general\",\n        \"batch\",\n        \"property\"\n      ],\n      \"title\": \"PGType\",\n      \"type\": \"string\"\n    },\n    \"PageState\": {\n      \"properties\": {\n        \"leftPanelExpand\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Leftpanelexpand\"\n        },\n        \"Block\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockState\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Block\"\n        }\n      },\n      \"title\": \"PageState\",\n      \"type\": \"object\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterGroup\": {\n      \"description\": \"Use 'Standards' key in metadata to store standards\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PGType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"class\": {\n          \"$ref\": \"#/$defs/SecurityClass\",\n          \"default\": \"restricted\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"Metadata\": {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"title\": \"Metadata\",\n          \"type\": \"object\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"documents\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Documents\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"ParameterGroup\",\n      \"type\": \"object\"\n    },\n    \"ParameterGroupSetpoints\": {\n      \"description\": \"A class that represents the setpoints on a parameter group.\\n\\n\\nAttributes\\n----------\\nparameter_group : ParameterGroup\\n    The parameter group to set the setpoints on. Provide either a parameter_group or a paramerter_group_id\\nparameter_group_id : ParameterGroupId\\n    The id of the parameter group.  Provide either a parameter_group or a paramerter_group_id\\nparameter_group_name : str\\n    The name of the parameter group. This is a read-only field.\\nparameter_setpoints : list[ParameterSetpoint]\\n    The setpoints to apply to the parameter group.\",\n      \"properties\": {\n        \"parameter_group\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterGroup\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterSetpoint\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"ParameterGroupSetpoints\",\n      \"type\": \"object\"\n    },\n    \"ParameterSetpoint\": {\n      \"description\": \"A Pydantic class representing the setpoint or intervals of a parameter to use.\\nFor a single value, provide the value and unit. For multiple values, provide intervals.\\na parameter or parameter_id must be provided.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The parameter to set the setpoint on. Provide either a parameter or a parameter_id.\\nparameter_id : ParameterId\\n    The id of the parameter. Provide either a parameter or a parameter_id.\\nvalue : str | EntityLink\\n    The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.\\nunit : Unit\\n    The unit of the setpoint.\\nintervals : list[Interval]\\n    The intervals of the setpoint. Either ether intervals or value + unit\\ncategory : ParameterCategory\\n    The category of the parameter. Special for InventoryItem (then use name to specify \\\"Equipment\\\", \\\"Consumeable\\\", etc), normal for all others\\nshort_name : str\\n    The short / display name of the parameter. Required if value is a dictionary.\\nrow_id : RowId\\n    The id of the parameter with respect to the interval row id.\",\n      \"properties\": {\n        \"parameter\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Parameter\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Intervals\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Interval\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervals\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"ParameterSetpoint\",\n      \"type\": \"object\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"Project\": {\n      \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"description\": {\n          \"maxLength\": 2000,\n          \"minLength\": 1,\n          \"title\": \"Description\",\n          \"type\": \"string\"\n        },\n        \"Locations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Location\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"maxItems\": 20,\n              \"minItems\": 1,\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Locations\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"private\"\n        },\n        \"prefix\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prefix\"\n        },\n        \"appEngg\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Inventory Ids to be added as application engineering\",\n          \"title\": \"Appengg\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ACL\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Acl\"\n        },\n        \"old_api_params\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Old Api Params\"\n        },\n        \"task_config\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Task Config\"\n        },\n        \"grid\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/GridDefault\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/State\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"description\"\n      ],\n      \"title\": \"Project\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Standard\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"standardId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Standardid\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"standardOrganization\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Standardorganization\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"Standard\",\n      \"type\": \"object\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Target\": {\n      \"properties\": {\n        \"dataColumnUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datacolumnuniqueid\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        }\n      },\n      \"title\": \"Target\",\n      \"type\": \"object\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    },\n    \"TaskPriority\": {\n      \"enum\": [\n        \"High\",\n        \"Medium\",\n        \"Low\"\n      ],\n      \"title\": \"TaskPriority\",\n      \"type\": \"string\"\n    },\n    \"TaskSource\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"$ref\": \"#/$defs/TaskSourceType\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"type\"\n      ],\n      \"title\": \"TaskSource\",\n      \"type\": \"object\"\n    },\n    \"TaskSourceType\": {\n      \"enum\": [\n        \"task\",\n        \"template\"\n      ],\n      \"title\": \"TaskSourceType\",\n      \"type\": \"string\"\n    },\n    \"TaskState\": {\n      \"enum\": [\n        \"Unclaimed\",\n        \"Not Started\",\n        \"In Progress\",\n        \"Completed\",\n        \"Closed\"\n      ],\n      \"title\": \"TaskState\",\n      \"type\": \"string\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    },\n    \"Workflow\": {\n      \"description\": \"A Pydantic Class representing a workflow in Albert.\\n\\nWorkflows are combinations of Data Templates and Parameter groups and their associated setpoints.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the workflow.\\nparameter_group_setpoints : list[ParameterGroupSetpoints]\\n    The setpoints to apply to the parameter groups in the workflow.\\nid : str | None\\n    The AlbertID of the workflow. This is set when a workflow is retrived from the platform.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"ParameterGroups\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterGroupSetpoints\"\n          },\n          \"title\": \"Parametergroups\",\n          \"type\": \"array\"\n        },\n        \"IntervalCombinations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalCombination\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalcombinations\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"ParameterGroups\"\n      ],\n      \"title\": \"Workflow\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents a batch task.\\n\\nThis class is used to create and manage batch tasks. It includes the base task attributes\\nand additional attributes specific to batch tasks.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the batch task.\\ninventory_information : list[InventoryInformation]\\n    Information about the inventory associated with the batch task.\\nlocation : SerializeAsEntityLink[Location]\\n    The location where the batch task is performed.\\nparent_id : str\\n    The ID of the parent project.\\nblocks : list[Block]\\n    A list of blocks associated with the batch task.\\nid : str, optional\\n    The ID of the batch task, by default None.\\n\\nmetadata : dict[str, MetadataItem], optional\\n    Metadata associated with the batch task, by default an empty dictionary.\\ndue_date : str, optional\\n    The due date of the batch task. YYY-MM-DD format, by default None.\\nnotes : str, optional\\n    Notes associated with the batch task, by default None.\\npriority : TaskPriority, optional\\n    The priority of the batch task, by default None.\\nassigned_to : SerializeAsEntityLink[User], optional\\n    The user assigned to the batch task, by default None.\\n\\nstate : TaskState, optional\\n    The state of the batch task, by default None.\\nsources : list[TaskSource], optional\\n    A list of sources associated with the batch task, by default an empty list.\\nsecurity_class : SecurityClass, optional\\n    The security class of the batch task, by default None.\\nstart_date : str, read only\\n    The start date of the batch task, by default None.\\nclaimed_date : str, read only\\n    The claimed date of the batch task, by default None.\\ncompleted_date : str, read only\\n    The completed date of the batch task, by default None.\\nclosed_date : str, read only\\n    The closed date of the batch task, by default None.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"const\": \"Property\",\n      \"default\": \"Property\",\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"Metadata\": {\n      \"additionalProperties\": {\n        \"anyOf\": [\n          {\n            \"type\": \"number\"\n          },\n          {\n            \"type\": \"integer\"\n          },\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          {\n            \"items\": {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            \"type\": \"array\"\n          },\n          {\n            \"type\": \"null\"\n          }\n        ]\n      },\n      \"title\": \"Metadata\",\n      \"type\": \"object\"\n    },\n    \"Sources\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/TaskSource\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Sources\"\n    },\n    \"Inventories\": {\n      \"default\": null,\n      \"items\": {\n        \"$ref\": \"#/$defs/InventoryInformation\"\n      },\n      \"title\": \"Inventories\",\n      \"type\": \"array\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"priority\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/TaskPriority\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/SecurityClass\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"passOrFail\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Passorfail\"\n    },\n    \"notes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Notes\"\n    },\n    \"startDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Startdate\"\n    },\n    \"dueDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Duedate\"\n    },\n    \"claimedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Claimeddate\"\n    },\n    \"completedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Completeddate\"\n    },\n    \"closedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Closeddate\"\n    },\n    \"result\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Result\"\n    },\n    \"state\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/TaskState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Project\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Project\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Project\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Project\"\n    },\n    \"AssignedTo\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/User\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignedto\"\n    },\n    \"PageState\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/PageState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Blocks\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/Block\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Blocks\"\n    },\n    \"qcTask\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Qctask\"\n    },\n    \"batchTaskId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Batchtaskid\"\n    },\n    \"target\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Target\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"PropertyTask\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>parent_id</code>                 (<code>str | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem]</code>)             </li> <li> <code>sources</code>                 (<code>list[TaskSource] | None</code>)             </li> <li> <code>inventory_information</code>                 (<code>list[InventoryInformation]</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>priority</code>                 (<code>TaskPriority | None</code>)             </li> <li> <code>security_class</code>                 (<code>SecurityClass | None</code>)             </li> <li> <code>pass_fail</code>                 (<code>bool | None</code>)             </li> <li> <code>notes</code>                 (<code>str | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>str | None</code>)             </li> <li> <code>claimed_date</code>                 (<code>str | None</code>)             </li> <li> <code>completed_date</code>                 (<code>str | None</code>)             </li> <li> <code>closed_date</code>                 (<code>str | None</code>)             </li> <li> <code>result</code>                 (<code>str | None</code>)             </li> <li> <code>state</code>                 (<code>TaskState | None</code>)             </li> <li> <code>project</code>                 (<code>SerializeAsEntityLink[Project] | list[SerializeAsEntityLink[Project]] | None</code>)             </li> <li> <code>assigned_to</code>                 (<code>SerializeAsEntityLink[User] | None</code>)             </li> <li> <code>page_state</code>                 (<code>PageState | None</code>)             </li> <li> <code>category</code>                 (<code>Literal[PROPERTY]</code>)             </li> <li> <code>blocks</code>                 (<code>list[Block] | None</code>)             </li> <li> <code>qc_task</code>                 (<code>bool | None</code>)             </li> <li> <code>batch_task_id</code>                 (<code>str | None</code>)             </li> <li> <code>target</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.PropertyTask.category","title":"category","text":"<pre><code>category: Literal[PROPERTY] = PROPERTY\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.PropertyTask.blocks","title":"blocks","text":"<pre><code>blocks: list[Block] | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.PropertyTask.qc_task","title":"qc_task","text":"<pre><code>qc_task: bool | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.PropertyTask.batch_task_id","title":"batch_task_id","text":"<pre><code>batch_task_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.PropertyTask.target","title":"target","text":"<pre><code>target: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchTask","title":"BatchTask","text":"<p>               Bases: <code>BaseTask</code></p> <p>Represents a batch task.</p> <p>This class is used to create and manage batch tasks. It includes the base task attributes and additional attributes specific to batch tasks.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the batch task.</p> <code>inventory_information</code> <code>list[InventoryInformation]</code> <p>Information about the inventory associated with the batch task.</p> <code>location</code> <code>SerializeAsEntityLink[Location]</code> <p>The location where the batch task is performed.</p> <code>parent_id</code> <code>str</code> <p>The ID of the parent project.</p> <code>id</code> <code>(str, optional)</code> <p>The ID of the batch task, by default None.</p> <code>batch_size_unit</code> <code>(str, optional)</code> <p>The unit of measurement for the batch size, by default None.</p> <code>metadata</code> <code>(dict[str, MetadataItem], optional)</code> <p>Metadata associated with the batch task, by default an empty dictionary.</p> <code>workflows</code> <code>(list[SerializeAsEntityLink[Workflow]], optional)</code> <p>A list of workflows associated with the batch task, by default None.</p> <code>due_date</code> <code>(str, optional)</code> <p>The due date of the batch task. YYY-MM-DD format, by default None.</p> <code>notes</code> <code>(str, optional)</code> <p>Notes associated with the batch task, by default None.</p> <code>priority</code> <code>(TaskPriority, optional)</code> <p>The priority of the batch task, by default None.</p> <code>project</code> <code>(SerializeAsEntityLink[Project] | list[SerializeAsEntityLink[Project]], optional)</code> <p>The project(s) associated with the batch task, by default None.</p> <code>assigned_to</code> <code>(SerializeAsEntityLink[User], optional)</code> <p>The user assigned to the batch task, by default None.</p> <code>state</code> <code>(TaskState, optional)</code> <p>The state of the batch task, by default None.</p> <code>sources</code> <code>(list[TaskSource], optional)</code> <p>A list of sources associated with the batch task, by default an empty list.</p> <code>security_class</code> <code>(SecurityClass, optional)</code> <p>The security class of the batch task, by default None.</p> <code>pass_fail</code> <code>(bool, optional)</code> <p>Whether the batch task is pass/fail, by default None.</p> <code>start_date</code> <code>str, read only</code> <p>The start date of the batch task, by default None.</p> <code>claimed_date</code> <code>str, read only</code> <p>The claimed date of the batch task, by default None.</p> <code>completed_date</code> <code>str, read only</code> <p>The completed date of the batch task, by default None.</p> <code>closed_date</code> <code>str, read only</code> <p>The closed date of the batch task, by default None.</p> <code>qc_task</code> <code>(bool, optional)</code> <p>Whether the batch task is a QC task, by default None.</p> <code>batch_task_id</code> <code>(str, optional)</code> <p>The ID of the batch task, by default None.</p> <code>target</code> <code>(str, optional)</code> <p>The target of the batch task, by default None.</p> <code>qc_task_data</code> <code>(list[QCTaskData], optional)</code> <p>A list of QC task data associated with the batch task, by default None.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BatchSizeUnit\": {\n      \"enum\": [\n        \"g\",\n        \"Kg\",\n        \"lbs\"\n      ],\n      \"title\": \"BatchSizeUnit\",\n      \"type\": \"string\"\n    },\n    \"BlockLevelInventoryInformation\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockLevelInventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"BlockState\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The ID of the block.\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"expand\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Expand\"\n        },\n        \"Interval\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalId\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The IDs of the interval (e.g., id: ROW2XROW4)\",\n          \"title\": \"Interval\"\n        },\n        \"Inventory\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockLevelInventoryInformation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventory\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockState\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"Interval\": {\n      \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"Interval\",\n      \"type\": \"object\"\n    },\n    \"IntervalCombination\": {\n      \"description\": \"A class representing the interval combinations of on a workflow.\\nThis is returned by the workflow endpoint when at least one parameter\\nin the workflow has been intervalized.\\n\\nInterval Combinations can be single intervalized parameters or cartesian prodcuts of\\ntwo intervalized parameters.\\n\\nAttributes\\n----------\\ninterval_id: IntervalId | None\\n    forign key reference to the interval id\\n    this combination is associated with\\n    It will have the form ROW# or ROW#XROW# depending on\\n    if it is a single interval or a product of two intervals\\ninterval_params: str | None\\n    The parameters participating in the interval.\\ninterval_string: str | None\\n    The string representation of the interval combination\\n    This will have the form \\\"[Parameter Name]: [Parameter Value] [Parameter Unit]\\\"\\n    for each parameter in the interval combination\",\n      \"properties\": {\n        \"interval\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Interval\"\n        },\n        \"intervalParams\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalparams\"\n        },\n        \"intervalString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalstring\"\n        }\n      },\n      \"title\": \"IntervalCombination\",\n      \"type\": \"object\"\n    },\n    \"IntervalId\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"IntervalId\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryInformation\": {\n      \"description\": \"Represents the Inventory information needed for a task. For a Batch task, inventory_id and batch_size are required.\\nFor Property and general tasks, inventory_id and lot_id is recomended is required.\\n\\nAttributes\\n----------\\ninventory_id : str\\n    The inventory id of the item to be used in the task.\\nlot_id : str, optional\\n    The lot id of the item to be used in the task. Reccomended for Property and General tasks.\\nbatch_size : float, Required for Batch tasks, otherwise optional.\\n    The batch size to make of the related InventoryItem. Required for Batch tasks.\\nselected_lot : bool, read only\\n    Whether the lot is selected for the task. Default is None.\",\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        },\n        \"batchSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchsize\"\n        },\n        \"selectedLot\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Selectedlot\"\n        },\n        \"barcodeId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Barcodeid\"\n        },\n        \"quantityUsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Quantityused\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"InventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"PGType\": {\n      \"description\": \"The type of a parameter group\",\n      \"enum\": [\n        \"general\",\n        \"batch\",\n        \"property\"\n      ],\n      \"title\": \"PGType\",\n      \"type\": \"string\"\n    },\n    \"PageState\": {\n      \"properties\": {\n        \"leftPanelExpand\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Leftpanelexpand\"\n        },\n        \"Block\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockState\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Block\"\n        }\n      },\n      \"title\": \"PageState\",\n      \"type\": \"object\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterGroup\": {\n      \"description\": \"Use 'Standards' key in metadata to store standards\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PGType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"class\": {\n          \"$ref\": \"#/$defs/SecurityClass\",\n          \"default\": \"restricted\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"Metadata\": {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"title\": \"Metadata\",\n          \"type\": \"object\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"documents\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Documents\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"ParameterGroup\",\n      \"type\": \"object\"\n    },\n    \"ParameterGroupSetpoints\": {\n      \"description\": \"A class that represents the setpoints on a parameter group.\\n\\n\\nAttributes\\n----------\\nparameter_group : ParameterGroup\\n    The parameter group to set the setpoints on. Provide either a parameter_group or a paramerter_group_id\\nparameter_group_id : ParameterGroupId\\n    The id of the parameter group.  Provide either a parameter_group or a paramerter_group_id\\nparameter_group_name : str\\n    The name of the parameter group. This is a read-only field.\\nparameter_setpoints : list[ParameterSetpoint]\\n    The setpoints to apply to the parameter group.\",\n      \"properties\": {\n        \"parameter_group\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterGroup\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterSetpoint\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"ParameterGroupSetpoints\",\n      \"type\": \"object\"\n    },\n    \"ParameterSetpoint\": {\n      \"description\": \"A Pydantic class representing the setpoint or intervals of a parameter to use.\\nFor a single value, provide the value and unit. For multiple values, provide intervals.\\na parameter or parameter_id must be provided.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The parameter to set the setpoint on. Provide either a parameter or a parameter_id.\\nparameter_id : ParameterId\\n    The id of the parameter. Provide either a parameter or a parameter_id.\\nvalue : str | EntityLink\\n    The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.\\nunit : Unit\\n    The unit of the setpoint.\\nintervals : list[Interval]\\n    The intervals of the setpoint. Either ether intervals or value + unit\\ncategory : ParameterCategory\\n    The category of the parameter. Special for InventoryItem (then use name to specify \\\"Equipment\\\", \\\"Consumeable\\\", etc), normal for all others\\nshort_name : str\\n    The short / display name of the parameter. Required if value is a dictionary.\\nrow_id : RowId\\n    The id of the parameter with respect to the interval row id.\",\n      \"properties\": {\n        \"parameter\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Parameter\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Intervals\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Interval\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervals\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"ParameterSetpoint\",\n      \"type\": \"object\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"Project\": {\n      \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"description\": {\n          \"maxLength\": 2000,\n          \"minLength\": 1,\n          \"title\": \"Description\",\n          \"type\": \"string\"\n        },\n        \"Locations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Location\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"maxItems\": 20,\n              \"minItems\": 1,\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Locations\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"private\"\n        },\n        \"prefix\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prefix\"\n        },\n        \"appEngg\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Inventory Ids to be added as application engineering\",\n          \"title\": \"Appengg\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ACL\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Acl\"\n        },\n        \"old_api_params\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Old Api Params\"\n        },\n        \"task_config\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Task Config\"\n        },\n        \"grid\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/GridDefault\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/State\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"description\"\n      ],\n      \"title\": \"Project\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"QCTarget\": {\n      \"properties\": {\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        }\n      },\n      \"title\": \"QCTarget\",\n      \"type\": \"object\"\n    },\n    \"QCTaskData\": {\n      \"properties\": {\n        \"datatemplateId\": {\n          \"title\": \"Datatemplateid\",\n          \"type\": \"string\"\n        },\n        \"Workflows\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/QCWorkflowTargets\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflows\"\n        }\n      },\n      \"required\": [\n        \"datatemplateId\"\n      ],\n      \"title\": \"QCTaskData\",\n      \"type\": \"object\"\n    },\n    \"QCWorkflowTargets\": {\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"taskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskname\"\n        },\n        \"Targets\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/QCTarget\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Targets\"\n        }\n      },\n      \"title\": \"QCWorkflowTargets\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    },\n    \"TaskPriority\": {\n      \"enum\": [\n        \"High\",\n        \"Medium\",\n        \"Low\"\n      ],\n      \"title\": \"TaskPriority\",\n      \"type\": \"string\"\n    },\n    \"TaskSource\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"$ref\": \"#/$defs/TaskSourceType\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"type\"\n      ],\n      \"title\": \"TaskSource\",\n      \"type\": \"object\"\n    },\n    \"TaskSourceType\": {\n      \"enum\": [\n        \"task\",\n        \"template\"\n      ],\n      \"title\": \"TaskSourceType\",\n      \"type\": \"string\"\n    },\n    \"TaskState\": {\n      \"enum\": [\n        \"Unclaimed\",\n        \"Not Started\",\n        \"In Progress\",\n        \"Completed\",\n        \"Closed\"\n      ],\n      \"title\": \"TaskState\",\n      \"type\": \"string\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    },\n    \"Workflow\": {\n      \"description\": \"A Pydantic Class representing a workflow in Albert.\\n\\nWorkflows are combinations of Data Templates and Parameter groups and their associated setpoints.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the workflow.\\nparameter_group_setpoints : list[ParameterGroupSetpoints]\\n    The setpoints to apply to the parameter groups in the workflow.\\nid : str | None\\n    The AlbertID of the workflow. This is set when a workflow is retrived from the platform.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"ParameterGroups\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterGroupSetpoints\"\n          },\n          \"title\": \"Parametergroups\",\n          \"type\": \"array\"\n        },\n        \"IntervalCombinations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalCombination\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalcombinations\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"ParameterGroups\"\n      ],\n      \"title\": \"Workflow\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents a batch task.\\n\\nThis class is used to create and manage batch tasks. It includes the base task attributes\\nand additional attributes specific to batch tasks.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the batch task.\\ninventory_information : list[InventoryInformation]\\n    Information about the inventory associated with the batch task.\\nlocation : SerializeAsEntityLink[Location]\\n    The location where the batch task is performed.\\nparent_id : str\\n    The ID of the parent project.\\nid : str, optional\\n    The ID of the batch task, by default None.\\n\\nbatch_size_unit : str, optional\\n    The unit of measurement for the batch size, by default None.\\nmetadata : dict[str, MetadataItem], optional\\n    Metadata associated with the batch task, by default an empty dictionary.\\nworkflows : list[SerializeAsEntityLink[Workflow]], optional\\n    A list of workflows associated with the batch task, by default None.\\ndue_date : str, optional\\n    The due date of the batch task. YYY-MM-DD format, by default None.\\nnotes : str, optional\\n    Notes associated with the batch task, by default None.\\npriority : TaskPriority, optional\\n    The priority of the batch task, by default None.\\nproject : SerializeAsEntityLink[Project] | list[SerializeAsEntityLink[Project]], optional\\n    The project(s) associated with the batch task, by default None.\\nassigned_to : SerializeAsEntityLink[User], optional\\n    The user assigned to the batch task, by default None.\\n\\nstate : TaskState, optional\\n    The state of the batch task, by default None.\\nsources : list[TaskSource], optional\\n    A list of sources associated with the batch task, by default an empty list.\\nsecurity_class : SecurityClass, optional\\n    The security class of the batch task, by default None.\\npass_fail : bool, optional\\n    Whether the batch task is pass/fail, by default None.\\nstart_date : str, read only\\n    The start date of the batch task, by default None.\\nclaimed_date : str, read only\\n    The claimed date of the batch task, by default None.\\ncompleted_date : str, read only\\n    The completed date of the batch task, by default None.\\nclosed_date : str, read only\\n    The closed date of the batch task, by default None.\\nqc_task : bool, optional\\n    Whether the batch task is a QC task, by default None.\\nbatch_task_id : str, optional\\n    The ID of the batch task, by default None.\\ntarget : str, optional\\n    The target of the batch task, by default None.\\nqc_task_data : list[QCTaskData], optional\\n    A list of QC task data associated with the batch task, by default None.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"default\": \"Batch\",\n      \"enum\": [\n        \"Batch\",\n        \"BatchWithQC\"\n      ],\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"Metadata\": {\n      \"additionalProperties\": {\n        \"anyOf\": [\n          {\n            \"type\": \"number\"\n          },\n          {\n            \"type\": \"integer\"\n          },\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          {\n            \"items\": {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            \"type\": \"array\"\n          },\n          {\n            \"type\": \"null\"\n          }\n        ]\n      },\n      \"title\": \"Metadata\",\n      \"type\": \"object\"\n    },\n    \"Sources\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/TaskSource\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Sources\"\n    },\n    \"Inventories\": {\n      \"default\": null,\n      \"items\": {\n        \"$ref\": \"#/$defs/InventoryInformation\"\n      },\n      \"title\": \"Inventories\",\n      \"type\": \"array\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"priority\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/TaskPriority\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/SecurityClass\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"passOrFail\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Passorfail\"\n    },\n    \"notes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Notes\"\n    },\n    \"startDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Startdate\"\n    },\n    \"dueDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Duedate\"\n    },\n    \"claimedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Claimeddate\"\n    },\n    \"completedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Completeddate\"\n    },\n    \"closedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Closeddate\"\n    },\n    \"result\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Result\"\n    },\n    \"state\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/TaskState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Project\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Project\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Project\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Project\"\n    },\n    \"AssignedTo\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/User\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignedto\"\n    },\n    \"PageState\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/PageState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"batchSizeUnit\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/BatchSizeUnit\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"qcTask\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Qctask\"\n    },\n    \"batchTaskId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Batchtaskid\"\n    },\n    \"target\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Target\"\n    },\n    \"QCTaskData\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/QCTaskData\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Qctaskdata\"\n    },\n    \"Workflow\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Workflow\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Workflow\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"BatchTask\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>parent_id</code>                 (<code>str | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem]</code>)             </li> <li> <code>sources</code>                 (<code>list[TaskSource] | None</code>)             </li> <li> <code>inventory_information</code>                 (<code>list[InventoryInformation]</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>priority</code>                 (<code>TaskPriority | None</code>)             </li> <li> <code>security_class</code>                 (<code>SecurityClass | None</code>)             </li> <li> <code>pass_fail</code>                 (<code>bool | None</code>)             </li> <li> <code>notes</code>                 (<code>str | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>str | None</code>)             </li> <li> <code>claimed_date</code>                 (<code>str | None</code>)             </li> <li> <code>completed_date</code>                 (<code>str | None</code>)             </li> <li> <code>closed_date</code>                 (<code>str | None</code>)             </li> <li> <code>result</code>                 (<code>str | None</code>)             </li> <li> <code>state</code>                 (<code>TaskState | None</code>)             </li> <li> <code>project</code>                 (<code>SerializeAsEntityLink[Project] | list[SerializeAsEntityLink[Project]] | None</code>)             </li> <li> <code>assigned_to</code>                 (<code>SerializeAsEntityLink[User] | None</code>)             </li> <li> <code>page_state</code>                 (<code>PageState | None</code>)             </li> <li> <code>category</code>                 (<code>Literal[BATCH, BATCH_WITH_QC]</code>)             </li> <li> <code>batch_size_unit</code>                 (<code>BatchSizeUnit | None</code>)             </li> <li> <code>qc_task</code>                 (<code>bool | None</code>)             </li> <li> <code>batch_task_id</code>                 (<code>str | None</code>)             </li> <li> <code>target</code>                 (<code>str | None</code>)             </li> <li> <code>qc_task_data</code>                 (<code>list[QCTaskData] | None</code>)             </li> <li> <code>workflows</code>                 (<code>list[SerializeAsEntityLink[Workflow]] | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.BatchTask.category","title":"category","text":"<pre><code>category: Literal[BATCH, BATCH_WITH_QC] = BATCH\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchTask.batch_size_unit","title":"batch_size_unit","text":"<pre><code>batch_size_unit: BatchSizeUnit | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchTask.qc_task","title":"qc_task","text":"<pre><code>qc_task: bool | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchTask.batch_task_id","title":"batch_task_id","text":"<pre><code>batch_task_id: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchTask.target","title":"target","text":"<pre><code>target: str | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchTask.qc_task_data","title":"qc_task_data","text":"<pre><code>qc_task_data: list[QCTaskData] | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.BatchTask.workflows","title":"workflows","text":"<pre><code>workflows: list[SerializeAsEntityLink[Workflow]] | None = (\n    None\n)\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.GeneralTask","title":"GeneralTask","text":"<p>               Bases: <code>BaseTask</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"BlockLevelInventoryInformation\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockLevelInventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"BlockState\": {\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The ID of the block.\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"expand\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Expand\"\n        },\n        \"Interval\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/IntervalId\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The IDs of the interval (e.g., id: ROW2XROW4)\",\n          \"title\": \"Interval\"\n        },\n        \"Inventory\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockLevelInventoryInformation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventory\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"BlockState\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"GridDefault\": {\n      \"description\": \"The default grid for a project\",\n      \"enum\": [\n        \"PD\",\n        \"WKS\"\n      ],\n      \"title\": \"GridDefault\",\n      \"type\": \"string\"\n    },\n    \"IntervalId\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"IntervalId\",\n      \"type\": \"object\"\n    },\n    \"InventoryInformation\": {\n      \"description\": \"Represents the Inventory information needed for a task. For a Batch task, inventory_id and batch_size are required.\\nFor Property and general tasks, inventory_id and lot_id is recomended is required.\\n\\nAttributes\\n----------\\ninventory_id : str\\n    The inventory id of the item to be used in the task.\\nlot_id : str, optional\\n    The lot id of the item to be used in the task. Reccomended for Property and General tasks.\\nbatch_size : float, Required for Batch tasks, otherwise optional.\\n    The batch size to make of the related InventoryItem. Required for Batch tasks.\\nselected_lot : bool, read only\\n    Whether the lot is selected for the task. Default is None.\",\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"lotId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lotid\"\n        },\n        \"invLotUniqueId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Invlotuniqueid\"\n        },\n        \"batchSize\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Batchsize\"\n        },\n        \"selectedLot\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Selectedlot\"\n        },\n        \"barcodeId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Barcodeid\"\n        },\n        \"quantityUsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Quantityused\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"InventoryInformation\",\n      \"type\": \"object\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"PageState\": {\n      \"properties\": {\n        \"leftPanelExpand\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Leftpanelexpand\"\n        },\n        \"Block\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/BlockState\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Block\"\n        }\n      },\n      \"title\": \"PageState\",\n      \"type\": \"object\"\n    },\n    \"Project\": {\n      \"description\": \"A project in Albert.\\n\\nAttributes\\n----------\\ndescription : str\\n    The description of the project. Used as the name of the project as well.\\nid : str | None\\n    The Albert ID of the project. Set when the project is retrieved from Albert.\\nlocations : list[Location] | None\\n    The locations associated with the project. Optional.\\nproject_class : ProjectClass\\n    The class of the project. Defaults to PRIVATE.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    The metadata of the project. Optional. Metadata allowed values can be found using the Custom Fields API.\\nprefix : str | None\\n    The prefix of the project. Optional.\\n\\nacl : list[ACL] | None\\n    The ACL of the project. Optional.\\ntask_config : list[TaskConfig] | None\\n    The task configuration of the project. Optional.\\ngrid : GridDefault | None\\n    The default grid of the project. Optional.\\nstate : State | None\\n    The state/status of the project. Allowed states are customizeable using the entitystatus API. Optional.\\napplication_engineering_inventory_ids : list[str] | None\\n    Inventory Ids to be added as application engineering. Optional.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Status\"\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"description\": {\n          \"maxLength\": 2000,\n          \"minLength\": 1,\n          \"title\": \"Description\",\n          \"type\": \"string\"\n        },\n        \"Locations\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Location\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"maxItems\": 20,\n              \"minItems\": 1,\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Locations\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"private\"\n        },\n        \"prefix\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prefix\"\n        },\n        \"appEngg\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Inventory Ids to be added as application engineering\",\n          \"title\": \"Appengg\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ACL\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Acl\"\n        },\n        \"old_api_params\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Old Api Params\"\n        },\n        \"task_config\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskConfig\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Task Config\"\n        },\n        \"grid\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/GridDefault\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/State\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"description\"\n      ],\n      \"title\": \"Project\",\n      \"type\": \"object\"\n    },\n    \"ProjectClass\": {\n      \"description\": \"The ACL Class of a project\",\n      \"enum\": [\n        \"shared\",\n        \"public\",\n        \"confidential\",\n        \"private\"\n      ],\n      \"title\": \"ProjectClass\",\n      \"type\": \"string\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"State\": {\n      \"description\": \"The current state of a project\",\n      \"enum\": [\n        \"Not Started\",\n        \"Active\",\n        \"Closed - Success\",\n        \"Closed - Archived\"\n      ],\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"TaskConfig\": {\n      \"description\": \"The task configuration for a project\",\n      \"properties\": {\n        \"datatemplateId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Datatemplateid\"\n        },\n        \"workflowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Workflowid\"\n        },\n        \"defaultTaskName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Defaulttaskname\"\n        },\n        \"target\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Target\"\n        },\n        \"hidden\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Hidden\"\n        }\n      },\n      \"title\": \"TaskConfig\",\n      \"type\": \"object\"\n    },\n    \"TaskPriority\": {\n      \"enum\": [\n        \"High\",\n        \"Medium\",\n        \"Low\"\n      ],\n      \"title\": \"TaskPriority\",\n      \"type\": \"string\"\n    },\n    \"TaskSource\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"$ref\": \"#/$defs/TaskSourceType\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"type\"\n      ],\n      \"title\": \"TaskSource\",\n      \"type\": \"object\"\n    },\n    \"TaskSourceType\": {\n      \"enum\": [\n        \"task\",\n        \"template\"\n      ],\n      \"title\": \"TaskSourceType\",\n      \"type\": \"string\"\n    },\n    \"TaskState\": {\n      \"enum\": [\n        \"Unclaimed\",\n        \"Not Started\",\n        \"In Progress\",\n        \"Completed\",\n        \"Closed\"\n      ],\n      \"title\": \"TaskState\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Tags\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Tag\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Tags\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"const\": \"General\",\n      \"default\": \"General\",\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"Metadata\": {\n      \"additionalProperties\": {\n        \"anyOf\": [\n          {\n            \"type\": \"number\"\n          },\n          {\n            \"type\": \"integer\"\n          },\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          {\n            \"items\": {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            \"type\": \"array\"\n          },\n          {\n            \"type\": \"null\"\n          }\n        ]\n      },\n      \"title\": \"Metadata\",\n      \"type\": \"object\"\n    },\n    \"Sources\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/TaskSource\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Sources\"\n    },\n    \"Inventories\": {\n      \"default\": null,\n      \"items\": {\n        \"$ref\": \"#/$defs/InventoryInformation\"\n      },\n      \"title\": \"Inventories\",\n      \"type\": \"array\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"priority\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/TaskPriority\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"class\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/SecurityClass\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"passOrFail\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Passorfail\"\n    },\n    \"notes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Notes\"\n    },\n    \"startDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Startdate\"\n    },\n    \"dueDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Duedate\"\n    },\n    \"claimedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Claimeddate\"\n    },\n    \"completedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Completeddate\"\n    },\n    \"closedDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Closeddate\"\n    },\n    \"result\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Result\"\n    },\n    \"state\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/TaskState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Project\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Project\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Project\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Project\"\n    },\n    \"AssignedTo\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/User\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignedto\"\n    },\n    \"PageState\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/PageState\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"GeneralTask\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>tags</code>                 (<code>list[SerializeAsEntityLink[Tag]] | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>parent_id</code>                 (<code>str | None</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem]</code>)             </li> <li> <code>sources</code>                 (<code>list[TaskSource] | None</code>)             </li> <li> <code>inventory_information</code>                 (<code>list[InventoryInformation]</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>priority</code>                 (<code>TaskPriority | None</code>)             </li> <li> <code>security_class</code>                 (<code>SecurityClass | None</code>)             </li> <li> <code>pass_fail</code>                 (<code>bool | None</code>)             </li> <li> <code>notes</code>                 (<code>str | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>str | None</code>)             </li> <li> <code>claimed_date</code>                 (<code>str | None</code>)             </li> <li> <code>completed_date</code>                 (<code>str | None</code>)             </li> <li> <code>closed_date</code>                 (<code>str | None</code>)             </li> <li> <code>result</code>                 (<code>str | None</code>)             </li> <li> <code>state</code>                 (<code>TaskState | None</code>)             </li> <li> <code>project</code>                 (<code>SerializeAsEntityLink[Project] | list[SerializeAsEntityLink[Project]] | None</code>)             </li> <li> <code>assigned_to</code>                 (<code>SerializeAsEntityLink[User] | None</code>)             </li> <li> <code>page_state</code>                 (<code>PageState | None</code>)             </li> <li> <code>category</code>                 (<code>Literal[GENERAL]</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.GeneralTask.category","title":"category","text":"<pre><code>category: Literal[GENERAL] = GENERAL\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskHistoryEvent","title":"TaskHistoryEvent","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"state\": {\n      \"title\": \"State\",\n      \"type\": \"string\"\n    },\n    \"action\": {\n      \"title\": \"Action\",\n      \"type\": \"string\"\n    },\n    \"actionAt\": {\n      \"format\": \"date-time\",\n      \"title\": \"Actionat\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/User\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        }\n      ],\n      \"title\": \"User\"\n    },\n    \"oldValue\": {\n      \"anyOf\": [\n        {},\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Oldvalue\"\n    },\n    \"newValue\": {\n      \"anyOf\": [\n        {},\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Newvalue\"\n    }\n  },\n  \"required\": [\n    \"state\",\n    \"action\",\n    \"actionAt\",\n    \"User\"\n  ],\n  \"title\": \"TaskHistoryEvent\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>state</code>                 (<code>str</code>)             </li> <li> <code>action</code>                 (<code>str</code>)             </li> <li> <code>action_at</code>                 (<code>datetime</code>)             </li> <li> <code>user</code>                 (<code>SerializeAsEntityLink[User]</code>)             </li> <li> <code>old_value</code>                 (<code>Any | None</code>)             </li> <li> <code>new_value</code>                 (<code>Any | None</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.TaskHistoryEvent.state","title":"state","text":"<pre><code>state: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskHistoryEvent.action","title":"action","text":"<pre><code>action: str\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskHistoryEvent.action_at","title":"action_at","text":"<pre><code>action_at: datetime\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskHistoryEvent.user","title":"user","text":"<pre><code>user: SerializeAsEntityLink[User]\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskHistoryEvent.old_value","title":"old_value","text":"<pre><code>old_value: Any | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskHistoryEvent.new_value","title":"new_value","text":"<pre><code>new_value: Any | None = None\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskHistory","title":"TaskHistory","text":"<p>               Bases: <code>BaseAlbertModel</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"TaskHistoryEvent\": {\n      \"properties\": {\n        \"state\": {\n          \"title\": \"State\",\n          \"type\": \"string\"\n        },\n        \"action\": {\n          \"title\": \"Action\",\n          \"type\": \"string\"\n        },\n        \"actionAt\": {\n          \"format\": \"date-time\",\n          \"title\": \"Actionat\",\n          \"type\": \"string\"\n        },\n        \"User\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/User\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            }\n          ],\n          \"title\": \"User\"\n        },\n        \"oldValue\": {\n          \"anyOf\": [\n            {},\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Oldvalue\"\n        },\n        \"newValue\": {\n          \"anyOf\": [\n            {},\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Newvalue\"\n        }\n      },\n      \"required\": [\n        \"state\",\n        \"action\",\n        \"actionAt\",\n        \"User\"\n      ],\n      \"title\": \"TaskHistoryEvent\",\n      \"type\": \"object\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    }\n  },\n  \"properties\": {\n    \"Items\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/TaskHistoryEvent\"\n      },\n      \"title\": \"Items\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"Items\"\n  ],\n  \"title\": \"TaskHistory\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>items</code>                 (<code>list[TaskHistoryEvent]</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.TaskHistory.items","title":"items","text":"<pre><code>items: list[TaskHistoryEvent]\n</code></pre>"},{"location":"resources/tasks/#albert.resources.tasks.TaskPatchPayload","title":"TaskPatchPayload","text":"<p>               Bases: <code>PatchPayload</code></p> <p>A payload for a PATCH request to update a Task.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <p>The id of the Task to be updated.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"PatchDatum\": {\n      \"properties\": {\n        \"operation\": {\n          \"title\": \"Operation\",\n          \"type\": \"string\"\n        },\n        \"attribute\": {\n          \"title\": \"Attribute\",\n          \"type\": \"string\"\n        },\n        \"newValue\": {\n          \"anyOf\": [\n            {},\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Newvalue\"\n        },\n        \"oldValue\": {\n          \"anyOf\": [\n            {},\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Oldvalue\"\n        }\n      },\n      \"required\": [\n        \"operation\",\n        \"attribute\"\n      ],\n      \"title\": \"PatchDatum\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"A payload for a PATCH request to update a Task.\\n\\nAttributes\\n----------\\nid:  str\\n    The id of the Task to be updated.\",\n  \"properties\": {\n    \"data\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/PatchDatum\"\n      },\n      \"title\": \"Data\",\n      \"type\": \"array\"\n    },\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"data\",\n    \"id\"\n  ],\n  \"title\": \"TaskPatchPayload\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>data</code>                 (<code>list[PatchDatum]</code>)             </li> <li> <code>id</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/tasks/#albert.resources.tasks.TaskPatchPayload.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/un_numbers/","title":"UN Numbers","text":""},{"location":"resources/un_numbers/#albert.resources.un_numbers","title":"albert.resources.un_numbers","text":""},{"location":"resources/un_numbers/#albert.resources.un_numbers.UnNumber","title":"UnNumber","text":"<p>               Bases: <code>BaseResource</code></p> <p>A UN number entity. UN Numbers are highly controlled within Albert.</p> <p>Attributes:</p> Name Type Description <code>un_number</code> <code>str</code> <p>The UN number.</p> <code>id</code> <code>str</code> <p>The Albert ID of the UN number. Set when the UN number is retrieved from Albert.</p> <code>storage_class_name</code> <code>str</code> <p>The name of the storage class.</p> <code>shipping_description</code> <code>str</code> <p>The shipping description.</p> <code>storage_class_number</code> <code>str</code> <p>The storage class number.</p> <code>un_classification</code> <code>str</code> <p>The UN classification.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A UN number entity. UN Numbers are highly controlled within Albert.\\n\\nAttributes\\n----------\\nun_number : str\\n    The UN number.\\nid : str\\n    The Albert ID of the UN number. Set when the UN number is retrieved from Albert.\\nstorage_class_name : str\\n    The name of the storage class.\\nshipping_description : str\\n    The shipping description.\\nstorage_class_number : str\\n    The storage class number.\\nun_classification : str\\n    The UN classification.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"unNumber\": {\n      \"title\": \"Unnumber\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"title\": \"Albertid\",\n      \"type\": \"string\"\n    },\n    \"storageClassName\": {\n      \"title\": \"Storageclassname\",\n      \"type\": \"string\"\n    },\n    \"shippingDescription\": {\n      \"title\": \"Shippingdescription\",\n      \"type\": \"string\"\n    },\n    \"storageClassNumber\": {\n      \"title\": \"Storageclassnumber\",\n      \"type\": \"string\"\n    },\n    \"unClassification\": {\n      \"title\": \"Unclassification\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"unNumber\",\n    \"albertId\",\n    \"storageClassName\",\n    \"shippingDescription\",\n    \"storageClassNumber\",\n    \"unClassification\"\n  ],\n  \"title\": \"UnNumber\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>un_number</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>storage_class_name</code>                 (<code>str</code>)             </li> <li> <code>shipping_description</code>                 (<code>str</code>)             </li> <li> <code>storage_class_number</code>                 (<code>str</code>)             </li> <li> <code>un_classification</code>                 (<code>str</code>)             </li> </ul>"},{"location":"resources/un_numbers/#albert.resources.un_numbers.UnNumber.un_number","title":"un_number","text":"<pre><code>un_number: str\n</code></pre>"},{"location":"resources/un_numbers/#albert.resources.un_numbers.UnNumber.id","title":"id","text":"<pre><code>id: str\n</code></pre>"},{"location":"resources/un_numbers/#albert.resources.un_numbers.UnNumber.storage_class_name","title":"storage_class_name","text":"<pre><code>storage_class_name: str\n</code></pre>"},{"location":"resources/un_numbers/#albert.resources.un_numbers.UnNumber.shipping_description","title":"shipping_description","text":"<pre><code>shipping_description: str\n</code></pre>"},{"location":"resources/un_numbers/#albert.resources.un_numbers.UnNumber.storage_class_number","title":"storage_class_number","text":"<pre><code>storage_class_number: str\n</code></pre>"},{"location":"resources/un_numbers/#albert.resources.un_numbers.UnNumber.un_classification","title":"un_classification","text":"<pre><code>un_classification: str\n</code></pre>"},{"location":"resources/units/","title":"Units","text":""},{"location":"resources/units/#albert.resources.units","title":"albert.resources.units","text":""},{"location":"resources/units/#albert.resources.units.UnitCategory","title":"UnitCategory","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>UnitCategory is an enumeration of possible unit categories.</p> <p>Attributes:</p> Name Type Description <code>LENGTH</code> <code>str</code> <p>Represents length units.</p> <code>VOLUME</code> <code>str</code> <p>Represents volume units.</p> <code>LIQUID_VOLUME</code> <code>str</code> <p>Represents liquid volume units.</p> <code>ANGLES</code> <code>str</code> <p>Represents angle units.</p> <code>TIME</code> <code>str</code> <p>Represents time units.</p> <code>FREQUENCY</code> <code>str</code> <p>Represents frequency units.</p> <code>MASS</code> <code>str</code> <p>Represents mass units.</p> <code>CURRENT</code> <code>str</code> <p>Represents electric current units.</p> <code>TEMPERATURE</code> <code>str</code> <p>Represents temperature units.</p> <code>AMOUNT</code> <code>str</code> <p>Represents amount of substance units.</p> <code>LUMINOSITY</code> <code>str</code> <p>Represents luminous intensity units.</p> <code>FORCE</code> <code>str</code> <p>Represents force units.</p> <code>ENERGY</code> <code>str</code> <p>Represents energy units.</p> <code>POWER</code> <code>str</code> <p>Represents power units.</p> <code>PRESSURE</code> <code>str</code> <p>Represents pressure units.</p> <code>ELECTRICITY_AND_MAGNETISM</code> <code>str</code> <p>Represents electricity and magnetism units.</p> <code>OTHER</code> <code>str</code> <p>Represents other units.</p> <code>WEIGHT</code> <code>str</code> <p>Represents weight units.</p>"},{"location":"resources/units/#albert.resources.units.UnitCategory.LENGTH","title":"LENGTH","text":"<pre><code>LENGTH = 'Length'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.VOLUME","title":"VOLUME","text":"<pre><code>VOLUME = 'Volume'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.LIQUID_VOLUME","title":"LIQUID_VOLUME","text":"<pre><code>LIQUID_VOLUME = 'Liquid volume'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.ANGLES","title":"ANGLES","text":"<pre><code>ANGLES = 'Angles'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.TIME","title":"TIME","text":"<pre><code>TIME = 'Time'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.FREQUENCY","title":"FREQUENCY","text":"<pre><code>FREQUENCY = 'Frequency'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.MASS","title":"MASS","text":"<pre><code>MASS = 'Mass'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.CURRENT","title":"CURRENT","text":"<pre><code>CURRENT = 'Electric current'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.TEMPERATURE","title":"TEMPERATURE","text":"<pre><code>TEMPERATURE = 'Temperature'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.AMOUNT","title":"AMOUNT","text":"<pre><code>AMOUNT = 'Amount of substance'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.LUMINOSITY","title":"LUMINOSITY","text":"<pre><code>LUMINOSITY = 'Luminous intensity'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.FORCE","title":"FORCE","text":"<pre><code>FORCE = 'Force'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.ENERGY","title":"ENERGY","text":"<pre><code>ENERGY = 'Energy'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.POWER","title":"POWER","text":"<pre><code>POWER = 'Power'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.PRESSURE","title":"PRESSURE","text":"<pre><code>PRESSURE = 'Pressure'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.ELECTRICITY_AND_MAGNETISM","title":"ELECTRICITY_AND_MAGNETISM","text":"<pre><code>ELECTRICITY_AND_MAGNETISM = 'Electricity and magnetism'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.OTHER","title":"OTHER","text":"<pre><code>OTHER = 'Other'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.WEIGHT","title":"WEIGHT","text":"<pre><code>WEIGHT = 'Weight'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.AREA","title":"AREA","text":"<pre><code>AREA = 'Area'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.SURFACE_AREA","title":"SURFACE_AREA","text":"<pre><code>SURFACE_AREA = 'Surface Area'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.BINARY","title":"BINARY","text":"<pre><code>BINARY = 'Binary'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.CAPACITANCE","title":"CAPACITANCE","text":"<pre><code>CAPACITANCE = 'Capacitance'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.SPEED","title":"SPEED","text":"<pre><code>SPEED = 'Speed'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.ELECTRICAL_CONDUCTIVITY","title":"ELECTRICAL_CONDUCTIVITY","text":"<pre><code>ELECTRICAL_CONDUCTIVITY = 'Electrical conductivity'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.ELECTRICAL_PERMITTIVITY","title":"ELECTRICAL_PERMITTIVITY","text":"<pre><code>ELECTRICAL_PERMITTIVITY = 'Electrical permitivitty'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.DENSITY","title":"DENSITY","text":"<pre><code>DENSITY = 'Density'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.UnitCategory.RESISTANCE","title":"RESISTANCE","text":"<pre><code>RESISTANCE = 'Resistance'\n</code></pre>"},{"location":"resources/units/#albert.resources.units.Unit","title":"Unit","text":"<p>               Bases: <code>BaseResource</code></p> <p>Unit is a Pydantic model representing a unit entity.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str | None</code> <p>The Albert ID of the unit. Set when the unit is retrieved from Albert.</p> <code>name</code> <code>str</code> <p>The name of the unit.</p> <code>symbol</code> <code>str | None</code> <p>The symbol of the unit.</p> <code>synonyms</code> <code>List[str] | None</code> <p>The list of synonyms for the unit.</p> <code>category</code> <code>UnitCategory</code> <p>The category of the unit.</p> <code>verified</code> <code>bool | None</code> <p>Whether the unit is verified.</p> <code>status</code> <code>Status | None</code> <p>The status of the unit. Allowed values are <code>active</code>, and <code>inactive</code></p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"symbol\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Symbol\"\n    },\n    \"Synonyms\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Synonyms\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/UnitCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"verified\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": false,\n      \"title\": \"Verified\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"Unit\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>symbol</code>                 (<code>str | None</code>)             </li> <li> <code>synonyms</code>                 (<code>list[str] | None</code>)             </li> <li> <code>category</code>                 (<code>UnitCategory | None</code>)             </li> <li> <code>verified</code>                 (<code>bool | None</code>)             </li> </ul>"},{"location":"resources/units/#albert.resources.units.Unit.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/units/#albert.resources.units.Unit.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/units/#albert.resources.units.Unit.symbol","title":"symbol","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"resources/units/#albert.resources.units.Unit.synonyms","title":"synonyms","text":"<pre><code>synonyms: list[str] | None\n</code></pre>"},{"location":"resources/units/#albert.resources.units.Unit.category","title":"category","text":"<pre><code>category: UnitCategory | None = None\n</code></pre>"},{"location":"resources/units/#albert.resources.units.Unit.verified","title":"verified","text":"<pre><code>verified: bool | None = False\n</code></pre>"},{"location":"resources/users/","title":"Users","text":""},{"location":"resources/users/#albert.resources.users","title":"albert.resources.users","text":""},{"location":"resources/users/#albert.resources.users.UserClass","title":"UserClass","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>The ACL class level of the user</p> <p>Attributes:</p> Name Type Description <code>GUEST</code> <code>STANDARD</code> <code>TRUSTED</code> <code>PRIVILEGED</code> <code>ADMIN</code>"},{"location":"resources/users/#albert.resources.users.UserClass.GUEST","title":"GUEST","text":"<pre><code>GUEST = 'guest'\n</code></pre>"},{"location":"resources/users/#albert.resources.users.UserClass.STANDARD","title":"STANDARD","text":"<pre><code>STANDARD = 'standard'\n</code></pre>"},{"location":"resources/users/#albert.resources.users.UserClass.TRUSTED","title":"TRUSTED","text":"<pre><code>TRUSTED = 'trusted'\n</code></pre>"},{"location":"resources/users/#albert.resources.users.UserClass.PRIVILEGED","title":"PRIVILEGED","text":"<pre><code>PRIVILEGED = 'privileged'\n</code></pre>"},{"location":"resources/users/#albert.resources.users.UserClass.ADMIN","title":"ADMIN","text":"<pre><code>ADMIN = 'admin'\n</code></pre>"},{"location":"resources/users/#albert.resources.users.User","title":"User","text":"<p>               Bases: <code>BaseResource</code></p> <p>Represents a User on the Albert Platform</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the user.</p> <code>id</code> <code>str | None</code> <p>The Albert ID of the user. Set when the user is retrieved from Albert.</p> <code>location</code> <code>Location | None</code> <p>The location of the user.</p> <code>email</code> <code>EmailStr | None</code> <p>The email of the user.</p> <code>roles</code> <code>list[Role]</code> <p>The roles of the user.</p> <code>user_class</code> <code>UserClass</code> <p>The ACL class level of the user.</p> <code>metadata</code> <code>dict[str, str | list[EntityLink] | EntityLink] | None</code> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    },\n    \"Location\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Location\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Location\"\n    },\n    \"email\": {\n      \"default\": null,\n      \"format\": \"email\",\n      \"title\": \"Email\",\n      \"type\": \"string\"\n    },\n    \"Roles\": {\n      \"items\": {\n        \"anyOf\": [\n          {\n            \"$ref\": \"#/$defs/Role\"\n          },\n          {\n            \"$ref\": \"#/$defs/EntityLink\"\n          }\n        ]\n      },\n      \"maxItems\": 1,\n      \"title\": \"Roles\",\n      \"type\": \"array\"\n    },\n    \"userClass\": {\n      \"$ref\": \"#/$defs/UserClass\",\n      \"default\": \"standard\"\n    },\n    \"Metadata\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Metadata\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"User\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>UserId | None</code>)             </li> <li> <code>location</code>                 (<code>SerializeAsEntityLink[Location] | None</code>)             </li> <li> <code>email</code>                 (<code>EmailStr</code>)             </li> <li> <code>roles</code>                 (<code>list[SerializeAsEntityLink[Role]]</code>)             </li> <li> <code>user_class</code>                 (<code>UserClass</code>)             </li> <li> <code>metadata</code>                 (<code>dict[str, MetadataItem] | None</code>)             </li> </ul>"},{"location":"resources/users/#albert.resources.users.User.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/users/#albert.resources.users.User.id","title":"id","text":"<pre><code>id: UserId | None = None\n</code></pre>"},{"location":"resources/users/#albert.resources.users.User.location","title":"location","text":"<pre><code>location: SerializeAsEntityLink[Location] | None = None\n</code></pre>"},{"location":"resources/users/#albert.resources.users.User.email","title":"email","text":"<pre><code>email: EmailStr = None\n</code></pre>"},{"location":"resources/users/#albert.resources.users.User.roles","title":"roles","text":"<pre><code>roles: list[SerializeAsEntityLink[Role]]\n</code></pre>"},{"location":"resources/users/#albert.resources.users.User.user_class","title":"user_class","text":"<pre><code>user_class: UserClass = STANDARD\n</code></pre>"},{"location":"resources/users/#albert.resources.users.User.metadata","title":"metadata","text":"<pre><code>metadata: dict[str, MetadataItem] | None = None\n</code></pre>"},{"location":"resources/users/#albert.resources.users.User.to_note_mention","title":"to_note_mention","text":"<pre><code>to_note_mention() -&gt; str\n</code></pre> <p>Convert the user to a note mention string.</p> <p>Returns:</p> Type Description <code>str</code> <p>The note mention string.</p> Source code in <code>src/albert/resources/users.py</code> <pre><code>def to_note_mention(self) -&gt; str:\n    \"\"\"Convert the user to a note mention string.\n\n    Returns\n    -------\n    str\n        The note mention string.\n    \"\"\"\n    return f\"@{self.name}#{self.id}#\"\n</code></pre>"},{"location":"resources/workflows/","title":"Workflows","text":""},{"location":"resources/workflows/#albert.resources.workflows","title":"albert.resources.workflows","text":""},{"location":"resources/workflows/#albert.resources.workflows.IntervalParameter","title":"IntervalParameter","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>A class representing the interval parameter of a workflow. This is not a platform entity, but a helper class to make parsing the interval_combinations easier.</p> <p>Attributes:</p> Name Type Description <code>interval_param_name</code> <code>str</code> <p>The name of the interval parameter.</p> <code>interval_id</code> <code>IntervalId</code> <p>The id of the interval parameter.</p> <code>interval_value</code> <code>str</code> <p>The value of the interval parameter.</p> <code>interval_unit</code> <code>str</code> <p>The unit of the interval parameter.</p> Show JSON schema: <pre><code>{\n  \"description\": \"A class representing the interval parameter of a workflow.\\nThis is not a platform entity, but a helper class to make parsing\\nthe interval_combinations easier.\\n\\nAttributes\\n----------\\ninterval_param_name : str\\n    The name of the interval parameter.\\ninterval_id : IntervalId\\n    The id of the interval parameter.\\ninterval_value : str\\n    The value of the interval parameter.\\ninterval_unit : str\\n    The unit of the interval parameter.\",\n  \"properties\": {\n    \"interval_param_name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Interval Param Name\"\n    },\n    \"interval_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Interval Id\"\n    },\n    \"interval_value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Interval Value\"\n    },\n    \"interval_unit\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Interval Unit\"\n    }\n  },\n  \"title\": \"IntervalParameter\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>interval_param_name</code>                 (<code>str | None</code>)             </li> <li> <code>interval_id</code>                 (<code>IntervalId | None</code>)             </li> <li> <code>interval_value</code>                 (<code>str | None</code>)             </li> <li> <code>interval_unit</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/workflows/#albert.resources.workflows.IntervalParameter.interval_param_name","title":"interval_param_name","text":"<pre><code>interval_param_name: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.IntervalParameter.interval_id","title":"interval_id","text":"<pre><code>interval_id: IntervalId | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.IntervalParameter.interval_value","title":"interval_value","text":"<pre><code>interval_value: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.IntervalParameter.interval_unit","title":"interval_unit","text":"<pre><code>interval_unit: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.Interval","title":"Interval","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>A Pydantic class representing an interval.</p> Attrubutes <p>value : str     The value of the interval setpoint. unit : Unit     The unit of the related value.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n  \"properties\": {\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"Unit\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Unit\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"rowId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rowid\"\n    }\n  },\n  \"title\": \"Interval\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>value</code>                 (<code>str | None</code>)             </li> <li> <code>unit</code>                 (<code>SerializeAsEntityLink[Unit] | None</code>)             </li> <li> <code>row_id</code>                 (<code>RowId | None</code>)             </li> </ul>"},{"location":"resources/workflows/#albert.resources.workflows.Interval.value","title":"value","text":"<pre><code>value: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.Interval.unit","title":"unit","text":"<pre><code>unit: SerializeAsEntityLink[Unit] | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.Interval.row_id","title":"row_id","text":"<pre><code>row_id: RowId | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.IntervalCombination","title":"IntervalCombination","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>A class representing the interval combinations of on a workflow. This is returned by the workflow endpoint when at least one parameter in the workflow has been intervalized.</p> <p>Interval Combinations can be single intervalized parameters or cartesian prodcuts of two intervalized parameters.</p> <p>Attributes:</p> Name Type Description <code>interval_id</code> <code>IntervalId | None</code> <p>forign key reference to the interval id this combination is associated with It will have the form ROW# or ROW#XROW# depending on if it is a single interval or a product of two intervals</p> <code>interval_params</code> <code>str | None</code> <p>The parameters participating in the interval.</p> <code>interval_string</code> <code>str | None</code> <p>The string representation of the interval combination This will have the form \"[Parameter Name]: [Parameter Value][Parameter Unit]\" for each parameter in the interval combination</p> Show JSON schema: <pre><code>{\n  \"description\": \"A class representing the interval combinations of on a workflow.\\nThis is returned by the workflow endpoint when at least one parameter\\nin the workflow has been intervalized.\\n\\nInterval Combinations can be single intervalized parameters or cartesian prodcuts of\\ntwo intervalized parameters.\\n\\nAttributes\\n----------\\ninterval_id: IntervalId | None\\n    forign key reference to the interval id\\n    this combination is associated with\\n    It will have the form ROW# or ROW#XROW# depending on\\n    if it is a single interval or a product of two intervals\\ninterval_params: str | None\\n    The parameters participating in the interval.\\ninterval_string: str | None\\n    The string representation of the interval combination\\n    This will have the form \\\"[Parameter Name]: [Parameter Value] [Parameter Unit]\\\"\\n    for each parameter in the interval combination\",\n  \"properties\": {\n    \"interval\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Interval\"\n    },\n    \"intervalParams\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Intervalparams\"\n    },\n    \"intervalString\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Intervalstring\"\n    }\n  },\n  \"title\": \"IntervalCombination\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>interval_id</code>                 (<code>IntervalId | None</code>)             </li> <li> <code>interval_params</code>                 (<code>str | None</code>)             </li> <li> <code>interval_string</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"resources/workflows/#albert.resources.workflows.IntervalCombination.interval_id","title":"interval_id","text":"<pre><code>interval_id: IntervalId | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.IntervalCombination.interval_params","title":"interval_params","text":"<pre><code>interval_params: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.IntervalCombination.interval_string","title":"interval_string","text":"<pre><code>interval_string: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint","title":"ParameterSetpoint","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>A Pydantic class representing the setpoint or intervals of a parameter to use. For a single value, provide the value and unit. For multiple values, provide intervals. a parameter or parameter_id must be provided.</p> <p>Attributes:</p> Name Type Description <code>parameter</code> <code>Parameter</code> <p>The parameter to set the setpoint on. Provide either a parameter or a parameter_id.</p> <code>parameter_id</code> <code>ParameterId</code> <p>The id of the parameter. Provide either a parameter or a parameter_id.</p> <code>value</code> <code>str | EntityLink</code> <p>The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.</p> <code>unit</code> <code>Unit</code> <p>The unit of the setpoint.</p> <code>intervals</code> <code>list[Interval]</code> <p>The intervals of the setpoint. Either ether intervals or value + unit</p> <code>category</code> <code>ParameterCategory</code> <p>The category of the parameter. Special for InventoryItem (then use name to specify \"Equipment\", \"Consumeable\", etc), normal for all others</p> <code>short_name</code> <code>str</code> <p>The short / display name of the parameter. Required if value is a dictionary.</p> <code>row_id</code> <code>RowId</code> <p>The id of the parameter with respect to the interval row id.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"Interval\": {\n      \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"Interval\",\n      \"type\": \"object\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A Pydantic class representing the setpoint or intervals of a parameter to use.\\nFor a single value, provide the value and unit. For multiple values, provide intervals.\\na parameter or parameter_id must be provided.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The parameter to set the setpoint on. Provide either a parameter or a parameter_id.\\nparameter_id : ParameterId\\n    The id of the parameter. Provide either a parameter or a parameter_id.\\nvalue : str | EntityLink\\n    The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.\\nunit : Unit\\n    The unit of the setpoint.\\nintervals : list[Interval]\\n    The intervals of the setpoint. Either ether intervals or value + unit\\ncategory : ParameterCategory\\n    The category of the parameter. Special for InventoryItem (then use name to specify \\\"Equipment\\\", \\\"Consumeable\\\", etc), normal for all others\\nshort_name : str\\n    The short / display name of the parameter. Required if value is a dictionary.\\nrow_id : RowId\\n    The id of the parameter with respect to the interval row id.\",\n  \"properties\": {\n    \"parameter\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Parameter\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"value\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Value\"\n    },\n    \"Unit\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Unit\"\n        },\n        {\n          \"$ref\": \"#/$defs/EntityLink\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Unit\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"Intervals\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/Interval\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Intervals\"\n    },\n    \"category\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/ParameterCategory\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"shortName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Shortname\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"rowId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Rowid\"\n    }\n  },\n  \"title\": \"ParameterSetpoint\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>parameter</code>                 (<code>Parameter | None</code>)             </li> <li> <code>value</code>                 (<code>str | EntityLink | None</code>)             </li> <li> <code>unit</code>                 (<code>SerializeAsEntityLink[Unit] | None</code>)             </li> <li> <code>parameter_id</code>                 (<code>ParameterId | None</code>)             </li> <li> <code>intervals</code>                 (<code>list[Interval] | None</code>)             </li> <li> <code>category</code>                 (<code>ParameterCategory | None</code>)             </li> <li> <code>short_name</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>row_id</code>                 (<code>RowId | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>check_parameter_setpoint_validity</code> </li> </ul>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.parameter","title":"parameter","text":"<pre><code>parameter: Parameter | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.value","title":"value","text":"<pre><code>value: str | EntityLink | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.unit","title":"unit","text":"<pre><code>unit: SerializeAsEntityLink[Unit] | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.parameter_id","title":"parameter_id","text":"<pre><code>parameter_id: ParameterId | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.intervals","title":"intervals","text":"<pre><code>intervals: list[Interval] | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.category","title":"category","text":"<pre><code>category: ParameterCategory | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.short_name","title":"short_name","text":"<pre><code>short_name: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.name","title":"name","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.row_id","title":"row_id","text":"<pre><code>row_id: RowId | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.model_post_init","title":"model_post_init","text":"<pre><code>model_post_init(__context) -&gt; None\n</code></pre> <p>Note:   We use post init here rather than doing the assignment         in the validator because <code>name</code> is a pydantic field         and setting it will trigger the model validation again         causing an infinite recursion error</p> Source code in <code>src/albert/resources/workflows.py</code> <pre><code>def model_post_init(self, __context) -&gt; None:\n    \"\"\"\n    Note:   We use post init here rather than doing the assignment\n            in the validator because `name` is a pydantic field\n            and setting it will trigger the model validation again\n            causing an infinite recursion error\n    \"\"\"\n    if self.parameter is not None and not self.name:\n        self.name = self.parameter.name\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterSetpoint.check_parameter_setpoint_validity","title":"check_parameter_setpoint_validity","text":"<pre><code>check_parameter_setpoint_validity()\n</code></pre> Source code in <code>src/albert/resources/workflows.py</code> <pre><code>@model_validator(mode=\"after\")\ndef check_parameter_setpoint_validity(self):\n    if self.parameter:\n        if self.parameter_id is not None and self.parameter_id != self.parameter.id:\n            raise ValueError(\"Provided parameter_id does not match the parameter's id.\")\n        if self.parameter_id is None:\n            self.parameter_id = self.parameter.id\n    elif self.parameter is None and self.parameter_id is None:\n        raise ValueError(\"Either parameter or parameter_id must be provided.\")\n    if self.value is not None and self.intervals is not None:\n        raise ValueError(\"Cannot provide both value and intervals.\")\n    if isinstance(self.value, dict) and self.short_name is None:\n        raise ValueError(\"Please provide a short_name.\")\n    if isinstance(self.value, dict) and self.category is None:\n        # Help the user out by setting the category to special if it's not set\n        self.category = ParameterCategory.SPECIAL\n    return self\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterGroupSetpoints","title":"ParameterGroupSetpoints","text":"<p>               Bases: <code>BaseAlbertModel</code></p> <p>A class that represents the setpoints on a parameter group.</p> <p>Attributes:</p> Name Type Description <code>parameter_group</code> <code>ParameterGroup</code> <p>The parameter group to set the setpoints on. Provide either a parameter_group or a paramerter_group_id</p> <code>parameter_group_id</code> <code>ParameterGroupId</code> <p>The id of the parameter group.  Provide either a parameter_group or a paramerter_group_id</p> <code>parameter_group_name</code> <code>str</code> <p>The name of the parameter group. This is a read-only field.</p> <code>parameter_setpoints</code> <code>list[ParameterSetpoint]</code> <p>The setpoints to apply to the parameter group.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"Interval\": {\n      \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"Interval\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"PGType\": {\n      \"description\": \"The type of a parameter group\",\n      \"enum\": [\n        \"general\",\n        \"batch\",\n        \"property\"\n      ],\n      \"title\": \"PGType\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterGroup\": {\n      \"description\": \"Use 'Standards' key in metadata to store standards\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PGType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"class\": {\n          \"$ref\": \"#/$defs/SecurityClass\",\n          \"default\": \"restricted\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"Metadata\": {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"title\": \"Metadata\",\n          \"type\": \"object\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"documents\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Documents\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"ParameterGroup\",\n      \"type\": \"object\"\n    },\n    \"ParameterSetpoint\": {\n      \"description\": \"A Pydantic class representing the setpoint or intervals of a parameter to use.\\nFor a single value, provide the value and unit. For multiple values, provide intervals.\\na parameter or parameter_id must be provided.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The parameter to set the setpoint on. Provide either a parameter or a parameter_id.\\nparameter_id : ParameterId\\n    The id of the parameter. Provide either a parameter or a parameter_id.\\nvalue : str | EntityLink\\n    The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.\\nunit : Unit\\n    The unit of the setpoint.\\nintervals : list[Interval]\\n    The intervals of the setpoint. Either ether intervals or value + unit\\ncategory : ParameterCategory\\n    The category of the parameter. Special for InventoryItem (then use name to specify \\\"Equipment\\\", \\\"Consumeable\\\", etc), normal for all others\\nshort_name : str\\n    The short / display name of the parameter. Required if value is a dictionary.\\nrow_id : RowId\\n    The id of the parameter with respect to the interval row id.\",\n      \"properties\": {\n        \"parameter\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Parameter\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Intervals\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Interval\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervals\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"ParameterSetpoint\",\n      \"type\": \"object\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"A class that represents the setpoints on a parameter group.\\n\\n\\nAttributes\\n----------\\nparameter_group : ParameterGroup\\n    The parameter group to set the setpoints on. Provide either a parameter_group or a paramerter_group_id\\nparameter_group_id : ParameterGroupId\\n    The id of the parameter group.  Provide either a parameter_group or a paramerter_group_id\\nparameter_group_name : str\\n    The name of the parameter group. This is a read-only field.\\nparameter_setpoints : list[ParameterSetpoint]\\n    The setpoints to apply to the parameter group.\",\n  \"properties\": {\n    \"parameter_group\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/ParameterGroup\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Id\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"Parameters\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ParameterSetpoint\"\n      },\n      \"title\": \"Parameters\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"ParameterGroupSetpoints\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>parameter_group</code>                 (<code>ParameterGroup | None</code>)             </li> <li> <code>parameter_group_id</code>                 (<code>ParameterGroupId | None</code>)             </li> <li> <code>parameter_group_name</code>                 (<code>str | None</code>)             </li> <li> <code>parameter_setpoints</code>                 (<code>list[ParameterSetpoint]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>validate_pg_setpoint</code> </li> </ul>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterGroupSetpoints.parameter_group","title":"parameter_group","text":"<pre><code>parameter_group: ParameterGroup | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterGroupSetpoints.parameter_group_id","title":"parameter_group_id","text":"<pre><code>parameter_group_id: ParameterGroupId | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterGroupSetpoints.parameter_group_name","title":"parameter_group_name","text":"<pre><code>parameter_group_name: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterGroupSetpoints.parameter_setpoints","title":"parameter_setpoints","text":"<pre><code>parameter_setpoints: list[ParameterSetpoint]\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.ParameterGroupSetpoints.validate_pg_setpoint","title":"validate_pg_setpoint","text":"<pre><code>validate_pg_setpoint()\n</code></pre> Source code in <code>src/albert/resources/workflows.py</code> <pre><code>@model_validator(mode=\"after\")\ndef validate_pg_setpoint(self):\n    if self.parameter_group is not None:\n        if self.parameter_group_id is not None:\n            if self.parameter_group.id != self.parameter_group_id:\n                raise ValueError(\n                    \"Provided parameter_group_id does not match the parameter_group's id.\"\n                )\n        else:\n            self.parameter_group_id = self.parameter_group.id\n    return self\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.Workflow","title":"Workflow","text":"<p>               Bases: <code>BaseResource</code></p> <p>A Pydantic Class representing a workflow in Albert.</p> <p>Workflows are combinations of Data Templates and Parameter groups and their associated setpoints.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the workflow.</p> <code>parameter_group_setpoints</code> <code>list[ParameterGroupSetpoints]</code> <p>The setpoints to apply to the parameter groups in the workflow.</p> <code>id</code> <code>str | None</code> <p>The AlbertID of the workflow. This is set when a workflow is retrived from the platform.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ACL\": {\n      \"description\": \"The Access Control List (ACL) for a user\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The id of the user for which this ACL applies\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"fgc\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AccessControlLevel\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The Fine-Grain Control Level\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ACL\",\n      \"type\": \"object\"\n    },\n    \"AccessControlLevel\": {\n      \"description\": \"The fine grain control\",\n      \"enum\": [\n        \"ProjectOwner\",\n        \"ProjectEditor\",\n        \"ProjectViewer\",\n        \"ProjectAllTask\",\n        \"ProjectPropertyTask\",\n        \"InventoryOwner\",\n        \"InventoryViewer\",\n        \"CustomTemplateOwner\"\n      ],\n      \"title\": \"AccessControlLevel\",\n      \"type\": \"string\"\n    },\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Cas\": {\n      \"description\": \"Represents a CAS entity.\",\n      \"properties\": {\n        \"number\": {\n          \"description\": \"The CAS number.\",\n          \"title\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the CAS.\",\n          \"title\": \"Name\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The description or name of the CAS.\",\n          \"title\": \"Description\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Notes related to the CAS.\",\n          \"title\": \"Notes\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CasCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The category of the CAS.\"\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS SMILES notation.\",\n          \"title\": \"Cassmiles\"\n        },\n        \"inchiKey\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"InChIKey of the CAS.\",\n          \"title\": \"Inchikey\"\n        },\n        \"iUpacName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IUPAC name of the CAS.\",\n          \"title\": \"Iupacname\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The AlbertID of the CAS.\",\n          \"title\": \"Albertid\"\n        },\n        \"hazards\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Hazard\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazards associated with the CAS.\",\n          \"title\": \"Hazards\"\n        },\n        \"wgk\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"German Water Hazard Class (WGK) number.\",\n          \"title\": \"Wgk\"\n        },\n        \"ecListNo\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"European Community (EC) number.\",\n          \"title\": \"Eclistno\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Type of the CAS.\",\n          \"title\": \"Type\"\n        },\n        \"classificationType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Classification type of the CAS.\",\n          \"title\": \"Classificationtype\"\n        },\n        \"order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"CAS order.\",\n          \"title\": \"Order\"\n        }\n      },\n      \"required\": [\n        \"number\"\n      ],\n      \"title\": \"Cas\",\n      \"type\": \"object\"\n    },\n    \"CasAmount\": {\n      \"description\": \"CasAmount is a Pydantic model representing an amount of a given CAS.\\n\\nAttributes\\n----------\\nmin : float\\n    The minimum amount of the CAS in the formulation.\\nmax : float\\n    The maximum amount of the CAS in the formulation.\\nid : str | None\\n    The Albert ID of the CAS Number Resource this amount represents. Provide either a Cas or an ID.\\ncas : Cas | None\\n    The CAS object associated with this amount. Provide either a Cas or an id.\\ncas_smiles: str | None\\n    The SMILES string of the CAS Number resource. Obtained from the Cas object when provided.\\nnumber: str | None\\n    The CAS number. Obtained from the Cas object when provided.\",\n      \"properties\": {\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"number\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"number\"\n        },\n        \"inventoryValue\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Inventoryvalue\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"casCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cascategory\"\n        },\n        \"cas\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Cas\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"casSmiles\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cassmiles\"\n        },\n        \"number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Number\"\n        }\n      },\n      \"required\": [\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CasAmount\",\n      \"type\": \"object\"\n    },\n    \"CasCategory\": {\n      \"enum\": [\n        \"User\",\n        \"Verisk\",\n        \"TSCA - Public\",\n        \"TSCA - Private\",\n        \"not TSCA\",\n        \"CAS linked to External Database\",\n        \"Unknown (Trade Secret)\",\n        \"CL_Inventory Upload\"\n      ],\n      \"title\": \"CasCategory\",\n      \"type\": \"string\"\n    },\n    \"Company\": {\n      \"description\": \"Company is a Pydantic model representing a company entity.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the company.\\nid : str | None\\n    The Albert ID of the company. Set when the company is retrieved from Albert.\\ndistance : float | None\\n    The scores of a company in a search result, optional. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"distance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Distance\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Company\",\n      \"type\": \"object\"\n    },\n    \"DataType\": {\n      \"enum\": [\n        \"number\",\n        \"string\",\n        \"enum\"\n      ],\n      \"title\": \"DataType\",\n      \"type\": \"string\"\n    },\n    \"EntityLink\": {\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"EntityLink\",\n      \"type\": \"object\"\n    },\n    \"EnumValidationValue\": {\n      \"description\": \"Represents a value for an enum type validation.\\n\\nAttributes\\n----------\\ntext : str\\n    The text of the enum value.\\nid : str | None\\n    The ID of the enum value. If not provided, the ID will be generated upon creation.\",\n      \"properties\": {\n        \"text\": {\n          \"title\": \"Text\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"originalText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originaltext\"\n        }\n      },\n      \"required\": [\n        \"text\"\n      ],\n      \"title\": \"EnumValidationValue\",\n      \"type\": \"object\"\n    },\n    \"Hazard\": {\n      \"description\": \"Represents a chemical hazard.\",\n      \"properties\": {\n        \"subCategory\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard subcategory\",\n          \"title\": \"Subcategory\"\n        },\n        \"hCode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code\",\n          \"title\": \"Hcode\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard category\",\n          \"title\": \"Category\"\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard classification\",\n          \"title\": \"Class\"\n        },\n        \"hCodeText\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Hazard code text\",\n          \"title\": \"Hcodetext\"\n        }\n      },\n      \"title\": \"Hazard\",\n      \"type\": \"object\"\n    },\n    \"Interval\": {\n      \"description\": \"A Pydantic class representing an interval.\\n\\nAttrubutes\\n----------\\nvalue : str\\n    The value of the interval setpoint.\\nunit : Unit\\n    The unit of the related value.\",\n      \"properties\": {\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"Interval\",\n      \"type\": \"object\"\n    },\n    \"IntervalCombination\": {\n      \"description\": \"A class representing the interval combinations of on a workflow.\\nThis is returned by the workflow endpoint when at least one parameter\\nin the workflow has been intervalized.\\n\\nInterval Combinations can be single intervalized parameters or cartesian prodcuts of\\ntwo intervalized parameters.\\n\\nAttributes\\n----------\\ninterval_id: IntervalId | None\\n    forign key reference to the interval id\\n    this combination is associated with\\n    It will have the form ROW# or ROW#XROW# depending on\\n    if it is a single interval or a product of two intervals\\ninterval_params: str | None\\n    The parameters participating in the interval.\\ninterval_string: str | None\\n    The string representation of the interval combination\\n    This will have the form \\\"[Parameter Name]: [Parameter Value] [Parameter Unit]\\\"\\n    for each parameter in the interval combination\",\n      \"properties\": {\n        \"interval\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Interval\"\n        },\n        \"intervalParams\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalparams\"\n        },\n        \"intervalString\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervalstring\"\n        }\n      },\n      \"title\": \"IntervalCombination\",\n      \"type\": \"object\"\n    },\n    \"InventoryCategory\": {\n      \"enum\": [\n        \"RawMaterials\",\n        \"Consumables\",\n        \"Equipment\",\n        \"Formulas\"\n      ],\n      \"title\": \"InventoryCategory\",\n      \"type\": \"string\"\n    },\n    \"InventoryItem\": {\n      \"description\": \"An InventoryItem is a Pydantic model representing an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\nNote: Formulas should be registered via the Worksheet collection / Sheet resource.\\n\\nReturns\\n-------\\nInventoryItem\\n    An InventoryItem that can be used to represent an item in the inventory. Can be a raw material, consumable, equipment, or formula.\\n\\nAttributes\\n------\\n\\nname : str\\n    The name of the InventoryItem.\\nid : str | None\\n    The Albert ID of the InventoryItem. Set when the InventoryItem is retrieved from Albert.\\ndescription : str | None\\n    The description of the InventoryItem.\\ncategory : InventoryCategory\\n    The category of the InventoryItem. Allowed values are `RawMaterials`, `Consumables`, `Equipment`, and `Formulas`.\\nunit_category : InventoryUnitCategory\\n    The unit category of the InventoryItem. Can be mass, volume, length, pressure, or units. By default, mass is used for RawMaterials and Formulas, and units is used for Equipment and Consumables.\\nsecurity_class : SecurityClass | None\\n    The security class of the InventoryItem. Optional. Can be confidential, shared, or restricted.\\ncompany : Company | str | None\\n    The company associated with the InventoryItem. Can be a Company object or a string. If a String is provided, a Company object with the name of the provided string will be first-or-created.\\nminimum : list[InventoryMinimum] | None\\n    The minimum amount of the InventoryItem that must be kept in stock at a given Location. Optional.\\nalias : str | None\\n    An alias for the InventoryItem. Optional.\\ncas : list[CasAmount] | None\\n    The CAS numbers associated with the InventoryItem. This is how a compositional breakdown can be provided. Optional.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\\n    Metadata associated with the InventoryItem. Optional. Allowed metadata fields can be found in the CustomFields documentation.\\nproject_id : str | None\\n    The project ID associated with the InventoryItem. Read Only. Required for Formulas.\\nformula_id : str | None\\n    The formula ID associated with the InventoryItem. Read Only.\\ntags : list[str|Tag] | None\\n    The tags associated with the InventoryItem. Optional. If a string is provided, a Tag object with the name of the provided string will be first-or-created.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"category\": {\n          \"$ref\": \"#/$defs/InventoryCategory\"\n        },\n        \"unitCategory\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/InventoryUnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"class\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SecurityClass\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Company\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Company\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Company\"\n        },\n        \"minimum\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/InventoryMinimum\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Minimum\"\n        },\n        \"alias\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Alias\"\n        },\n        \"Cas\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CasAmount\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Cas\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"ACL\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ACL\"\n          },\n          \"title\": \"Acl\",\n          \"type\": \"array\"\n        },\n        \"TaskConfig\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Taskconfig\"\n        },\n        \"formulaId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Formulaid\"\n        },\n        \"Symbols\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"additionalProperties\": true,\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbols\"\n        },\n        \"unNumber\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unnumber\"\n        },\n        \"recentAttachmentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Recentattachmentid\"\n        }\n      },\n      \"required\": [\n        \"category\"\n      ],\n      \"title\": \"InventoryItem\",\n      \"type\": \"object\"\n    },\n    \"InventoryMinimum\": {\n      \"description\": \"Defined the minimum amount of an InventoryItem that must be kept in stock at a given Location.\\n\\nAttributes\\n----------\\nid : str\\n    The unique identifier of the Location object associated with this InventoryMinimum.\\n    Provide either a Location or a location id.\\nlocation : Location\\n    The Location object associated with this InventoryMinimum. Provide either a Location or a location id.\\nminimum : float\\n    The minimum amount of the InventoryItem that must be kept in stock at the given Location.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"minimum\": {\n          \"maximum\": 1000000000000000,\n          \"minimum\": 0,\n          \"title\": \"Minimum\",\n          \"type\": \"number\"\n        }\n      },\n      \"required\": [\n        \"minimum\"\n      ],\n      \"title\": \"InventoryMinimum\",\n      \"type\": \"object\"\n    },\n    \"InventoryUnitCategory\": {\n      \"enum\": [\n        \"mass\",\n        \"volume\",\n        \"length\",\n        \"pressure\",\n        \"units\"\n      ],\n      \"title\": \"InventoryUnitCategory\",\n      \"type\": \"string\"\n    },\n    \"Location\": {\n      \"description\": \"A location in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the location.\\nid : str | None\\n    The Albert ID of the location. Set when the location is retrieved from Albert.\\nlatitude : float\\n    The latitude of the location.\\nlongitude : float\\n    The longitude of the location.\\naddress : str\\n    The address of the location.\\ncountry : str | None\\n    The country code of the location. Must be two characters long.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"latitude\": {\n          \"title\": \"Latitude\",\n          \"type\": \"number\"\n        },\n        \"longitude\": {\n          \"title\": \"Longitude\",\n          \"type\": \"number\"\n        },\n        \"address\": {\n          \"title\": \"Address\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"anyOf\": [\n            {\n              \"maxLength\": 2,\n              \"minLength\": 2,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Country\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"latitude\",\n        \"longitude\",\n        \"address\"\n      ],\n      \"title\": \"Location\",\n      \"type\": \"object\"\n    },\n    \"Operator\": {\n      \"enum\": [\n        \"between\",\n        \"lt\",\n        \"lte\",\n        \"gte\",\n        \"gt\",\n        \"eq\"\n      ],\n      \"title\": \"Operator\",\n      \"type\": \"string\"\n    },\n    \"PGType\": {\n      \"description\": \"The type of a parameter group\",\n      \"enum\": [\n        \"general\",\n        \"batch\",\n        \"property\"\n      ],\n      \"title\": \"PGType\",\n      \"type\": \"string\"\n    },\n    \"Parameter\": {\n      \"description\": \"A parameter in Albert.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the parameter. Names must be unique.\\nid : str | None\\n    The Albert ID of the parameter. Set when the parameter is retrieved from Albert.\\ncategory : ParameterCategory\\n    The category of the parameter. Allowed values are `Normal` and `Special`. Read-only.\\nrank : int\\n    The rank of the returned parameter. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"rank\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rank\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Parameter\",\n      \"type\": \"object\"\n    },\n    \"ParameterCategory\": {\n      \"description\": \"The category of a parameter\",\n      \"enum\": [\n        \"Normal\",\n        \"Special\"\n      ],\n      \"title\": \"ParameterCategory\",\n      \"type\": \"string\"\n    },\n    \"ParameterGroup\": {\n      \"description\": \"Use 'Standards' key in metadata to store standards\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Tags\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/Tag\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Tags\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/PGType\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"description\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Description\"\n        },\n        \"class\": {\n          \"$ref\": \"#/$defs/SecurityClass\",\n          \"default\": \"restricted\"\n        },\n        \"ACL\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/$defs/User\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  }\n                ]\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Acl\"\n        },\n        \"Metadata\": {\n          \"additionalProperties\": {\n            \"anyOf\": [\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              },\n              {\n                \"items\": {\n                  \"$ref\": \"#/$defs/EntityLink\"\n                },\n                \"type\": \"array\"\n              },\n              {\n                \"type\": \"null\"\n              }\n            ]\n          },\n          \"title\": \"Metadata\",\n          \"type\": \"object\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterValue\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        },\n        \"verified\": {\n          \"default\": false,\n          \"title\": \"Verified\",\n          \"type\": \"boolean\"\n        },\n        \"documents\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/EntityLink\"\n          },\n          \"title\": \"Documents\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"ParameterGroup\",\n      \"type\": \"object\"\n    },\n    \"ParameterGroupSetpoints\": {\n      \"description\": \"A class that represents the setpoints on a parameter group.\\n\\n\\nAttributes\\n----------\\nparameter_group : ParameterGroup\\n    The parameter group to set the setpoints on. Provide either a parameter_group or a paramerter_group_id\\nparameter_group_id : ParameterGroupId\\n    The id of the parameter group.  Provide either a parameter_group or a paramerter_group_id\\nparameter_group_name : str\\n    The name of the parameter group. This is a read-only field.\\nparameter_setpoints : list[ParameterSetpoint]\\n    The setpoints to apply to the parameter group.\",\n      \"properties\": {\n        \"parameter_group\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterGroup\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"Parameters\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/ParameterSetpoint\"\n          },\n          \"title\": \"Parameters\",\n          \"type\": \"array\"\n        }\n      },\n      \"title\": \"ParameterGroupSetpoints\",\n      \"type\": \"object\"\n    },\n    \"ParameterSetpoint\": {\n      \"description\": \"A Pydantic class representing the setpoint or intervals of a parameter to use.\\nFor a single value, provide the value and unit. For multiple values, provide intervals.\\na parameter or parameter_id must be provided.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The parameter to set the setpoint on. Provide either a parameter or a parameter_id.\\nparameter_id : ParameterId\\n    The id of the parameter. Provide either a parameter or a parameter_id.\\nvalue : str | EntityLink\\n    The value of the setpoint. If the parameter is a InventoryItem, provide the EntityLink of the InventoryItem.\\nunit : Unit\\n    The unit of the setpoint.\\nintervals : list[Interval]\\n    The intervals of the setpoint. Either ether intervals or value + unit\\ncategory : ParameterCategory\\n    The category of the parameter. Special for InventoryItem (then use name to specify \\\"Equipment\\\", \\\"Consumeable\\\", etc), normal for all others\\nshort_name : str\\n    The short / display name of the parameter. Required if value is a dictionary.\\nrow_id : RowId\\n    The id of the parameter with respect to the interval row id.\",\n      \"properties\": {\n        \"parameter\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Parameter\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"Intervals\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/Interval\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Intervals\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"rowId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Rowid\"\n        }\n      },\n      \"title\": \"ParameterSetpoint\",\n      \"type\": \"object\"\n    },\n    \"ParameterValue\": {\n      \"description\": \"The value of a parameter in a parameter group.\\n\\nAttributes\\n----------\\nparameter : Parameter\\n    The Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\nid : str | None\\n    The Albert ID of the Parameter resource this value is associated with. Provide either an id or a parameter keyword argument.\\ncategory: ParameterCategory\\n    The category of the parameter.\\nshort_name : str | None\\n    The short name of the parameter value.\\nvalue : str | None\\n    The default value of the parameter. Can be a string or an InventoryItem (if, for example, the parameter is an instrumnt choice).\\nunit : Unit | None\\n    The unit of measure for the provided parameter value.\\nname : str\\n    The name of the parameter. Read-only.\\nsequence : int\\n    The sequence of the parameter. Read-only.\",\n      \"properties\": {\n        \"parameter\": {\n          \"$ref\": \"#/$defs/Parameter\",\n          \"default\": null\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Id\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ParameterCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"shortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Shortname\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"$ref\": \"#/$defs/InventoryItem\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"Unit\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Unit\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Unit\"\n        },\n        \"Added\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"validation\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ValueValidation\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Name\"\n        },\n        \"sequence\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sequence\"\n        },\n        \"originalShortName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalshortname\"\n        },\n        \"originalName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Originalname\"\n        }\n      },\n      \"title\": \"ParameterValue\",\n      \"type\": \"object\"\n    },\n    \"Role\": {\n      \"description\": \"A role in Albert. Note: Roles are not currently creatable via the SDK.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the role.\\nid : str\\n    The Albert ID of the role. Set when the role is retrieved from Albert.\\npolicies : list[Any] | None\\n    The policies associated with the role.\\ntenant : str\\n    The tenant ID of the role.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"policies\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Policies\"\n        },\n        \"tenant\": {\n          \"title\": \"Tenant\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"tenant\"\n      ],\n      \"title\": \"Role\",\n      \"type\": \"object\"\n    },\n    \"SecurityClass\": {\n      \"description\": \"The security class of a resource\",\n      \"enum\": [\n        \"shared\",\n        \"restricted\",\n        \"confidential\",\n        \"private\",\n        \"public\"\n      ],\n      \"title\": \"SecurityClass\",\n      \"type\": \"string\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"Tag\": {\n      \"description\": \"Tag is a Pydantic model representing a tag entity.\\n\\nAttributes\\n----------\\ntag : str\\n    The name of the tag.\\nid : str | None\\n    The Albert ID of the tag. Set when the tag is retrieved from Albert.\\n\\nMethods\\n-------\\nfrom_string(tag: str) -&gt; \\\"Tag\\\"\\n    Creates a Tag object from a string.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Tag\",\n      \"type\": \"object\"\n    },\n    \"Unit\": {\n      \"description\": \"Unit is a Pydantic model representing a unit entity.\\n\\nAttributes\\n----------\\nid : str | None\\n    The Albert ID of the unit. Set when the unit is retrieved from Albert.\\nname : str\\n    The name of the unit.\\nsymbol : str | None\\n    The symbol of the unit.\\nsynonyms : List[str] | None\\n    The list of synonyms for the unit.\\ncategory : UnitCategory\\n    The category of the unit.\\nverified : bool | None\\n    Whether the unit is verified.\\nstatus : Status | None\\n    The status of the unit. Allowed values are `active`, and `inactive`\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"symbol\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Symbol\"\n        },\n        \"Synonyms\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Synonyms\"\n        },\n        \"category\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/UnitCategory\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"verified\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Verified\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"Unit\",\n      \"type\": \"object\"\n    },\n    \"UnitCategory\": {\n      \"description\": \"UnitCategory is an enumeration of possible unit categories.\\n\\nAttributes\\n----------\\nLENGTH : str\\n    Represents length units.\\nVOLUME : str\\n    Represents volume units.\\nLIQUID_VOLUME : str\\n    Represents liquid volume units.\\nANGLES : str\\n    Represents angle units.\\nTIME : str\\n    Represents time units.\\nFREQUENCY : str\\n    Represents frequency units.\\nMASS : str\\n    Represents mass units.\\nCURRENT : str\\n    Represents electric current units.\\nTEMPERATURE : str\\n    Represents temperature units.\\nAMOUNT : str\\n    Represents amount of substance units.\\nLUMINOSITY : str\\n    Represents luminous intensity units.\\nFORCE : str\\n    Represents force units.\\nENERGY : str\\n    Represents energy units.\\nPOWER : str\\n    Represents power units.\\nPRESSURE : str\\n    Represents pressure units.\\nELECTRICITY_AND_MAGNETISM : str\\n    Represents electricity and magnetism units.\\nOTHER : str\\n    Represents other units.\\nWEIGHT : str\\n    Represents weight units.\",\n      \"enum\": [\n        \"Length\",\n        \"Volume\",\n        \"Liquid volume\",\n        \"Angles\",\n        \"Time\",\n        \"Frequency\",\n        \"Mass\",\n        \"Electric current\",\n        \"Temperature\",\n        \"Amount of substance\",\n        \"Luminous intensity\",\n        \"Force\",\n        \"Energy\",\n        \"Power\",\n        \"Pressure\",\n        \"Electricity and magnetism\",\n        \"Other\",\n        \"Weight\",\n        \"Area\",\n        \"Surface Area\",\n        \"Binary\",\n        \"Capacitance\",\n        \"Speed\",\n        \"Electrical conductivity\",\n        \"Electrical permitivitty\",\n        \"Density\",\n        \"Resistance\"\n      ],\n      \"title\": \"UnitCategory\",\n      \"type\": \"string\"\n    },\n    \"User\": {\n      \"description\": \"Represents a User on the Albert Platform\\n\\nAttributes\\n----------\\nname : str\\n    The name of the user.\\nid : str | None\\n    The Albert ID of the user. Set when the user is retrieved from Albert.\\nlocation : Location | None\\n    The location of the user.\\nemail : EmailStr | None\\n    The email of the user.\\nroles : list[Role]\\n    The roles of the user.\\nuser_class : UserClass\\n    The ACL class level of the user.\\nmetadata : dict[str, str | list[EntityLink] | EntityLink] | None\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"albertId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Albertid\"\n        },\n        \"Location\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Location\"\n            },\n            {\n              \"$ref\": \"#/$defs/EntityLink\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Location\"\n        },\n        \"email\": {\n          \"default\": null,\n          \"format\": \"email\",\n          \"title\": \"Email\",\n          \"type\": \"string\"\n        },\n        \"Roles\": {\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/$defs/Role\"\n              },\n              {\n                \"$ref\": \"#/$defs/EntityLink\"\n              }\n            ]\n          },\n          \"maxItems\": 1,\n          \"title\": \"Roles\",\n          \"type\": \"array\"\n        },\n        \"userClass\": {\n          \"$ref\": \"#/$defs/UserClass\",\n          \"default\": \"standard\"\n        },\n        \"Metadata\": {\n          \"anyOf\": [\n            {\n              \"additionalProperties\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"number\"\n                  },\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"$ref\": \"#/$defs/EntityLink\"\n                  },\n                  {\n                    \"items\": {\n                      \"$ref\": \"#/$defs/EntityLink\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  {\n                    \"type\": \"null\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Metadata\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"User\",\n      \"type\": \"object\"\n    },\n    \"UserClass\": {\n      \"description\": \"The ACL class level of the user\",\n      \"enum\": [\n        \"guest\",\n        \"standard\",\n        \"trusted\",\n        \"privileged\",\n        \"admin\"\n      ],\n      \"title\": \"UserClass\",\n      \"type\": \"string\"\n    },\n    \"ValueValidation\": {\n      \"properties\": {\n        \"datatype\": {\n          \"$ref\": \"#/$defs/DataType\"\n        },\n        \"value\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/EnumValidationValue\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Value\"\n        },\n        \"min\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Min\"\n        },\n        \"max\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Max\"\n        },\n        \"operator\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Operator\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"datatype\"\n      ],\n      \"title\": \"ValueValidation\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"A Pydantic Class representing a workflow in Albert.\\n\\nWorkflows are combinations of Data Templates and Parameter groups and their associated setpoints.\\n\\nAttributes\\n----------\\nname : str\\n    The name of the workflow.\\nparameter_group_setpoints : list[ParameterGroupSetpoints]\\n    The setpoints to apply to the parameter groups in the workflow.\\nid : str | None\\n    The AlbertID of the workflow. This is set when a workflow is retrived from the platform.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"ParameterGroups\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ParameterGroupSetpoints\"\n      },\n      \"title\": \"Parametergroups\",\n      \"type\": \"array\"\n    },\n    \"IntervalCombinations\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/IntervalCombination\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Intervalcombinations\"\n    },\n    \"albertId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Albertid\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"ParameterGroups\"\n  ],\n  \"title\": \"Workflow\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>parameter_group_setpoints</code>                 (<code>list[ParameterGroupSetpoints]</code>)             </li> <li> <code>interval_combinations</code>                 (<code>list[IntervalCombination] | None</code>)             </li> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>_interval_parameters</code>                 (<code>list[IntervalParameter]</code>)             </li> </ul>"},{"location":"resources/workflows/#albert.resources.workflows.Workflow.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.Workflow.parameter_group_setpoints","title":"parameter_group_setpoints","text":"<pre><code>parameter_group_setpoints: list[ParameterGroupSetpoints]\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.Workflow.interval_combinations","title":"interval_combinations","text":"<pre><code>interval_combinations: list[IntervalCombination] | None = (\n    None\n)\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.Workflow.id","title":"id","text":"<pre><code>id: str | None = None\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.Workflow.model_post_init","title":"model_post_init","text":"<pre><code>model_post_init(__context) -&gt; None\n</code></pre> Source code in <code>src/albert/resources/workflows.py</code> <pre><code>def model_post_init(self, __context) -&gt; None:\n    self._populate_interval_parameters()\n</code></pre>"},{"location":"resources/workflows/#albert.resources.workflows.Workflow.get_interval_id","title":"get_interval_id","text":"<pre><code>get_interval_id(parameter_values: dict[str, any]) -&gt; str\n</code></pre> <p>Get the interval ID for a set of parameter values.</p> <p>This method matches parameter values to intervals defined in the workflow and constructs a composite interval ID. For multiple parameters, the interval IDs are joined with 'X'.</p> <p>Parameters:</p> Name Type Description Default <code>parameter_values</code> <code>dict[str, any]</code> <p>Dictionary mapping parameter names to their values. Values can be numbers or strings that match the interval values defined in the workflow.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The composite interval ID string. For a single parameter this is just the interval ID. For multiple parameters, interval IDs are joined with 'X' (e.g. \"ROW1XROW2\").</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If any parameter value does not match a defined interval in the workflow.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; workflow = Workflow(...)\n&gt;&gt;&gt; # Single parameter\n&gt;&gt;&gt; workflow.get_interval_id({\"Temperature\": 25})\n'ROW1'\n&gt;&gt;&gt; # Multiple parameters\n&gt;&gt;&gt; workflow.get_interval_id({\"Temperature\": 25, \"Time\": 60})\n'ROW1XROW2'\n&gt;&gt;&gt; # Non-matching value raises error\n&gt;&gt;&gt; workflow.get_interval_id({\"Temperature\": 999})\nAlbertException: No matching interval found for parameter 'Temperature' with value '999'\n</code></pre> Source code in <code>src/albert/resources/workflows.py</code> <pre><code>def get_interval_id(self, parameter_values: dict[str, any]) -&gt; str:\n    \"\"\"Get the interval ID for a set of parameter values.\n\n    This method matches parameter values to intervals defined in the workflow and constructs\n    a composite interval ID. For multiple parameters, the interval IDs are joined with 'X'.\n\n    Parameters\n    ----------\n    parameter_values : dict[str, any]\n        Dictionary mapping parameter names to their values. Values can be numbers or strings\n        that match the interval values defined in the workflow.\n\n    Returns\n    -------\n    str\n        The composite interval ID string. For a single parameter this is just the interval ID.\n        For multiple parameters, interval IDs are joined with 'X' (e.g. \"ROW1XROW2\").\n\n    Raises\n    ------\n    ValueError\n        If any parameter value does not match a defined interval in the workflow.\n\n    Examples\n    --------\n    &gt;&gt;&gt; workflow = Workflow(...)\n    &gt;&gt;&gt; # Single parameter\n    &gt;&gt;&gt; workflow.get_interval_id({\"Temperature\": 25})\n    'ROW1'\n    &gt;&gt;&gt; # Multiple parameters\n    &gt;&gt;&gt; workflow.get_interval_id({\"Temperature\": 25, \"Time\": 60})\n    'ROW1XROW2'\n    &gt;&gt;&gt; # Non-matching value raises error\n    &gt;&gt;&gt; workflow.get_interval_id({\"Temperature\": 999})\n    AlbertException: No matching interval found for parameter 'Temperature' with value '999'\n    \"\"\"\n    interval_id = \"\"\n    for param_name, param_value in parameter_values.items():\n        matching_interval = None\n        for workflow_interval in self._interval_parameters:\n            if workflow_interval.interval_param_name.lower() == param_name.lower() and (\n                param_value == workflow_interval.interval_value\n                or str(param_value) == workflow_interval.interval_value\n            ):\n                matching_interval = workflow_interval\n                break\n\n        if matching_interval is None:\n            raise AlbertException(\n                f\"No matching interval found for parameter '{param_name}' with value '{param_value}'\"\n            )\n\n        interval_id += (\n            f\"X{matching_interval.interval_id}\"\n            if interval_id != \"\"\n            else matching_interval.interval_id\n        )\n\n    return interval_id\n</code></pre>"},{"location":"resources/worksheets/","title":"Worksheets","text":""},{"location":"resources/worksheets/#albert.resources.worksheets","title":"albert.resources.worksheets","text":""},{"location":"resources/worksheets/#albert.resources.worksheets.Worksheet","title":"Worksheet","text":"<pre><code>Worksheet(**data)\n</code></pre> <p>               Bases: <code>BaseSessionResource</code></p> <p>A worksheet entity.</p> <p>Attributes:</p> Name Type Description <code>sheets</code> <code>List[Sheet]</code> <p>A list of sheet entities.</p> <code>project_name</code> <code>str | None</code> <p>The name of the project.</p> <code>sheets_enabled</code> <code>bool</code> <p>Whether the sheets are enabled.</p> <code>project_id</code> <code>str</code> <p>The Albert ID of the project.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"AuditFields\": {\n      \"description\": \"The audit fields for a resource\",\n      \"properties\": {\n        \"by\": {\n          \"default\": null,\n          \"title\": \"By\",\n          \"type\": \"string\"\n        },\n        \"byName\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Byname\"\n        },\n        \"at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"At\"\n        }\n      },\n      \"title\": \"AuditFields\",\n      \"type\": \"object\"\n    },\n    \"Design\": {\n      \"description\": \"A Design in a Sheet. Designs are sheet subsections that are largly abstracted away from the user.\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the design.\\ndesign_type : DesignType\\n    The type of the design. Allowed values are `apps`, `products`, and `results`.\\nstate : DesignState | None\\n    The state of the design. Optional. Default is None.\\ngrid : pd.DataFrame | None\\n    The grid of the design. Optional. Default is None. Read-only.\\nrows : list[Row] | None\\n    The rows of the design. Optional. Default is None. Read-only.\\ncolumns : list[Column] | None\\n    The columns of the design. Optional. Default is None. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"state\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/DesignState\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"designType\": {\n          \"$ref\": \"#/$defs/DesignType\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"designType\"\n      ],\n      \"title\": \"Design\",\n      \"type\": \"object\"\n    },\n    \"DesignState\": {\n      \"description\": \"The state of a Design\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"collapsed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": false,\n          \"title\": \"Collapsed\"\n        }\n      },\n      \"title\": \"DesignState\",\n      \"type\": \"object\"\n    },\n    \"DesignType\": {\n      \"description\": \"The type of Design\",\n      \"enum\": [\n        \"apps\",\n        \"products\",\n        \"results\"\n      ],\n      \"title\": \"DesignType\",\n      \"type\": \"string\"\n    },\n    \"Sheet\": {\n      \"description\": \"A Sheet in Albert\\n\\nAttributes\\n----------\\nid : str\\n    The Albert ID of the sheet.\\nname : str\\n    The name of the sheet.\\nhidden : bool\\n    Whether the sheet is hidden.\\ndesigns : list[Design]\\n    The designs of the sheet.\\nproject_id : str\\n    The Albert ID of the project the sheet is in.\\ngrid : pd.DataFrame | None\\n    The grid of the sheet. Optional. Default is None. Read-only.\\ncolumns : list[Column]\\n    The columns of the sheet. Read-only.\\nrows : list[Row]\\n    The rows of the sheet. Read-only.\",\n      \"properties\": {\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/Status\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Created\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"Updated\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AuditFields\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"albertId\": {\n          \"title\": \"Albertid\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"Formulas\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/SheetFormulationRef\"\n          },\n          \"title\": \"Formulas\",\n          \"type\": \"array\"\n        },\n        \"hidden\": {\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        },\n        \"Designs\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/Design\"\n          },\n          \"title\": \"Designs\",\n          \"type\": \"array\"\n        },\n        \"project_id\": {\n          \"title\": \"Project Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"albertId\",\n        \"name\",\n        \"hidden\",\n        \"Designs\",\n        \"project_id\"\n      ],\n      \"title\": \"Sheet\",\n      \"type\": \"object\"\n    },\n    \"SheetFormulationRef\": {\n      \"description\": \"A reference to a formulation in a sheet\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"The Albert ID of the inventory item that is the formulation\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"The name of the formulation\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"hidden\": {\n          \"description\": \"Whether the formulation is hidden\",\n          \"title\": \"Hidden\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"hidden\"\n      ],\n      \"title\": \"SheetFormulationRef\",\n      \"type\": \"object\"\n    },\n    \"Status\": {\n      \"description\": \"The status of a resource\",\n      \"enum\": [\n        \"active\",\n        \"inactive\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"description\": \"A worksheet entity.\\n\\nAttributes\\n----------\\nsheets : List[Sheet]\\n    A list of sheet entities.\\nproject_name : str | None\\n    The name of the project.\\nsheets_enabled : bool\\n    Whether the sheets are enabled.\\nproject_id : str\\n    The Albert ID of the project.\",\n  \"properties\": {\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/Status\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Created\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Updated\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/AuditFields\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"Sheets\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/Sheet\"\n      },\n      \"title\": \"Sheets\",\n      \"type\": \"array\"\n    },\n    \"projectName\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Projectname\"\n    },\n    \"sheetEnabled\": {\n      \"default\": true,\n      \"title\": \"Sheetenabled\",\n      \"type\": \"boolean\"\n    },\n    \"projectId\": {\n      \"title\": \"Projectid\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"Sheets\",\n    \"projectId\"\n  ],\n  \"title\": \"Worksheet\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>created</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>updated</code>                 (<code>AuditFields | None</code>)             </li> <li> <code>_session</code>                 (<code>AlbertSession | None</code>)             </li> <li> <code>sheets</code>                 (<code>list[Sheet]</code>)             </li> <li> <code>project_name</code>                 (<code>str | None</code>)             </li> <li> <code>sheets_enabled</code>                 (<code>bool</code>)             </li> <li> <code>project_id</code>                 (<code>str</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>add_session_to_sheets</code> </li> </ul> Source code in <code>src/albert/resources/base.py</code> <pre><code>def __init__(self, **data):\n    super().__init__(**data)\n    self._session = data.get(\"session\")\n</code></pre>"},{"location":"resources/worksheets/#albert.resources.worksheets.Worksheet.sheets","title":"sheets","text":"<pre><code>sheets: list[Sheet]\n</code></pre>"},{"location":"resources/worksheets/#albert.resources.worksheets.Worksheet.project_name","title":"project_name","text":"<pre><code>project_name: str | None = None\n</code></pre>"},{"location":"resources/worksheets/#albert.resources.worksheets.Worksheet.sheets_enabled","title":"sheets_enabled","text":"<pre><code>sheets_enabled: bool = True\n</code></pre>"},{"location":"resources/worksheets/#albert.resources.worksheets.Worksheet.project_id","title":"project_id","text":"<pre><code>project_id: str\n</code></pre>"},{"location":"resources/worksheets/#albert.resources.worksheets.Worksheet.add_session_to_sheets","title":"add_session_to_sheets","text":"<pre><code>add_session_to_sheets()\n</code></pre> Source code in <code>src/albert/resources/worksheets.py</code> <pre><code>@model_validator(mode=\"after\")\ndef add_session_to_sheets(self):\n    if self.session is not None:\n        for s in self.sheets:\n            s._session = self.session\n            for d in s.designs:\n                d._session = self.session\n    return self\n</code></pre>"}]}